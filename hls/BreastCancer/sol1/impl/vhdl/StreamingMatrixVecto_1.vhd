-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingMatrixVecto_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    weightMem_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weightMem_V_ce0 : OUT STD_LOGIC;
    weightMem_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    thresMem_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    thresMem_V_ce0 : OUT STD_LOGIC;
    thresMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    alphaMem_V_ce0 : OUT STD_LOGIC;
    alphaMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in7_V_0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in7_V_1 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_out7_V_0 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of StreamingMatrixVecto_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_733 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_753 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal exitcond_reg_733_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_reg_733_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal i6_reg_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_idx_2_fu_268_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op75_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8 : BOOLEAN;
    signal ap_predicate_op161_write_state21 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_733_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_reg_737 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sf_load_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_3_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_3_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8 : BOOLEAN;
    signal ap_predicate_op165_write_state22 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_s_reg_753_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_load_6_reg_757 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_768_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_3_fu_358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_782 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_793_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_nf_1_fu_382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_nf_1_reg_799 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal inputBuf_V_load_reg_804 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightMem_V_load_reg_809 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1219_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_355_i_fu_451_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_355_i_reg_819 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1223_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_507_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp4_reg_829 : STD_LOGIC_VECTOR (1 downto 0);
    signal pct_V_i_fu_541_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal pct_V_i_reg_834 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_fu_567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_677_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_38_reg_870 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_V_load_reg_875 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_683_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_103_1_reg_880 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal thresMem_V_load_reg_900 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_30_reg_905 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_36_reg_910 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_18_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_18_reg_917 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_656_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_39_reg_923 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_fu_661_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_reg_928 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_19_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_19_reg_933 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal inputBuf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal inputBuf_V_ce0 : STD_LOGIC;
    signal inputBuf_V_we0 : STD_LOGIC;
    signal in_idx_reg_195 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_nf_phi_fu_210_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i6_phi_fu_222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_nf_1_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_nf_1_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_s_reg_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal accPopCount_V_fu_100 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_0_1_fu_286_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_1_fu_278_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sf_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal accPopCount_V_0_0_2_fu_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_2_fu_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1214_fu_274_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1215_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_394_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal masked_V_fu_400_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1216_fu_405_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1217_fu_409_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1218_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_352_i_cast_fu_421_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_353_i_cast_fu_433_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_fu_445_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_cast_fu_417_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1220_fu_457_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1221_fu_469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1222_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_360_i_cast_cast_fu_477_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_361_i_cast_cast_fu_489_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp5_fu_501_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_357_i_cast_cast_fu_465_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_355_i_cast_fu_513_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_356_i_cast_fu_516_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp4_cast_fu_525_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp3_fu_519_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_363_i_fu_528_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_363_i_cast_fu_534_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_364_i_cast_fu_538_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i_fu_550_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal agg_result_V_i_fu_557_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal agg_result_V_i_cast_fu_563_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_cast3_fu_627_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_31_fu_617_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_34_fu_631_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal accResidual_0_V_fu_666_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_611_ce : STD_LOGIC;
    signal grp_fu_677_ce : STD_LOGIC;
    signal grp_fu_683_ce : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_214 : BOOLEAN;
    signal ap_condition_842 : BOOLEAN;
    signal ap_condition_846 : BOOLEAN;

    component BlackBoxJam_mul_24s_24s_48_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component BlackBoxJam_mul_mul_16s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component StreamingMatrixVecto_1_inputBuf_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    inputBuf_V_U : component StreamingMatrixVecto_1_inputBuf_V
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inputBuf_V_address0,
        ce0 => inputBuf_V_ce0,
        we0 => inputBuf_V_we0,
        d0 => tmp_V_reg_782,
        q0 => inputBuf_V_q0);

    BlackBoxJam_mul_24s_24s_48_4_1_U610 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => alphaMem_V_load_reg_875,
        din1 => tmp_103_1_reg_880,
        ce => grp_fu_611_ce,
        dout => grp_fu_611_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U611 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_25_reg_839,
        din1 => means_in7_V_0,
        ce => grp_fu_677_ce,
        dout => grp_fu_677_p2);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U612 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_0_2_fu_120,
        din1 => means_in7_V_1,
        din2 => tmp_38_reg_870,
        ce => grp_fu_683_ce,
        dout => grp_fu_683_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accPopCount_V_0_0_2_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter3_reg = ap_const_lv1_0) and (exitcond_reg_733_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                accPopCount_V_0_0_2_fu_116 <= tmp_25_reg_839;
            elsif (((tmp_26_reg_768_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                accPopCount_V_0_0_2_fu_116 <= ap_const_lv16_0;
            elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_0_0_2_fu_116 <= accPopCount_V_fu_100;
            end if; 
        end if;
    end process;

    accPopCount_V_1_0_2_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                accPopCount_V_1_0_2_fu_120 <= ap_const_lv16_0;
            elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_1_0_2_fu_120 <= accPopCount_V_1_fu_104;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_nf_1_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_214)) then
                if (((tmp_26_fu_349_p2 = ap_const_lv1_0) and (exitcond_reg_733 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_mux_nf_phi_fu_210_p4;
                elsif (((tmp_26_fu_349_p2 = ap_const_lv1_1) and (exitcond_reg_733 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= nf_3_fu_358_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_reg_pp0_iter0_nf_1_reg_229;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_s_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_753_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_239 <= inputBuf_V_load_reg_804;
            elsif (((tmp_s_reg_753 = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_239 <= tmp_V_reg_782;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_239 <= ap_phi_reg_pp0_iter1_p_s_reg_239;
            end if; 
        end if;
    end process;

    i6_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i6_reg_218 <= ap_const_lv16_0;
            elsif (((exitcond_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i6_reg_218 <= i_reg_737;
            end if; 
        end if;
    end process;

    in_idx_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_idx_reg_195 <= in_idx_2_fu_268_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                in_idx_reg_195 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    nf_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                nf_reg_206 <= ap_const_lv32_0;
            elsif (((exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                nf_reg_206 <= p_nf_1_reg_799;
            end if; 
        end if;
    end process;

    sf_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_fu_349_p2 = ap_const_lv1_0) and (exitcond_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                sf_fu_112 <= sf_3_reg_747;
            elsif ((((tmp_26_fu_349_p2 = ap_const_lv1_1) and (exitcond_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                sf_fu_112 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                accPopCount_V_1_fu_104 <= accPopCount_V_1_0_1_fu_278_p3;
                accPopCount_V_fu_100 <= accPopCount_V_0_0_1_fu_286_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                addconv_reg_928 <= addconv_fu_661_p2;
                tmp_39_reg_923 <= tmp_39_fu_656_p2;
                tmp_V_18_reg_917 <= tmp_V_18_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter4_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                alphaMem_V_load_reg_875 <= alphaMem_V_q0;
                tmp_38_reg_870 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter1_p_s_reg_239 <= ap_phi_reg_pp0_iter0_p_s_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_reg_733 <= exitcond_fu_314_p2;
                exitcond_reg_733_pp0_iter1_reg <= exitcond_reg_733;
                exitcond_reg_733_pp0_iter2_reg <= exitcond_reg_733_pp0_iter1_reg;
                exitcond_reg_733_pp0_iter3_reg <= exitcond_reg_733_pp0_iter2_reg;
                exitcond_reg_733_pp0_iter4_reg <= exitcond_reg_733_pp0_iter3_reg;
                exitcond_reg_733_pp0_iter5_reg <= exitcond_reg_733_pp0_iter4_reg;
                exitcond_reg_733_pp0_iter6_reg <= exitcond_reg_733_pp0_iter5_reg;
                exitcond_reg_733_pp0_iter7_reg <= exitcond_reg_733_pp0_iter6_reg;
                exitcond_reg_733_pp0_iter8_reg <= exitcond_reg_733_pp0_iter7_reg;
                exitcond_reg_733_pp0_iter9_reg <= exitcond_reg_733_pp0_iter8_reg;
                pct_V_i_reg_834 <= pct_V_i_fu_541_p2;
                    tmp_27_reg_793_pp0_iter2_reg(31 downto 0) <= tmp_27_reg_793(31 downto 0);
                    tmp_27_reg_793_pp0_iter3_reg(31 downto 0) <= tmp_27_reg_793_pp0_iter2_reg(31 downto 0);
                    tmp_27_reg_793_pp0_iter4_reg(31 downto 0) <= tmp_27_reg_793_pp0_iter3_reg(31 downto 0);
                    tmp_27_reg_793_pp0_iter5_reg(31 downto 0) <= tmp_27_reg_793_pp0_iter4_reg(31 downto 0);
                    tmp_27_reg_793_pp0_iter6_reg(31 downto 0) <= tmp_27_reg_793_pp0_iter5_reg(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_737 <= i_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_753 = ap_const_lv1_0) and (exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                inputBuf_V_load_reg_804 <= inputBuf_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_nf_1_reg_799 <= p_nf_1_fu_382_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_3_reg_747 <= sf_3_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sf_load_6_reg_757 <= sf_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_load_reg_742 <= sf_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                thresMem_V_load_reg_900 <= thresMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp4_reg_829 <= tmp4_fu_507_p2;
                tmp_1219_reg_814 <= masked_V_fu_400_p2(3 downto 3);
                tmp_1223_reg_824 <= masked_V_fu_400_p2(7 downto 7);
                tmp_25_reg_839 <= tmp_25_fu_567_p2;
                tmp_26_reg_768_pp0_iter1_reg <= tmp_26_reg_768;
                tmp_26_reg_768_pp0_iter2_reg <= tmp_26_reg_768_pp0_iter1_reg;
                tmp_26_reg_768_pp0_iter3_reg <= tmp_26_reg_768_pp0_iter2_reg;
                tmp_26_reg_768_pp0_iter4_reg <= tmp_26_reg_768_pp0_iter3_reg;
                tmp_26_reg_768_pp0_iter5_reg <= tmp_26_reg_768_pp0_iter4_reg;
                tmp_26_reg_768_pp0_iter6_reg <= tmp_26_reg_768_pp0_iter5_reg;
                tmp_26_reg_768_pp0_iter7_reg <= tmp_26_reg_768_pp0_iter6_reg;
                tmp_26_reg_768_pp0_iter8_reg <= tmp_26_reg_768_pp0_iter7_reg;
                tmp_355_i_reg_819 <= tmp_355_i_fu_451_p2;
                tmp_s_reg_753_pp0_iter1_reg <= tmp_s_reg_753;
                weightMem_V_load_reg_809 <= weightMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter4_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_103_1_reg_880 <= grp_fu_683_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_733 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_22_reg_763 <= tmp_22_fu_344_p2;
                tmp_26_reg_768 <= tmp_26_fu_349_p2;
                tmp_s_reg_753 <= tmp_s_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768 = ap_const_lv1_1) and (exitcond_reg_733 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_27_reg_793(31 downto 0) <= tmp_27_fu_372_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_30_reg_905 <= grp_fu_611_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_36_reg_910 <= tmp_34_fu_631_p2(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_26_reg_768_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_19_reg_933 <= tmp_V_19_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_reg_782 <= in_V_V_dout;
            end if;
        end if;
    end process;
    tmp_27_reg_793(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_793_pp0_iter2_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_793_pp0_iter3_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_793_pp0_iter4_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_793_pp0_iter5_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_27_reg_793_pp0_iter6_reg(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, tmp_fu_262_p2, ap_CS_fsm_state2, exitcond_fu_314_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_314_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((exitcond_fu_314_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    accPopCount_V_0_0_1_fu_286_p3 <= 
        accPopCount_V_fu_100 when (tmp_1214_fu_274_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_1_0_1_fu_278_p3 <= 
        ap_const_lv16_0 when (tmp_1214_fu_274_p1(0) = '1') else 
        accPopCount_V_1_fu_104;
    accResidual_0_V_fu_666_p3 <= 
        tmp_39_reg_923 when (tmp_V_18_reg_917(0) = '1') else 
        addconv_reg_928;
    addconv_fu_661_p2 <= std_logic_vector(unsigned(tmp_36_reg_910) + unsigned(means_out7_V_0));
        agg_result_V_i_cast_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(agg_result_V_i_fu_557_p2),16));

    agg_result_V_i_fu_557_p2 <= std_logic_vector(signed(ap_const_lv5_18) + signed(tmp_i_fu_550_p3));
    alphaMem_V_address0 <= tmp_27_reg_793_pp0_iter4_reg(9 - 1 downto 0);

    alphaMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            alphaMem_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op161_write_state21)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op161_write_state21 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op161_write_state21)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op161_write_state21 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op161_write_state21)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op161_write_state21 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter9, ap_predicate_op165_write_state22)
    begin
                ap_block_pp0_stage1_01001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op165_write_state22 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter9, ap_predicate_op165_write_state22)
    begin
                ap_block_pp0_stage1_11001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op165_write_state22 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter9, ap_predicate_op165_write_state22)
    begin
                ap_block_pp0_stage1_subdone <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op165_write_state22 = ap_const_boolean_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp0_stage0_iter9_assign_proc : process(out_V_V_full_n, ap_predicate_op161_write_state21)
    begin
                ap_block_state21_pp0_stage0_iter9 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op161_write_state21 = ap_const_boolean_1));
    end process;


    ap_block_state22_pp0_stage1_iter9_assign_proc : process(out_V_V_full_n, ap_predicate_op165_write_state22)
    begin
                ap_block_state22_pp0_stage1_iter9 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state22 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, ap_predicate_op75_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_214_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_214 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_842_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op161_write_state21, ap_block_pp0_stage0_01001)
    begin
                ap_condition_842 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op161_write_state21 = ap_const_boolean_1));
    end process;


    ap_condition_846_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_predicate_op165_write_state22, ap_block_pp0_stage1_01001)
    begin
                ap_condition_846 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op165_write_state22 = ap_const_boolean_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_314_p2)
    begin
        if ((exitcond_fu_314_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i6_phi_fu_222_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_733, i6_reg_218, i_reg_737)
    begin
        if (((exitcond_reg_733 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i6_phi_fu_222_p4 <= i_reg_737;
        else 
            ap_phi_mux_i6_phi_fu_222_p4 <= i6_reg_218;
        end if; 
    end process;


    ap_phi_mux_nf_phi_fu_210_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, nf_reg_206, exitcond_reg_733_pp0_iter1_reg, p_nf_1_reg_799)
    begin
        if (((exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_nf_phi_fu_210_p4 <= p_nf_1_reg_799;
        else 
            ap_phi_mux_nf_phi_fu_210_p4 <= nf_reg_206;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_nf_1_reg_229 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_s_reg_239 <= "XXXXXXXX";

    ap_predicate_op161_write_state21_assign_proc : process(exitcond_reg_733_pp0_iter8_reg, tmp_26_reg_768_pp0_iter8_reg)
    begin
                ap_predicate_op161_write_state21 <= ((tmp_26_reg_768_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op165_write_state22_assign_proc : process(tmp_26_reg_768_pp0_iter8_reg, exitcond_reg_733_pp0_iter9_reg)
    begin
                ap_predicate_op165_write_state22 <= ((tmp_26_reg_768_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op75_read_state5_assign_proc : process(exitcond_reg_733, tmp_s_reg_753)
    begin
                ap_predicate_op75_read_state5 <= ((tmp_s_reg_753 = ap_const_lv1_1) and (exitcond_reg_733 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_fu_314_p2 <= "1" when (ap_phi_mux_i6_phi_fu_222_p4 = ap_const_lv16_8000) else "0";

    grp_fu_611_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_611_ce <= ap_const_logic_1;
        else 
            grp_fu_611_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_677_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_677_ce <= ap_const_logic_1;
        else 
            grp_fu_677_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_683_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_683_ce <= ap_const_logic_1;
        else 
            grp_fu_683_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_320_p2 <= std_logic_vector(unsigned(ap_phi_mux_i6_phi_fu_222_p4) + unsigned(ap_const_lv16_1));

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_733, tmp_s_reg_753)
    begin
        if (((tmp_s_reg_753 = ap_const_lv1_1) and (exitcond_reg_733 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op75_read_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in_idx_2_fu_268_p2 <= std_logic_vector(unsigned(in_idx_reg_195) + unsigned(ap_const_lv2_1));

    inputBuf_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_20_fu_364_p1, tmp_19_fu_390_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                inputBuf_V_address0 <= tmp_19_fu_390_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inputBuf_V_address0 <= tmp_20_fu_364_p1(7 - 1 downto 0);
            else 
                inputBuf_V_address0 <= "XXXXXXX";
            end if;
        else 
            inputBuf_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    inputBuf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inputBuf_V_ce0 <= ap_const_logic_1;
        else 
            inputBuf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_753, ap_CS_fsm_pp0_stage1, exitcond_reg_733_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_s_reg_753 = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputBuf_V_we0 <= ap_const_logic_1;
        else 
            inputBuf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    masked_V_fu_400_p2 <= (weightMem_V_load_reg_809 xor tmp1_fu_394_p2);
    nf_3_fu_358_p2 <= std_logic_vector(unsigned(ap_phi_mux_nf_phi_fu_210_p4) + unsigned(ap_const_lv32_1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, exitcond_reg_733_pp0_iter8_reg, tmp_26_reg_768_pp0_iter8_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_reg_733_pp0_iter9_reg)
    begin
        if ((((tmp_26_reg_768_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter9_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((tmp_26_reg_768_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_733_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_V_din_assign_proc : process(ap_enable_reg_pp0_iter9, tmp_V_18_reg_917, tmp_V_19_reg_933, ap_condition_842, ap_condition_846)
    begin
        if ((ap_enable_reg_pp0_iter9 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_846)) then 
                out_V_V_din <= tmp_V_19_reg_933;
            elsif ((ap_const_boolean_1 = ap_condition_842)) then 
                out_V_V_din <= tmp_V_18_reg_917;
            else 
                out_V_V_din <= "X";
            end if;
        else 
            out_V_V_din <= "X";
        end if; 
    end process;


    out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, ap_predicate_op161_write_state21, ap_block_pp0_stage0_11001, ap_predicate_op165_write_state22, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op165_write_state22 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op161_write_state21 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_nf_1_fu_382_p3 <= 
        ap_const_lv32_0 when (tmp_37_fu_376_p2(0) = '1') else 
        ap_phi_reg_pp0_iter1_nf_1_reg_229;
    pct_V_i_fu_541_p2 <= std_logic_vector(unsigned(tmp_363_i_cast_fu_534_p1) + unsigned(tmp_364_i_cast_fu_538_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sf_3_fu_326_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(sf_fu_112));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_V_address0 <= tmp_27_reg_793_pp0_iter6_reg(9 - 1 downto 0);

    thresMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            thresMem_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_394_p2 <= (ap_phi_reg_pp0_iter2_p_s_reg_239 xor ap_const_lv8_FF);
    tmp2_fu_445_p2 <= std_logic_vector(unsigned(tmp_352_i_cast_fu_421_p1) + unsigned(tmp_353_i_cast_fu_433_p1));
    tmp3_fu_519_p2 <= std_logic_vector(unsigned(tmp_355_i_cast_fu_513_p1) + unsigned(tmp_356_i_cast_fu_516_p1));
    tmp4_cast_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_reg_829),3));
    tmp4_fu_507_p2 <= std_logic_vector(unsigned(tmp5_fu_501_p2) + unsigned(tmp_357_i_cast_cast_fu_465_p1));
    tmp5_fu_501_p2 <= std_logic_vector(unsigned(tmp_360_i_cast_cast_fu_477_p1) + unsigned(tmp_361_i_cast_cast_fu_489_p1));
    tmp_1214_fu_274_p1 <= in_idx_reg_195(1 - 1 downto 0);
    tmp_1215_fu_338_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_210_p4),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_1216_fu_405_p1 <= masked_V_fu_400_p2(1 - 1 downto 0);
    tmp_1217_fu_409_p3 <= masked_V_fu_400_p2(1 downto 1);
    tmp_1218_fu_425_p3 <= masked_V_fu_400_p2(2 downto 2);
    tmp_1220_fu_457_p3 <= masked_V_fu_400_p2(4 downto 4);
    tmp_1221_fu_469_p3 <= masked_V_fu_400_p2(5 downto 5);
    tmp_1222_fu_481_p3 <= masked_V_fu_400_p2(6 downto 6);
    tmp_19_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_6_reg_757),64));
    tmp_20_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_6_reg_757),64));
    tmp_22_fu_344_p2 <= std_logic_vector(unsigned(tmp_1215_fu_338_p2) + unsigned(sf_load_reg_742));
    tmp_23_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_reg_763),64));
    tmp_25_fu_567_p2 <= std_logic_vector(unsigned(accPopCount_V_0_0_2_fu_116) + unsigned(agg_result_V_i_cast_fu_563_p1));
    tmp_26_fu_349_p2 <= "1" when (sf_3_reg_747 = ap_const_lv32_40) else "0";
    tmp_27_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nf_reg_206),64));
    tmp_31_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_reg_905),49));
    tmp_33_cast3_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_620_p3),49));
    tmp_33_fu_620_p3 <= (thresMem_V_load_reg_900 & ap_const_lv8_0);
    tmp_34_fu_631_p2 <= std_logic_vector(unsigned(tmp_33_cast3_fu_627_p1) + unsigned(tmp_31_fu_617_p1));
    tmp_352_i_cast_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1217_fu_409_p3),2));
    tmp_353_i_cast_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1218_fu_425_p3),2));
    tmp_355_i_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_355_i_reg_819),3));
    tmp_355_i_fu_451_p2 <= std_logic_vector(unsigned(tmp2_fu_445_p2) + unsigned(tmp_i_cast_fu_417_p1));
    tmp_356_i_cast_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1219_reg_814),3));
    tmp_357_i_cast_cast_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1220_fu_457_p3),2));
    tmp_360_i_cast_cast_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1221_fu_469_p3),2));
    tmp_361_i_cast_cast_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1222_fu_481_p3),2));
    tmp_363_i_cast_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_363_i_fu_528_p2),4));
    tmp_363_i_fu_528_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_525_p1) + unsigned(tmp3_fu_519_p2));
    tmp_364_i_cast_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1223_reg_824),4));
    tmp_37_fu_376_p2 <= "1" when (ap_phi_reg_pp0_iter1_nf_1_reg_229 = ap_const_lv32_200) else "0";
    tmp_39_fu_656_p2 <= std_logic_vector(unsigned(tmp_36_reg_910) - unsigned(means_out7_V_0));
    tmp_V_18_fu_647_p2 <= "1" when (signed(tmp_36_reg_910) > signed(ap_const_lv24_0)) else "0";
    tmp_V_19_fu_671_p2 <= "1" when (signed(accResidual_0_V_fu_666_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_fu_262_p2 <= "1" when (in_idx_reg_195 = ap_const_lv2_2) else "0";
    tmp_i_cast_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1216_fu_405_p1),2));
    tmp_i_fu_550_p3 <= (pct_V_i_reg_834 & ap_const_lv1_0);
    tmp_s_fu_332_p2 <= "1" when (ap_phi_mux_nf_phi_fu_210_p4 = ap_const_lv32_0) else "0";
    weightMem_V_address0 <= tmp_23_fu_368_p1(15 - 1 downto 0);

    weightMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weightMem_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
