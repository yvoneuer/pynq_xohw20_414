-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingMatrixVecto_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    weightMem_0_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weightMem_0_V_ce0 : OUT STD_LOGIC;
    weightMem_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weightMem_1_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weightMem_1_V_ce0 : OUT STD_LOGIC;
    weightMem_1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weightMem_2_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weightMem_2_V_ce0 : OUT STD_LOGIC;
    weightMem_2_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weightMem_3_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weightMem_3_V_ce0 : OUT STD_LOGIC;
    weightMem_3_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    thresMem_0_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    thresMem_0_V_ce0 : OUT STD_LOGIC;
    thresMem_0_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    thresMem_1_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    thresMem_1_V_ce0 : OUT STD_LOGIC;
    thresMem_1_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    thresMem_2_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    thresMem_2_V_ce0 : OUT STD_LOGIC;
    thresMem_2_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    thresMem_3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    thresMem_3_V_ce0 : OUT STD_LOGIC;
    thresMem_3_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_0_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    alphaMem_0_V_ce0 : OUT STD_LOGIC;
    alphaMem_0_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_1_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    alphaMem_1_V_ce0 : OUT STD_LOGIC;
    alphaMem_1_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_2_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    alphaMem_2_V_ce0 : OUT STD_LOGIC;
    alphaMem_2_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_3_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    alphaMem_3_V_ce0 : OUT STD_LOGIC;
    alphaMem_3_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in4_V_0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in4_V_1 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_out4_V_0 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of StreamingMatrixVecto_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv15_5100 : STD_LOGIC_VECTOR (14 downto 0) := "101000100000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_1376 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal exitcond_reg_1376_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_reg_1376_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_reg_383 : STD_LOGIC_VECTOR (31 downto 0);
    signal i8_reg_395 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_NaivePopCount_fu_425_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_467 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter11 : BOOLEAN;
    signal ap_predicate_op349_write_state28 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op131_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter11 : BOOLEAN;
    signal ap_predicate_op345_write_state27 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_NaivePopCount_fu_430_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_471 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_idx_4_fu_481_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1376_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_641_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_1380 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sf_load_reg_1385 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_5_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_5_reg_1390 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1396_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_load83_reg_1400 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1411_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_5_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_1425 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_reg_1431 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_reg_1447_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_nf_1_fu_716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_nf_1_reg_1459 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_load_reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal weightMem_0_V_load_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal weightMem_1_V_load_reg_1474 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_reg_1479 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_fu_734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_reg_1485 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_1_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_1_reg_1490 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_2_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_2_reg_1505 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_3_fu_749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_0_3_reg_1510 : STD_LOGIC_VECTOR (31 downto 0);
    signal accPopCount_0_0_V_fu_764_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_0_V_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_1_V_fu_774_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_1_V_reg_1520 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_2_V_fu_810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_2_V_reg_1525 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_3_V_fu_820_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_3_V_reg_1530 : STD_LOGIC_VECTOR (15 downto 0);
    signal means_in4_V_0_load_reg_1540 : STD_LOGIC_VECTOR (23 downto 0);
    signal means_in4_V_1_load_reg_1568 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1204_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_68_reg_1581 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1210_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_168_0_1_reg_1586 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1216_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_168_0_2_reg_1621 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1221_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_168_0_3_reg_1626 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1226_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_169_1_reg_1631 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal grp_fu_1233_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_169_1_1_reg_1636 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_0_V_load_reg_1641 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_1_V_load_reg_1646 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_2_V_load_reg_1651 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_3_V_load_reg_1656 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1240_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_169_1_2_reg_1661 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1246_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_169_1_3_reg_1666 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_920_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_5_reg_1731 : STD_LOGIC_VECTOR (47 downto 0);
    signal thresMem_0_V_load_reg_1736 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_932_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_5_1_reg_1741 : STD_LOGIC_VECTOR (47 downto 0);
    signal thresMem_1_V_load_reg_1746 : STD_LOGIC_VECTOR (23 downto 0);
    signal thresMem_2_V_load_reg_1751 : STD_LOGIC_VECTOR (23 downto 0);
    signal thresMem_3_V_load_reg_1756 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_69_reg_1761 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_165_1_reg_1768 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_944_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_5_2_reg_1775 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_956_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_5_3_reg_1780 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_165_2_reg_1785 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_165_3_reg_1792 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_70_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_1799 : STD_LOGIC_VECTOR (0 downto 0);
    signal means_out4_V_0_load_reg_1805 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_71_fu_1091_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_71_reg_1813 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_fu_1096_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_reg_1818 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_176_0_1_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_0_1_reg_1823 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_0_1_fu_1106_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_179_0_1_reg_1829 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_1_fu_1111_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_1_reg_1834 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_176_0_2_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_0_2_reg_1839 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_0_2_fu_1131_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_179_0_2_reg_1845 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_2_fu_1135_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_2_reg_1850 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_176_0_3_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_0_3_reg_1855 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_0_3_fu_1144_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_179_0_3_reg_1861 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_3_fu_1148_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_0_3_reg_1866 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_176_1_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_reg_1871 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_1_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_1_reg_1876 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_2_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_2_reg_1881 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_3_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_1_3_reg_1886 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal inputBuf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal inputBuf_V_ce0 : STD_LOGIC;
    signal inputBuf_V_we0 : STD_LOGIC;
    signal grp_NaivePopCount_fu_425_in_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_NaivePopCount_fu_425_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage1_iter0_ignore_call15 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call15 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2_ignore_call15 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3_ignore_call15 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4_ignore_call15 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5_ignore_call15 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6_ignore_call15 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7_ignore_call15 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8_ignore_call15 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter9_ignore_call15 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter10_ignore_call15 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter11_ignore_call15 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter12_ignore_call15 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp159 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter0_ignore_call15 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call15 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call15 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3_ignore_call15 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4_ignore_call15 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5_ignore_call15 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6_ignore_call15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7_ignore_call15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8_ignore_call15 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9_ignore_call15 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter10_ignore_call15 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter11_ignore_call15 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter12_ignore_call15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp165 : BOOLEAN;
    signal grp_NaivePopCount_fu_430_in_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_NaivePopCount_fu_430_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage1_iter0_ignore_call21 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call21 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2_ignore_call21 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3_ignore_call21 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4_ignore_call21 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5_ignore_call21 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6_ignore_call21 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7_ignore_call21 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8_ignore_call21 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter9_ignore_call21 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter10_ignore_call21 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter11_ignore_call21 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter12_ignore_call21 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp160 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter0_ignore_call21 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call21 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2_ignore_call21 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3_ignore_call21 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4_ignore_call21 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5_ignore_call21 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6_ignore_call21 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7_ignore_call21 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8_ignore_call21 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9_ignore_call21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter10_ignore_call21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter11_ignore_call21 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter12_ignore_call21 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp166 : BOOLEAN;
    signal in_idx_reg_372 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_nf_phi_fu_387_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i8_phi_fu_399_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter0_nf_1_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_nf_1_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_s_phi_fu_419_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_s_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_14_fu_1169_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_15_fu_1195_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal accPopCount_V_fu_112 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_0_1_fu_499_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_1_fu_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_1_1_fu_515_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_2_fu_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_2_1_fu_531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_3_fu_124 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_3_1_fu_547_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_fu_128 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_1_fu_491_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_1_fu_132 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_1_1_fu_507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_2_fu_136 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_2_1_fu_523_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_3_fu_140 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_3_1_fu_539_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sf_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal accPopCount_0_0_V_4_fu_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_1_V_4_fu_156 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_2_V_4_fu_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_3_V_4_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_2_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_1_2_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_2_2_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_3_2_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1205_fu_487_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1207_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1206_fu_659_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal accPopCount_0_0_V_s_fu_760_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_1_V_s_fu_770_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_2_V_s_fu_806_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_0_3_V_s_fu_816_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_2_fu_965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_2_cast3_fu_972_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_67_fu_962_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_fu_976_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_2_1_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_2_1_cast5_fu_1002_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_163_1_fu_992_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_1_fu_1006_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_2_2_fu_1025_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_2_2_cast7_fu_1032_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_163_2_fu_1022_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_2_fu_1036_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_2_3_fu_1055_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_2_3_cast9_fu_1062_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_163_3_fu_1052_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_3_fu_1066_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal accResidual_0_V_fu_1116_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal accResidual_1_V_fu_1121_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal accResidual_2_V_fu_1164_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal accResidual_3_V_fu_1178_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_920_ce : STD_LOGIC;
    signal grp_fu_932_ce : STD_LOGIC;
    signal grp_fu_944_ce : STD_LOGIC;
    signal grp_fu_956_ce : STD_LOGIC;
    signal grp_fu_1204_ce : STD_LOGIC;
    signal grp_fu_1210_ce : STD_LOGIC;
    signal grp_fu_1216_ce : STD_LOGIC;
    signal grp_fu_1221_ce : STD_LOGIC;
    signal grp_fu_1226_ce : STD_LOGIC;
    signal grp_fu_1233_ce : STD_LOGIC;
    signal grp_fu_1240_ce : STD_LOGIC;
    signal grp_fu_1246_ce : STD_LOGIC;
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_293 : BOOLEAN;
    signal ap_condition_349 : BOOLEAN;
    signal ap_condition_1454 : BOOLEAN;
    signal ap_condition_1458 : BOOLEAN;

    component NaivePopCount IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component BlackBoxJam_mul_24s_24s_48_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component BlackBoxJam_mul_mul_16s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component StreamingMatrixVecto_7_inputBuf_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    inputBuf_V_U : component StreamingMatrixVecto_7_inputBuf_V
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inputBuf_V_address0,
        ce0 => inputBuf_V_ce0,
        we0 => inputBuf_V_we0,
        d0 => tmp_V_reg_1425,
        q0 => inputBuf_V_q0);

    grp_NaivePopCount_fu_425 : component NaivePopCount
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V_read => grp_NaivePopCount_fu_425_in_V_read,
        ap_return => grp_NaivePopCount_fu_425_ap_return,
        ap_ce => grp_NaivePopCount_fu_425_ap_ce);

    grp_NaivePopCount_fu_430 : component NaivePopCount
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V_read => grp_NaivePopCount_fu_430_in_V_read,
        ap_return => grp_NaivePopCount_fu_430_ap_return,
        ap_ce => grp_NaivePopCount_fu_430_ap_ce);

    BlackBoxJam_mul_24s_24s_48_4_1_U539 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_169_1_reg_1631,
        din1 => alphaMem_0_V_load_reg_1641,
        ce => grp_fu_920_ce,
        dout => grp_fu_920_p2);

    BlackBoxJam_mul_24s_24s_48_4_1_U540 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_169_1_1_reg_1636,
        din1 => alphaMem_1_V_load_reg_1646,
        ce => grp_fu_932_ce,
        dout => grp_fu_932_p2);

    BlackBoxJam_mul_24s_24s_48_4_1_U541 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_169_1_2_reg_1661,
        din1 => alphaMem_2_V_load_reg_1651,
        ce => grp_fu_944_ce,
        dout => grp_fu_944_p2);

    BlackBoxJam_mul_24s_24s_48_4_1_U542 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_169_1_3_reg_1666,
        din1 => alphaMem_3_V_load_reg_1656,
        ce => grp_fu_956_ce,
        dout => grp_fu_956_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U543 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_0_0_V_reg_1515,
        din1 => means_in4_V_0,
        ce => grp_fu_1204_ce,
        dout => grp_fu_1204_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U544 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_0_1_V_reg_1520,
        din1 => means_in4_V_0,
        ce => grp_fu_1210_ce,
        dout => grp_fu_1210_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U545 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_0_2_V_reg_1525,
        din1 => means_in4_V_0_load_reg_1540,
        ce => grp_fu_1216_ce,
        dout => grp_fu_1216_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U546 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_0_3_V_reg_1530,
        din1 => means_in4_V_0_load_reg_1540,
        ce => grp_fu_1221_ce,
        dout => grp_fu_1221_p2);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U547 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_0_2_fu_168,
        din1 => means_in4_V_1,
        din2 => tmp_68_reg_1581,
        ce => grp_fu_1226_ce,
        dout => grp_fu_1226_p3);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U548 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_1_2_fu_172,
        din1 => means_in4_V_1,
        din2 => tmp_168_0_1_reg_1586,
        ce => grp_fu_1233_ce,
        dout => grp_fu_1233_p3);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U549 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_2_2_fu_176,
        din1 => means_in4_V_1_load_reg_1568,
        din2 => tmp_168_0_2_reg_1621,
        ce => grp_fu_1240_ce,
        dout => grp_fu_1240_p3);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U550 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_3_2_fu_180,
        din1 => means_in4_V_1_load_reg_1568,
        din2 => tmp_168_0_3_reg_1626,
        ce => grp_fu_1246_ce,
        dout => grp_fu_1246_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accPopCount_0_0_V_4_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter5_reg = ap_const_lv1_0))) then 
                accPopCount_0_0_V_4_fu_152 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_0) and (exitcond_reg_1376_pp0_iter5_reg = ap_const_lv1_0))) then 
                accPopCount_0_0_V_4_fu_152 <= accPopCount_0_0_V_fu_764_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_0_0_V_4_fu_152 <= accPopCount_V_fu_112;
            end if; 
        end if;
    end process;

    accPopCount_0_1_V_4_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter5_reg = ap_const_lv1_0))) then 
                accPopCount_0_1_V_4_fu_156 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_0) and (exitcond_reg_1376_pp0_iter5_reg = ap_const_lv1_0))) then 
                accPopCount_0_1_V_4_fu_156 <= accPopCount_0_1_V_fu_774_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_0_1_V_4_fu_156 <= accPopCount_V_0_1_fu_116;
            end if; 
        end if;
    end process;

    accPopCount_0_2_V_4_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_0_2_V_4_fu_160 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_0) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_0_2_V_4_fu_160 <= accPopCount_0_2_V_fu_810_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_0_2_V_4_fu_160 <= accPopCount_V_0_2_fu_120;
            end if; 
        end if;
    end process;

    accPopCount_0_3_V_4_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_0_3_V_4_fu_164 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_0) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_0_3_V_4_fu_164 <= accPopCount_0_3_V_fu_820_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_0_3_V_4_fu_164 <= accPopCount_V_0_3_fu_124;
            end if; 
        end if;
    end process;

    accPopCount_V_1_0_2_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_V_1_0_2_fu_168 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_V_1_0_2_fu_168 <= accPopCount_V_1_fu_128;
            end if; 
        end if;
    end process;

    accPopCount_V_1_1_2_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then 
                accPopCount_V_1_1_2_fu_172 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_V_1_1_2_fu_172 <= accPopCount_V_1_1_fu_132;
            end if; 
        end if;
    end process;

    accPopCount_V_1_2_2_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter7_reg = ap_const_lv1_0))) then 
                accPopCount_V_1_2_2_fu_176 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_V_1_2_2_fu_176 <= accPopCount_V_1_2_fu_136;
            end if; 
        end if;
    end process;

    accPopCount_V_1_3_2_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter7_reg = ap_const_lv1_0))) then 
                accPopCount_V_1_3_2_fu_180 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                accPopCount_V_1_3_2_fu_180 <= accPopCount_V_1_3_fu_140;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_nf_1_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_293)) then
                if (((tmp_62_fu_682_p2 = ap_const_lv1_0) and (exitcond_reg_1376 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_406 <= ap_phi_mux_nf_phi_fu_387_p4;
                elsif (((tmp_62_fu_682_p2 = ap_const_lv1_1) and (exitcond_reg_1376 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_406 <= nf_5_fu_691_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_406 <= ap_phi_reg_pp0_iter0_nf_1_reg_406;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_s_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_349)) then
                if (((tmp_s_reg_1396 = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_416 <= tmp_V_reg_1425;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_416 <= ap_phi_reg_pp0_iter1_p_s_reg_416;
                end if;
            end if; 
        end if;
    end process;

    i8_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                i8_reg_395 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_1376 = ap_const_lv1_0))) then 
                i8_reg_395 <= i_reg_1380;
            end if; 
        end if;
    end process;

    in_idx_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_0))) then 
                in_idx_reg_372 <= in_idx_4_fu_481_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                in_idx_reg_372 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    nf_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then 
                nf_reg_383 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0))) then 
                nf_reg_383 <= p_nf_1_reg_1459;
            end if; 
        end if;
    end process;

    sf_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_fu_682_p2 = ap_const_lv1_0) and (exitcond_reg_1376 = ap_const_lv1_0))) then 
                sf_fu_148 <= sf_5_reg_1390;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_fu_682_p2 = ap_const_lv1_1) and (exitcond_reg_1376 = ap_const_lv1_0)))) then 
                sf_fu_148 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                accPopCount_0_0_V_reg_1515 <= accPopCount_0_0_V_fu_764_p2;
                accPopCount_0_1_V_reg_1520 <= accPopCount_0_1_V_fu_774_p2;
                exitcond_reg_1376 <= exitcond_fu_635_p2;
                exitcond_reg_1376_pp0_iter10_reg <= exitcond_reg_1376_pp0_iter9_reg;
                exitcond_reg_1376_pp0_iter11_reg <= exitcond_reg_1376_pp0_iter10_reg;
                exitcond_reg_1376_pp0_iter12_reg <= exitcond_reg_1376_pp0_iter11_reg;
                exitcond_reg_1376_pp0_iter1_reg <= exitcond_reg_1376;
                exitcond_reg_1376_pp0_iter2_reg <= exitcond_reg_1376_pp0_iter1_reg;
                exitcond_reg_1376_pp0_iter3_reg <= exitcond_reg_1376_pp0_iter2_reg;
                exitcond_reg_1376_pp0_iter4_reg <= exitcond_reg_1376_pp0_iter3_reg;
                exitcond_reg_1376_pp0_iter5_reg <= exitcond_reg_1376_pp0_iter4_reg;
                exitcond_reg_1376_pp0_iter6_reg <= exitcond_reg_1376_pp0_iter5_reg;
                exitcond_reg_1376_pp0_iter7_reg <= exitcond_reg_1376_pp0_iter6_reg;
                exitcond_reg_1376_pp0_iter8_reg <= exitcond_reg_1376_pp0_iter7_reg;
                exitcond_reg_1376_pp0_iter9_reg <= exitcond_reg_1376_pp0_iter8_reg;
                masked_V_0_1_reg_1490 <= masked_V_0_1_fu_739_p2;
                masked_V_reg_1485 <= masked_V_fu_734_p2;
                p_1_reg_1479 <= p_1_fu_728_p2;
                    tmp_61_reg_1431(31 downto 0) <= tmp_61_fu_701_p1(31 downto 0);
                    tmp_63_reg_1447_pp0_iter2_reg(31 downto 0) <= tmp_63_reg_1447(31 downto 0);
                    tmp_63_reg_1447_pp0_iter3_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter2_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter4_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter3_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter5_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter4_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter6_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter5_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter7_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter6_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter8_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter7_reg(31 downto 0);
                    tmp_63_reg_1447_pp0_iter9_reg(31 downto 0) <= tmp_63_reg_1447_pp0_iter8_reg(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                accPopCount_0_2_V_reg_1525 <= accPopCount_0_2_V_fu_810_p2;
                accPopCount_0_3_V_reg_1530 <= accPopCount_0_3_V_fu_820_p2;
                masked_V_0_2_reg_1505 <= masked_V_0_2_fu_744_p2;
                masked_V_0_3_reg_1510 <= masked_V_0_3_fu_749_p2;
                tmp_62_reg_1411_pp0_iter10_reg <= tmp_62_reg_1411_pp0_iter9_reg;
                tmp_62_reg_1411_pp0_iter11_reg <= tmp_62_reg_1411_pp0_iter10_reg;
                tmp_62_reg_1411_pp0_iter1_reg <= tmp_62_reg_1411;
                tmp_62_reg_1411_pp0_iter2_reg <= tmp_62_reg_1411_pp0_iter1_reg;
                tmp_62_reg_1411_pp0_iter3_reg <= tmp_62_reg_1411_pp0_iter2_reg;
                tmp_62_reg_1411_pp0_iter4_reg <= tmp_62_reg_1411_pp0_iter3_reg;
                tmp_62_reg_1411_pp0_iter5_reg <= tmp_62_reg_1411_pp0_iter4_reg;
                tmp_62_reg_1411_pp0_iter6_reg <= tmp_62_reg_1411_pp0_iter5_reg;
                tmp_62_reg_1411_pp0_iter7_reg <= tmp_62_reg_1411_pp0_iter6_reg;
                tmp_62_reg_1411_pp0_iter8_reg <= tmp_62_reg_1411_pp0_iter7_reg;
                tmp_62_reg_1411_pp0_iter9_reg <= tmp_62_reg_1411_pp0_iter8_reg;
                tmp_s_reg_1396_pp0_iter1_reg <= tmp_s_reg_1396;
                weightMem_0_V_load_reg_1469 <= weightMem_0_V_q0;
                weightMem_1_V_load_reg_1474 <= weightMem_1_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_0))) then
                accPopCount_V_0_1_fu_116 <= accPopCount_V_0_1_1_fu_515_p3;
                accPopCount_V_0_2_fu_120 <= accPopCount_V_0_2_1_fu_531_p3;
                accPopCount_V_0_3_fu_124 <= accPopCount_V_0_3_1_fu_547_p3;
                accPopCount_V_1_1_fu_132 <= accPopCount_V_1_1_1_fu_507_p3;
                accPopCount_V_1_2_fu_136 <= accPopCount_V_1_2_1_fu_523_p3;
                accPopCount_V_1_3_fu_140 <= accPopCount_V_1_3_1_fu_539_p3;
                accPopCount_V_1_fu_128 <= accPopCount_V_1_0_1_fu_491_p3;
                accPopCount_V_fu_112 <= accPopCount_V_0_0_1_fu_499_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter10_reg = ap_const_lv1_0))) then
                addconv_0_1_reg_1834 <= addconv_0_1_fu_1111_p2;
                addconv_reg_1818 <= addconv_fu_1096_p2;
                means_out4_V_0_load_reg_1805 <= means_out4_V_0;
                tmp_165_2_reg_1785 <= ret_V_2_fu_1036_p2(31 downto 8);
                tmp_165_3_reg_1792 <= ret_V_3_fu_1066_p2(31 downto 8);
                tmp_176_0_1_reg_1823 <= tmp_176_0_1_fu_1101_p2;
                tmp_179_0_1_reg_1829 <= tmp_179_0_1_fu_1106_p2;
                tmp_70_reg_1799 <= tmp_70_fu_1082_p2;
                tmp_71_reg_1813 <= tmp_71_fu_1091_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter11_reg = ap_const_lv1_0))) then
                addconv_0_2_reg_1850 <= addconv_0_2_fu_1135_p2;
                addconv_0_3_reg_1866 <= addconv_0_3_fu_1148_p2;
                tmp_176_0_2_reg_1839 <= tmp_176_0_2_fu_1126_p2;
                tmp_176_0_3_reg_1855 <= tmp_176_0_3_fu_1139_p2;
                tmp_176_1_1_reg_1876 <= tmp_176_1_1_fu_1158_p2;
                tmp_176_1_reg_1871 <= tmp_176_1_fu_1152_p2;
                tmp_179_0_2_reg_1845 <= tmp_179_0_2_fu_1131_p2;
                tmp_179_0_3_reg_1861 <= tmp_179_0_3_fu_1144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter7_reg = ap_const_lv1_0))) then
                alphaMem_0_V_load_reg_1641 <= alphaMem_0_V_q0;
                alphaMem_1_V_load_reg_1646 <= alphaMem_1_V_q0;
                alphaMem_2_V_load_reg_1651 <= alphaMem_2_V_q0;
                alphaMem_3_V_load_reg_1656 <= alphaMem_3_V_q0;
                tmp_168_0_2_reg_1621 <= grp_fu_1216_p2;
                tmp_168_0_3_reg_1626 <= grp_fu_1221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter1_p_s_reg_416 <= ap_phi_reg_pp0_iter0_p_s_reg_416;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_1380 <= i_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0) and (tmp_s_reg_1396 = ap_const_lv1_0))) then
                inputBuf_V_load_reg_1464 <= inputBuf_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then
                means_in4_V_0_load_reg_1540 <= means_in4_V_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter6_reg = ap_const_lv1_0))) then
                means_in4_V_1_load_reg_1568 <= means_in4_V_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_1376 = ap_const_lv1_0))) then
                p_nf_1_reg_1459 <= p_nf_1_fu_716_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter9_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter9_reg = ap_const_lv1_0))) then
                r_V_5_1_reg_1741 <= grp_fu_932_p2;
                r_V_5_reg_1731 <= grp_fu_920_p2;
                thresMem_0_V_load_reg_1736 <= thresMem_0_V_q0;
                thresMem_1_V_load_reg_1746 <= thresMem_1_V_q0;
                thresMem_2_V_load_reg_1751 <= thresMem_2_V_q0;
                thresMem_3_V_load_reg_1756 <= thresMem_3_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter9_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter10_reg = ap_const_lv1_0))) then
                r_V_5_2_reg_1775 <= grp_fu_944_p2;
                r_V_5_3_reg_1780 <= grp_fu_956_p2;
                tmp_165_1_reg_1768 <= ret_V_1_fu_1006_p2(31 downto 8);
                tmp_69_reg_1761 <= ret_V_fu_976_p2(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_467 <= grp_NaivePopCount_fu_425_ap_return;
                reg_471 <= grp_NaivePopCount_fu_430_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_fu_635_p2 = ap_const_lv1_0))) then
                sf_5_reg_1390 <= sf_5_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_reg_1376 = ap_const_lv1_0))) then
                sf_load83_reg_1400 <= sf_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_fu_635_p2 = ap_const_lv1_0))) then
                sf_load_reg_1385 <= sf_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_168_0_1_reg_1586 <= grp_fu_1210_p2;
                tmp_68_reg_1581 <= grp_fu_1204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_169_1_1_reg_1636 <= grp_fu_1233_p3;
                tmp_169_1_reg_1631 <= grp_fu_1226_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_62_reg_1411_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter8_reg = ap_const_lv1_0))) then
                tmp_169_1_2_reg_1661 <= grp_fu_1240_p3;
                tmp_169_1_3_reg_1666 <= grp_fu_1246_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter11_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter11_reg = ap_const_lv1_0))) then
                tmp_176_1_2_reg_1881 <= tmp_176_1_2_fu_1183_p2;
                tmp_176_1_3_reg_1886 <= tmp_176_1_3_fu_1189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_reg_1376 = ap_const_lv1_0))) then
                tmp_60_reg_1406 <= tmp_60_fu_676_p2;
                tmp_62_reg_1411 <= tmp_62_fu_682_p2;
                tmp_s_reg_1396 <= tmp_s_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411 = ap_const_lv1_1) and (exitcond_reg_1376 = ap_const_lv1_0))) then
                    tmp_63_reg_1447(31 downto 0) <= tmp_63_fu_706_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op131_read_state5 = ap_const_boolean_1))) then
                tmp_V_reg_1425 <= in_V_V_dout;
            end if;
        end if;
    end process;
    tmp_61_reg_1431(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter2_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter3_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter4_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter5_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter6_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter7_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter8_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_63_reg_1447_pp0_iter9_reg(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, tmp_fu_475_p2, ap_CS_fsm_state2, exitcond_fu_635_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_fu_475_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_635_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_635_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    accPopCount_0_0_V_fu_764_p2 <= std_logic_vector(unsigned(accPopCount_0_0_V_4_fu_152) + unsigned(accPopCount_0_0_V_s_fu_760_p1));
        accPopCount_0_0_V_s_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_467),16));

    accPopCount_0_1_V_fu_774_p2 <= std_logic_vector(unsigned(accPopCount_0_1_V_4_fu_156) + unsigned(accPopCount_0_1_V_s_fu_770_p1));
        accPopCount_0_1_V_s_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_471),16));

    accPopCount_0_2_V_fu_810_p2 <= std_logic_vector(unsigned(accPopCount_0_2_V_4_fu_160) + unsigned(accPopCount_0_2_V_s_fu_806_p1));
        accPopCount_0_2_V_s_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_467),16));

    accPopCount_0_3_V_fu_820_p2 <= std_logic_vector(unsigned(accPopCount_0_3_V_4_fu_164) + unsigned(accPopCount_0_3_V_s_fu_816_p1));
        accPopCount_0_3_V_s_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_471),16));

    accPopCount_V_0_0_1_fu_499_p3 <= 
        accPopCount_V_fu_112 when (tmp_1205_fu_487_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_0_1_1_fu_515_p3 <= 
        accPopCount_V_0_1_fu_116 when (tmp_1205_fu_487_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_0_2_1_fu_531_p3 <= 
        accPopCount_V_0_2_fu_120 when (tmp_1205_fu_487_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_0_3_1_fu_547_p3 <= 
        accPopCount_V_0_3_fu_124 when (tmp_1205_fu_487_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_1_0_1_fu_491_p3 <= 
        ap_const_lv16_0 when (tmp_1205_fu_487_p1(0) = '1') else 
        accPopCount_V_1_fu_128;
    accPopCount_V_1_1_1_fu_507_p3 <= 
        ap_const_lv16_0 when (tmp_1205_fu_487_p1(0) = '1') else 
        accPopCount_V_1_1_fu_132;
    accPopCount_V_1_2_1_fu_523_p3 <= 
        ap_const_lv16_0 when (tmp_1205_fu_487_p1(0) = '1') else 
        accPopCount_V_1_2_fu_136;
    accPopCount_V_1_3_1_fu_539_p3 <= 
        ap_const_lv16_0 when (tmp_1205_fu_487_p1(0) = '1') else 
        accPopCount_V_1_3_fu_140;
    accResidual_0_V_fu_1116_p3 <= 
        tmp_71_reg_1813 when (tmp_70_reg_1799(0) = '1') else 
        addconv_reg_1818;
    accResidual_1_V_fu_1121_p3 <= 
        tmp_179_0_1_reg_1829 when (tmp_176_0_1_reg_1823(0) = '1') else 
        addconv_0_1_reg_1834;
    accResidual_2_V_fu_1164_p3 <= 
        tmp_179_0_2_reg_1845 when (tmp_176_0_2_reg_1839(0) = '1') else 
        addconv_0_2_reg_1850;
    accResidual_3_V_fu_1178_p3 <= 
        tmp_179_0_3_reg_1861 when (tmp_176_0_3_reg_1855(0) = '1') else 
        addconv_0_3_reg_1866;
    addconv_0_1_fu_1111_p2 <= std_logic_vector(unsigned(tmp_165_1_reg_1768) + unsigned(means_out4_V_0));
    addconv_0_2_fu_1135_p2 <= std_logic_vector(unsigned(tmp_165_2_reg_1785) + unsigned(means_out4_V_0_load_reg_1805));
    addconv_0_3_fu_1148_p2 <= std_logic_vector(unsigned(tmp_165_3_reg_1792) + unsigned(means_out4_V_0_load_reg_1805));
    addconv_fu_1096_p2 <= std_logic_vector(unsigned(tmp_69_reg_1761) + unsigned(means_out4_V_0));
    alphaMem_0_V_address0 <= tmp_63_reg_1447_pp0_iter7_reg(6 - 1 downto 0);

    alphaMem_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            alphaMem_0_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    alphaMem_1_V_address0 <= tmp_63_reg_1447_pp0_iter7_reg(6 - 1 downto 0);

    alphaMem_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            alphaMem_1_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    alphaMem_2_V_address0 <= tmp_63_reg_1447_pp0_iter7_reg(6 - 1 downto 0);

    alphaMem_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            alphaMem_2_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    alphaMem_3_V_address0 <= tmp_63_reg_1447_pp0_iter7_reg(6 - 1 downto 0);

    alphaMem_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            alphaMem_3_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state29 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_predicate_op131_read_state5, ap_predicate_op345_write_state27)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op131_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_predicate_op131_read_state5, ap_predicate_op345_write_state27)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op131_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp165_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_predicate_op131_read_state5, ap_predicate_op345_write_state27)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp165 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op131_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp166_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_predicate_op131_read_state5, ap_predicate_op345_write_state27)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp166 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op131_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_predicate_op131_read_state5, ap_predicate_op345_write_state27)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op131_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter12, ap_predicate_op349_write_state28)
    begin
                ap_block_pp0_stage1_01001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter12, ap_predicate_op349_write_state28)
    begin
                ap_block_pp0_stage1_11001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp159_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter12, ap_predicate_op349_write_state28)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp159 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp160_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter12, ap_predicate_op349_write_state28)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp160 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter12, ap_predicate_op349_write_state28)
    begin
                ap_block_pp0_stage1_subdone <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter3_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter3_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter8_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter8_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter9_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter9_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter9_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter9_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter10_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter10_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter10_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter10_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter11_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter11_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter11_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter11_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state27_pp0_stage0_iter12_assign_proc : process(out_V_V_full_n, ap_predicate_op345_write_state27)
    begin
                ap_block_state27_pp0_stage0_iter12 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op345_write_state27 = ap_const_boolean_1));
    end process;


    ap_block_state27_pp0_stage0_iter12_ignore_call15_assign_proc : process(out_V_V_full_n, ap_predicate_op345_write_state27)
    begin
                ap_block_state27_pp0_stage0_iter12_ignore_call15 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op345_write_state27 = ap_const_boolean_1));
    end process;


    ap_block_state27_pp0_stage0_iter12_ignore_call21_assign_proc : process(out_V_V_full_n, ap_predicate_op345_write_state27)
    begin
                ap_block_state27_pp0_stage0_iter12_ignore_call21 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op345_write_state27 = ap_const_boolean_1));
    end process;


    ap_block_state28_pp0_stage1_iter12_assign_proc : process(out_V_V_full_n, ap_predicate_op349_write_state28)
    begin
                ap_block_state28_pp0_stage1_iter12 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_state28_pp0_stage1_iter12_ignore_call15_assign_proc : process(out_V_V_full_n, ap_predicate_op349_write_state28)
    begin
                ap_block_state28_pp0_stage1_iter12_ignore_call15 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_state28_pp0_stage1_iter12_ignore_call21_assign_proc : process(out_V_V_full_n, ap_predicate_op349_write_state28)
    begin
                ap_block_state28_pp0_stage1_iter12_ignore_call21 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, ap_predicate_op131_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op131_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage0_iter1_ignore_call15_assign_proc : process(in_V_V_empty_n, ap_predicate_op131_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1_ignore_call15 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op131_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage0_iter1_ignore_call21_assign_proc : process(in_V_V_empty_n, ap_predicate_op131_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1_ignore_call21 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op131_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3_ignore_call21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1454_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op345_write_state27, ap_block_pp0_stage0_01001)
    begin
                ap_condition_1454 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op345_write_state27 = ap_const_boolean_1));
    end process;


    ap_condition_1458_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_predicate_op349_write_state28, ap_block_pp0_stage1_01001)
    begin
                ap_condition_1458 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1));
    end process;


    ap_condition_293_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_293 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_349_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_349 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_635_p2)
    begin
        if ((exitcond_fu_635_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i8_phi_fu_399_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_1376, i8_reg_395, i_reg_1380)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_1376 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i8_phi_fu_399_p4 <= i_reg_1380;
        else 
            ap_phi_mux_i8_phi_fu_399_p4 <= i8_reg_395;
        end if; 
    end process;


    ap_phi_mux_nf_phi_fu_387_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, nf_reg_383, exitcond_reg_1376_pp0_iter1_reg, p_nf_1_reg_1459)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_nf_phi_fu_387_p4 <= p_nf_1_reg_1459;
        else 
            ap_phi_mux_nf_phi_fu_387_p4 <= nf_reg_383;
        end if; 
    end process;


    ap_phi_mux_p_s_phi_fu_419_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, exitcond_reg_1376_pp0_iter1_reg, tmp_s_reg_1396_pp0_iter1_reg, inputBuf_V_load_reg_1464, ap_enable_reg_pp0_iter2, ap_phi_reg_pp0_iter2_p_s_reg_416)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_reg_1396_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_s_phi_fu_419_p4 <= inputBuf_V_load_reg_1464;
        else 
            ap_phi_mux_p_s_phi_fu_419_p4 <= ap_phi_reg_pp0_iter2_p_s_reg_416;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_nf_1_reg_406 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_s_reg_416 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op131_read_state5_assign_proc : process(exitcond_reg_1376, tmp_s_reg_1396)
    begin
                ap_predicate_op131_read_state5 <= ((tmp_s_reg_1396 = ap_const_lv1_1) and (exitcond_reg_1376 = ap_const_lv1_0));
    end process;


    ap_predicate_op345_write_state27_assign_proc : process(exitcond_reg_1376_pp0_iter11_reg, tmp_62_reg_1411_pp0_iter11_reg)
    begin
                ap_predicate_op345_write_state27 <= ((tmp_62_reg_1411_pp0_iter11_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter11_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op349_write_state28_assign_proc : process(tmp_62_reg_1411_pp0_iter11_reg, exitcond_reg_1376_pp0_iter12_reg)
    begin
                ap_predicate_op349_write_state28 <= ((tmp_62_reg_1411_pp0_iter11_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter12_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_fu_635_p2 <= "1" when (ap_phi_mux_i8_phi_fu_399_p4 = ap_const_lv15_5100) else "0";

    grp_NaivePopCount_fu_425_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp159, ap_block_pp0_stage0_11001_ignoreCallOp165)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp159) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp165) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_NaivePopCount_fu_425_ap_ce <= ap_const_logic_1;
        else 
            grp_NaivePopCount_fu_425_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_NaivePopCount_fu_425_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, masked_V_reg_1485, masked_V_0_2_reg_1505, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_NaivePopCount_fu_425_in_V_read <= masked_V_0_2_reg_1505;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_NaivePopCount_fu_425_in_V_read <= masked_V_reg_1485;
        else 
            grp_NaivePopCount_fu_425_in_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_NaivePopCount_fu_430_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp160, ap_block_pp0_stage0_11001_ignoreCallOp166)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp160) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp166) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_NaivePopCount_fu_430_ap_ce <= ap_const_logic_1;
        else 
            grp_NaivePopCount_fu_430_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_NaivePopCount_fu_430_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, masked_V_0_1_reg_1490, masked_V_0_3_reg_1510, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_NaivePopCount_fu_430_in_V_read <= masked_V_0_3_reg_1510;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_NaivePopCount_fu_430_in_V_read <= masked_V_0_1_reg_1490;
        else 
            grp_NaivePopCount_fu_430_in_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1204_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1204_ce <= ap_const_logic_1;
        else 
            grp_fu_1204_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1210_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1210_ce <= ap_const_logic_1;
        else 
            grp_fu_1210_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1216_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1216_ce <= ap_const_logic_1;
        else 
            grp_fu_1216_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1221_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1221_ce <= ap_const_logic_1;
        else 
            grp_fu_1221_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1226_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1226_ce <= ap_const_logic_1;
        else 
            grp_fu_1226_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1233_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1233_ce <= ap_const_logic_1;
        else 
            grp_fu_1233_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1240_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1240_ce <= ap_const_logic_1;
        else 
            grp_fu_1240_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1246_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1246_ce <= ap_const_logic_1;
        else 
            grp_fu_1246_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_920_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_920_ce <= ap_const_logic_1;
        else 
            grp_fu_920_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_932_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_932_ce <= ap_const_logic_1;
        else 
            grp_fu_932_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_944_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_944_ce <= ap_const_logic_1;
        else 
            grp_fu_944_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_956_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_956_ce <= ap_const_logic_1;
        else 
            grp_fu_956_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_641_p2 <= std_logic_vector(unsigned(ap_phi_mux_i8_phi_fu_399_p4) + unsigned(ap_const_lv15_1));

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_1376, tmp_s_reg_1396)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_reg_1396 = ap_const_lv1_1) and (exitcond_reg_1376 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op131_read_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op131_read_state5 = ap_const_boolean_1))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in_idx_4_fu_481_p2 <= std_logic_vector(unsigned(in_idx_reg_372) + unsigned(ap_const_lv2_1));

    inputBuf_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_58_fu_697_p1, tmp_57_fu_724_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                inputBuf_V_address0 <= tmp_57_fu_724_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                inputBuf_V_address0 <= tmp_58_fu_697_p1(7 - 1 downto 0);
            else 
                inputBuf_V_address0 <= "XXXXXXX";
            end if;
        else 
            inputBuf_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    inputBuf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            inputBuf_V_ce0 <= ap_const_logic_1;
        else 
            inputBuf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_1396, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond_reg_1376_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_s_reg_1396 = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter1_reg = ap_const_lv1_0))) then 
            inputBuf_V_we0 <= ap_const_logic_1;
        else 
            inputBuf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    masked_V_0_1_fu_739_p2 <= (weightMem_1_V_load_reg_1474 xor p_1_fu_728_p2);
    masked_V_0_2_fu_744_p2 <= (weightMem_2_V_q0 xor p_1_reg_1479);
    masked_V_0_3_fu_749_p2 <= (weightMem_3_V_q0 xor p_1_reg_1479);
    masked_V_fu_734_p2 <= (weightMem_0_V_load_reg_1469 xor p_1_fu_728_p2);
    nf_5_fu_691_p2 <= std_logic_vector(unsigned(ap_phi_mux_nf_phi_fu_387_p4) + unsigned(ap_const_lv32_1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, exitcond_reg_1376_pp0_iter11_reg, tmp_62_reg_1411_pp0_iter11_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_reg_1376_pp0_iter12_reg)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (tmp_62_reg_1411_pp0_iter11_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter12_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_62_reg_1411_pp0_iter11_reg = ap_const_lv1_1) and (exitcond_reg_1376_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_V_din_assign_proc : process(ap_enable_reg_pp0_iter12, tmp_V_14_fu_1169_p5, tmp_V_15_fu_1195_p5, ap_condition_1454, ap_condition_1458)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_1458)) then 
                out_V_V_din <= tmp_V_15_fu_1195_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1454)) then 
                out_V_V_din <= tmp_V_14_fu_1169_p5;
            else 
                out_V_V_din <= "XXXX";
            end if;
        else 
            out_V_V_din <= "XXXX";
        end if; 
    end process;


    out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, ap_predicate_op349_write_state28, ap_block_pp0_stage1_11001, ap_predicate_op345_write_state27, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_predicate_op349_write_state28 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op345_write_state27 = ap_const_boolean_1)))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_728_p2 <= (ap_phi_mux_p_s_phi_fu_419_p4 xor ap_const_lv32_FFFFFFFF);
    p_nf_1_fu_716_p3 <= 
        ap_const_lv32_0 when (tmp_64_fu_710_p2(0) = '1') else 
        ap_phi_reg_pp0_iter1_nf_1_reg_406;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_1006_p2 <= std_logic_vector(unsigned(rhs_V_2_1_cast5_fu_1002_p1) + unsigned(tmp_163_1_fu_992_p1));
    ret_V_2_fu_1036_p2 <= std_logic_vector(unsigned(rhs_V_2_2_cast7_fu_1032_p1) + unsigned(tmp_163_2_fu_1022_p1));
    ret_V_3_fu_1066_p2 <= std_logic_vector(unsigned(rhs_V_2_3_cast9_fu_1062_p1) + unsigned(tmp_163_3_fu_1052_p1));
    ret_V_fu_976_p2 <= std_logic_vector(unsigned(rhs_V_2_cast3_fu_972_p1) + unsigned(tmp_67_fu_962_p1));
    rhs_V_2_1_cast5_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_1_fu_995_p3),49));
    rhs_V_2_1_fu_995_p3 <= (thresMem_1_V_load_reg_1746 & ap_const_lv8_0);
    rhs_V_2_2_cast7_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_2_fu_1025_p3),49));
    rhs_V_2_2_fu_1025_p3 <= (thresMem_2_V_load_reg_1751 & ap_const_lv8_0);
    rhs_V_2_3_cast9_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_3_fu_1055_p3),49));
    rhs_V_2_3_fu_1055_p3 <= (thresMem_3_V_load_reg_1756 & ap_const_lv8_0);
    rhs_V_2_cast3_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_fu_965_p3),49));
    rhs_V_2_fu_965_p3 <= (thresMem_0_V_load_reg_1736 & ap_const_lv8_0);
    sf_5_fu_647_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(sf_fu_148));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_0_V_address0 <= tmp_63_reg_1447_pp0_iter9_reg(6 - 1 downto 0);

    thresMem_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            thresMem_0_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_1_V_address0 <= tmp_63_reg_1447_pp0_iter9_reg(6 - 1 downto 0);

    thresMem_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            thresMem_1_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_2_V_address0 <= tmp_63_reg_1447_pp0_iter9_reg(6 - 1 downto 0);

    thresMem_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            thresMem_2_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_3_V_address0 <= tmp_63_reg_1447_pp0_iter9_reg(6 - 1 downto 0);

    thresMem_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            thresMem_3_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_671_p2 <= std_logic_vector(unsigned(tmp_1207_fu_665_p2) + unsigned(sf_load_reg_1385));
    tmp_1205_fu_487_p1 <= in_idx_reg_372(1 - 1 downto 0);
    tmp_1206_fu_659_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_387_p4),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    tmp_1207_fu_665_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_387_p4),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_163_1_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_1_reg_1741),49));
    tmp_163_2_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_2_reg_1775),49));
    tmp_163_3_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_3_reg_1780),49));
    tmp_176_0_1_fu_1101_p2 <= "1" when (signed(tmp_165_1_reg_1768) > signed(ap_const_lv24_0)) else "0";
    tmp_176_0_2_fu_1126_p2 <= "1" when (signed(tmp_165_2_reg_1785) > signed(ap_const_lv24_0)) else "0";
    tmp_176_0_3_fu_1139_p2 <= "1" when (signed(tmp_165_3_reg_1792) > signed(ap_const_lv24_0)) else "0";
    tmp_176_1_1_fu_1158_p2 <= "1" when (signed(accResidual_1_V_fu_1121_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_176_1_2_fu_1183_p2 <= "1" when (signed(accResidual_2_V_fu_1164_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_176_1_3_fu_1189_p2 <= "1" when (signed(accResidual_3_V_fu_1178_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_176_1_fu_1152_p2 <= "1" when (signed(accResidual_0_V_fu_1116_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_179_0_1_fu_1106_p2 <= std_logic_vector(unsigned(tmp_165_1_reg_1768) - unsigned(means_out4_V_0));
    tmp_179_0_2_fu_1131_p2 <= std_logic_vector(unsigned(tmp_165_2_reg_1785) - unsigned(means_out4_V_0_load_reg_1805));
    tmp_179_0_3_fu_1144_p2 <= std_logic_vector(unsigned(tmp_165_3_reg_1792) - unsigned(means_out4_V_0_load_reg_1805));
    tmp_57_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load83_reg_1400),64));
    tmp_58_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load83_reg_1400),64));
    tmp_60_fu_676_p2 <= std_logic_vector(unsigned(tmp1_fu_671_p2) + unsigned(tmp_1206_fu_659_p2));
    tmp_61_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_reg_1406),64));
    tmp_62_fu_682_p2 <= "1" when (sf_5_reg_1390 = ap_const_lv32_24) else "0";
    tmp_63_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nf_reg_383),64));
    tmp_64_fu_710_p2 <= "1" when (ap_phi_reg_pp0_iter1_nf_1_reg_406 = ap_const_lv32_40) else "0";
    tmp_67_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_reg_1731),49));
    tmp_70_fu_1082_p2 <= "1" when (signed(tmp_69_reg_1761) > signed(ap_const_lv24_0)) else "0";
    tmp_71_fu_1091_p2 <= std_logic_vector(unsigned(tmp_69_reg_1761) - unsigned(means_out4_V_0));
    tmp_V_14_fu_1169_p5 <= (((tmp_176_0_3_reg_1855 & tmp_176_0_2_reg_1839) & tmp_176_0_1_reg_1823) & tmp_70_reg_1799);
    tmp_V_15_fu_1195_p5 <= (((tmp_176_1_3_reg_1886 & tmp_176_1_2_reg_1881) & tmp_176_1_1_reg_1876) & tmp_176_1_reg_1871);
    tmp_fu_475_p2 <= "1" when (in_idx_reg_372 = ap_const_lv2_2) else "0";
    tmp_s_fu_653_p2 <= "1" when (ap_phi_mux_nf_phi_fu_387_p4 = ap_const_lv32_0) else "0";
    weightMem_0_V_address0 <= tmp_61_fu_701_p1(12 - 1 downto 0);

    weightMem_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weightMem_0_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weightMem_1_V_address0 <= tmp_61_fu_701_p1(12 - 1 downto 0);

    weightMem_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weightMem_1_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weightMem_2_V_address0 <= tmp_61_reg_1431(12 - 1 downto 0);

    weightMem_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weightMem_2_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weightMem_3_V_address0 <= tmp_61_reg_1431(12 - 1 downto 0);

    weightMem_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weightMem_3_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
