// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingMatrixVecto_2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        weightMem_V_address0,
        weightMem_V_ce0,
        weightMem_V_q0,
        thresMem_V_address0,
        thresMem_V_ce0,
        thresMem_V_q0,
        alphaMem_V_address0,
        alphaMem_V_ce0,
        alphaMem_V_q0,
        means_in6_V_0,
        means_in6_V_1,
        means_out6_V_0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state22 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [3:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [0:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
output  [14:0] weightMem_V_address0;
output   weightMem_V_ce0;
input  [3:0] weightMem_V_q0;
output  [8:0] thresMem_V_address0;
output   thresMem_V_ce0;
input  [23:0] thresMem_V_q0;
output  [8:0] alphaMem_V_address0;
output   alphaMem_V_ce0;
input  [23:0] alphaMem_V_q0;
input  [23:0] means_in6_V_0;
input  [23:0] means_in6_V_1;
input  [23:0] means_out6_V_0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg[0:0] out_V_V_din;
reg out_V_V_write;
reg weightMem_V_ce0;
reg thresMem_V_ce0;
reg alphaMem_V_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_655;
reg   [0:0] tmp_s_reg_675;
reg    out_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter8;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_reg_655_pp0_iter8_reg;
reg   [0:0] tmp_45_reg_690;
reg   [0:0] tmp_45_reg_690_pp0_iter7_reg;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] tmp_45_reg_690_pp0_iter8_reg;
reg   [31:0] nf_reg_206;
reg   [15:0] i7_reg_218;
wire   [0:0] tmp_fu_262_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] in_idx_3_fu_268_p2;
wire   [0:0] exitcond_fu_314_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op75_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state17_pp0_stage0_iter7;
wire    ap_block_state19_pp0_stage0_iter8;
reg    ap_predicate_op151_write_state21;
reg    ap_block_state21_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_reg_655_pp0_iter1_reg;
reg   [0:0] exitcond_reg_655_pp0_iter2_reg;
reg   [0:0] exitcond_reg_655_pp0_iter3_reg;
reg   [0:0] exitcond_reg_655_pp0_iter4_reg;
reg   [0:0] exitcond_reg_655_pp0_iter5_reg;
reg   [0:0] exitcond_reg_655_pp0_iter6_reg;
reg   [0:0] exitcond_reg_655_pp0_iter7_reg;
wire   [15:0] i_fu_320_p2;
reg   [15:0] i_reg_659;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] sf_load_reg_664;
wire   [31:0] sf_4_fu_326_p2;
reg   [31:0] sf_4_reg_669;
wire   [0:0] tmp_s_fu_332_p2;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_state12_pp0_stage1_iter4;
wire    ap_block_state14_pp0_stage1_iter5;
wire    ap_block_state16_pp0_stage1_iter6;
wire    ap_block_state18_pp0_stage1_iter7;
reg    ap_predicate_op147_write_state20;
reg    ap_block_state20_pp0_stage1_iter8;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] sf_load_5_reg_679;
wire   [31:0] tmp_41_fu_344_p2;
reg   [31:0] tmp_41_reg_685;
wire   [0:0] tmp_45_fu_349_p2;
reg   [0:0] tmp_45_reg_690_pp0_iter1_reg;
reg   [0:0] tmp_45_reg_690_pp0_iter2_reg;
reg   [0:0] tmp_45_reg_690_pp0_iter3_reg;
reg   [0:0] tmp_45_reg_690_pp0_iter4_reg;
reg   [0:0] tmp_45_reg_690_pp0_iter5_reg;
reg   [0:0] tmp_45_reg_690_pp0_iter6_reg;
wire   [31:0] nf_4_fu_358_p2;
reg   [3:0] tmp_V_reg_704;
wire   [63:0] tmp_46_fu_372_p1;
reg   [63:0] tmp_46_reg_715;
reg   [63:0] tmp_46_reg_715_pp0_iter2_reg;
reg   [63:0] tmp_46_reg_715_pp0_iter3_reg;
reg   [63:0] tmp_46_reg_715_pp0_iter4_reg;
reg   [63:0] tmp_46_reg_715_pp0_iter5_reg;
reg   [63:0] tmp_46_reg_715_pp0_iter6_reg;
wire   [31:0] p_nf_1_fu_382_p3;
reg   [31:0] p_nf_1_reg_721;
wire   [3:0] inputBuf_V_q0;
reg   [3:0] weightMem_V_load_reg_731;
reg   [0:0] tmp_1213_reg_736;
wire   [1:0] tmp_368_i_fu_451_p2;
reg   [1:0] tmp_368_i_reg_741;
wire   [2:0] pct_V_i_fu_463_p2;
reg   [2:0] pct_V_i_reg_746;
wire  signed [15:0] tmp_44_fu_489_p2;
reg  signed [15:0] tmp_44_reg_751;
wire  signed [23:0] grp_fu_599_p2;
reg  signed [23:0] tmp_57_reg_777;
wire  signed [23:0] grp_fu_605_p3;
reg  signed [23:0] tmp_134_1_reg_787;
reg    ap_enable_reg_pp0_iter5;
reg  signed [23:0] alphaMem_V_load_reg_792;
wire   [47:0] grp_fu_533_p2;
reg   [47:0] tmp_49_reg_812;
reg   [23:0] thresMem_V_load_reg_817;
reg   [23:0] tmp_55_reg_822;
wire   [0:0] tmp_V_16_fu_569_p2;
reg   [0:0] tmp_V_16_reg_829;
wire   [23:0] tmp_58_fu_578_p2;
reg   [23:0] tmp_58_reg_835;
wire   [23:0] addconv_fu_583_p2;
reg   [23:0] addconv_reg_840;
wire   [0:0] tmp_V_17_fu_593_p2;
reg   [0:0] tmp_V_17_reg_845;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg   [6:0] inputBuf_V_address0;
reg    inputBuf_V_ce0;
reg    inputBuf_V_we0;
reg   [1:0] in_idx_reg_195;
reg    ap_block_state1;
reg   [31:0] ap_phi_mux_nf_phi_fu_210_p4;
reg   [15:0] ap_phi_mux_i7_phi_fu_222_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_nf_1_reg_229;
reg   [31:0] ap_phi_reg_pp0_iter1_nf_1_reg_229;
wire   [3:0] ap_phi_reg_pp0_iter0_p_s_reg_239;
reg   [3:0] ap_phi_reg_pp0_iter1_p_s_reg_239;
reg   [3:0] ap_phi_reg_pp0_iter2_p_s_reg_239;
wire   [63:0] tmp_39_fu_364_p1;
wire   [63:0] tmp_42_fu_368_p1;
wire   [63:0] tmp_38_fu_390_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg   [15:0] accPopCount_V_fu_100;
wire   [15:0] accPopCount_V_0_0_1_fu_286_p3;
reg   [15:0] accPopCount_V_1_fu_104;
wire   [15:0] accPopCount_V_1_0_1_fu_278_p3;
reg   [31:0] sf_fu_112;
reg   [15:0] accPopCount_V_0_0_2_fu_116;
reg  signed [15:0] accPopCount_V_1_0_2_fu_120;
wire   [0:0] tmp_1208_fu_274_p1;
wire   [31:0] tmp_1209_fu_338_p2;
wire   [0:0] tmp_56_fu_376_p2;
wire   [3:0] tmp1_fu_394_p2;
wire   [3:0] masked_V_fu_400_p2;
wire   [0:0] tmp_1210_fu_405_p1;
wire   [0:0] tmp_1211_fu_409_p3;
wire   [0:0] tmp_1212_fu_425_p3;
wire   [1:0] tmp_365_i_cast_fu_421_p1;
wire   [1:0] tmp_366_i_cast_fu_433_p1;
wire   [1:0] tmp2_fu_445_p2;
wire   [1:0] tmp_i_cast_fu_417_p1;
wire   [2:0] tmp_368_i_cast_fu_457_p1;
wire   [2:0] tmp_369_i_cast_fu_460_p1;
wire   [3:0] tmp_i_fu_472_p3;
wire   [3:0] agg_result_V_i_fu_479_p2;
wire  signed [15:0] agg_result_V_i_cast_fu_485_p1;
wire   [31:0] tmp_52_fu_542_p3;
wire   [48:0] tmp_52_cast3_fu_549_p1;
wire   [48:0] tmp_50_fu_539_p1;
wire   [48:0] tmp_53_fu_553_p2;
wire   [23:0] accResidual_0_V_fu_588_p3;
reg    grp_fu_533_ce;
reg    grp_fu_599_ce;
reg    grp_fu_605_ce;
wire    ap_CS_fsm_state22;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_215;
reg    ap_condition_260;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

StreamingMatrixVecto_2_inputBuf_V #(
    .DataWidth( 4 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
inputBuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_V_address0),
    .ce0(inputBuf_V_ce0),
    .we0(inputBuf_V_we0),
    .d0(tmp_V_reg_704),
    .q0(inputBuf_V_q0)
);

BlackBoxJam_mul_24s_24s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 48 ))
BlackBoxJam_mul_24s_24s_48_4_1_U594(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(alphaMem_V_load_reg_792),
    .din1(tmp_134_1_reg_787),
    .ce(grp_fu_533_ce),
    .dout(grp_fu_533_p2)
);

BlackBoxJam_mul_mul_16s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mul_mul_16s_24s_24_3_1_U595(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_44_reg_751),
    .din1(means_in6_V_0),
    .ce(grp_fu_599_ce),
    .dout(grp_fu_599_p2)
);

BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U596(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_V_1_0_2_fu_120),
    .din1(means_in6_V_1),
    .din2(tmp_57_reg_777),
    .ce(grp_fu_605_ce),
    .dout(grp_fu_605_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter2_reg == 1'd0) & (exitcond_reg_655_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        accPopCount_V_0_0_2_fu_116 <= tmp_44_reg_751;
    end else if (((tmp_45_reg_690_pp0_iter2_reg == 1'd1) & (exitcond_reg_655_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accPopCount_V_0_0_2_fu_116 <= 16'd0;
    end else if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accPopCount_V_0_0_2_fu_116 <= accPopCount_V_fu_100;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter3_reg == 1'd1) & (exitcond_reg_655_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accPopCount_V_1_0_2_fu_120 <= 16'd0;
    end else if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        accPopCount_V_1_0_2_fu_120 <= accPopCount_V_1_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_215)) begin
        if (((tmp_45_fu_349_p2 == 1'd0) & (exitcond_reg_655 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_mux_nf_phi_fu_210_p4;
        end else if (((tmp_45_fu_349_p2 == 1'd1) & (exitcond_reg_655 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_229 <= nf_4_fu_358_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_reg_pp0_iter0_nf_1_reg_229;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_260)) begin
        if (((tmp_s_reg_675 == 1'd0) & (exitcond_reg_655_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_s_reg_239 <= inputBuf_V_q0;
        end else if (((tmp_s_reg_675 == 1'd1) & (exitcond_reg_655_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_s_reg_239 <= tmp_V_reg_704;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_s_reg_239 <= ap_phi_reg_pp0_iter1_p_s_reg_239;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i7_reg_218 <= 16'd0;
    end else if (((exitcond_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i7_reg_218 <= i_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_idx_reg_195 <= in_idx_3_fu_268_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_idx_reg_195 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        nf_reg_206 <= 32'd0;
    end else if (((exitcond_reg_655_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        nf_reg_206 <= p_nf_1_reg_721;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_fu_349_p2 == 1'd0) & (exitcond_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sf_fu_112 <= sf_4_reg_669;
    end else if ((((tmp_45_fu_349_p2 == 1'd1) & (exitcond_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        sf_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_262_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        accPopCount_V_1_fu_104 <= accPopCount_V_1_0_1_fu_278_p3;
        accPopCount_V_fu_100 <= accPopCount_V_0_0_1_fu_286_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter7_reg == 1'd1) & (exitcond_reg_655_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addconv_reg_840 <= addconv_fu_583_p2;
        tmp_58_reg_835 <= tmp_58_fu_578_p2;
        tmp_V_16_reg_829 <= tmp_V_16_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter4_reg == 1'd1) & (exitcond_reg_655_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        alphaMem_V_load_reg_792 <= alphaMem_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_phi_reg_pp0_iter1_p_s_reg_239 <= ap_phi_reg_pp0_iter0_p_s_reg_239;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_reg_655 <= exitcond_fu_314_p2;
        exitcond_reg_655_pp0_iter1_reg <= exitcond_reg_655;
        exitcond_reg_655_pp0_iter2_reg <= exitcond_reg_655_pp0_iter1_reg;
        exitcond_reg_655_pp0_iter3_reg <= exitcond_reg_655_pp0_iter2_reg;
        exitcond_reg_655_pp0_iter4_reg <= exitcond_reg_655_pp0_iter3_reg;
        exitcond_reg_655_pp0_iter5_reg <= exitcond_reg_655_pp0_iter4_reg;
        exitcond_reg_655_pp0_iter6_reg <= exitcond_reg_655_pp0_iter5_reg;
        exitcond_reg_655_pp0_iter7_reg <= exitcond_reg_655_pp0_iter6_reg;
        exitcond_reg_655_pp0_iter8_reg <= exitcond_reg_655_pp0_iter7_reg;
        tmp_1213_reg_736 <= masked_V_fu_400_p2[32'd3];
        tmp_368_i_reg_741 <= tmp_368_i_fu_451_p2;
        tmp_44_reg_751 <= tmp_44_fu_489_p2;
        tmp_46_reg_715_pp0_iter2_reg[31 : 0] <= tmp_46_reg_715[31 : 0];
        tmp_46_reg_715_pp0_iter3_reg[31 : 0] <= tmp_46_reg_715_pp0_iter2_reg[31 : 0];
        tmp_46_reg_715_pp0_iter4_reg[31 : 0] <= tmp_46_reg_715_pp0_iter3_reg[31 : 0];
        tmp_46_reg_715_pp0_iter5_reg[31 : 0] <= tmp_46_reg_715_pp0_iter4_reg[31 : 0];
        tmp_46_reg_715_pp0_iter6_reg[31 : 0] <= tmp_46_reg_715_pp0_iter5_reg[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_659 <= i_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_nf_1_reg_721 <= p_nf_1_fu_382_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pct_V_i_reg_746 <= pct_V_i_fu_463_p2;
        tmp_45_reg_690_pp0_iter1_reg <= tmp_45_reg_690;
        tmp_45_reg_690_pp0_iter2_reg <= tmp_45_reg_690_pp0_iter1_reg;
        tmp_45_reg_690_pp0_iter3_reg <= tmp_45_reg_690_pp0_iter2_reg;
        tmp_45_reg_690_pp0_iter4_reg <= tmp_45_reg_690_pp0_iter3_reg;
        tmp_45_reg_690_pp0_iter5_reg <= tmp_45_reg_690_pp0_iter4_reg;
        tmp_45_reg_690_pp0_iter6_reg <= tmp_45_reg_690_pp0_iter5_reg;
        tmp_45_reg_690_pp0_iter7_reg <= tmp_45_reg_690_pp0_iter6_reg;
        tmp_45_reg_690_pp0_iter8_reg <= tmp_45_reg_690_pp0_iter7_reg;
        weightMem_V_load_reg_731 <= weightMem_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_4_reg_669 <= sf_4_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sf_load_5_reg_679 <= sf_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_load_reg_664 <= sf_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter6_reg == 1'd1) & (exitcond_reg_655_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        thresMem_V_load_reg_817 <= thresMem_V_q0;
        tmp_49_reg_812 <= grp_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter4_reg == 1'd1) & (exitcond_reg_655_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_134_1_reg_787 <= grp_fu_605_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_41_reg_685 <= tmp_41_fu_344_p2;
        tmp_45_reg_690 <= tmp_45_fu_349_p2;
        tmp_s_reg_675 <= tmp_s_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690 == 1'd1) & (exitcond_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_46_reg_715[31 : 0] <= tmp_46_fu_372_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter6_reg == 1'd1) & (exitcond_reg_655_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_55_reg_822 <= {{tmp_53_fu_553_p2[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter3_reg == 1'd1) & (exitcond_reg_655_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_57_reg_777 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_45_reg_690_pp0_iter7_reg == 1'd1) & (exitcond_reg_655_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_V_17_reg_845 <= tmp_V_17_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_reg_704 <= in_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        alphaMem_V_ce0 = 1'b1;
    end else begin
        alphaMem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_314_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i7_phi_fu_222_p4 = i_reg_659;
    end else begin
        ap_phi_mux_i7_phi_fu_222_p4 = i7_reg_218;
    end
end

always @ (*) begin
    if (((exitcond_reg_655_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_nf_phi_fu_210_p4 = p_nf_1_reg_721;
    end else begin
        ap_phi_mux_nf_phi_fu_210_p4 = nf_reg_206;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_533_ce = 1'b1;
    end else begin
        grp_fu_533_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_599_ce = 1'b1;
    end else begin
        grp_fu_599_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_605_ce = 1'b1;
    end else begin
        grp_fu_605_ce = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_675 == 1'd1) & (exitcond_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op75_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            inputBuf_V_address0 = tmp_38_fu_390_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inputBuf_V_address0 = tmp_39_fu_364_p1;
        end else begin
            inputBuf_V_address0 = 'bx;
        end
    end else begin
        inputBuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_V_ce0 = 1'b1;
    end else begin
        inputBuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_675 == 1'd1) & (exitcond_reg_655_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inputBuf_V_we0 = 1'b1;
    end else begin
        inputBuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_45_reg_690_pp0_iter7_reg == 1'd1) & (exitcond_reg_655_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((tmp_45_reg_690_pp0_iter8_reg == 1'd1) & (exitcond_reg_655_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op151_write_state21 == 1'b1))) begin
        out_V_V_din = tmp_V_17_reg_845;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op147_write_state20 == 1'b1))) begin
        out_V_V_din = tmp_V_16_reg_829;
    end else begin
        out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op147_write_state20 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op151_write_state21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        thresMem_V_ce0 = 1'b1;
    end else begin
        thresMem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weightMem_V_ce0 = 1'b1;
    end else begin
        weightMem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_262_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_fu_314_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((exitcond_fu_314_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accPopCount_V_0_0_1_fu_286_p3 = ((tmp_1208_fu_274_p1[0:0] === 1'b1) ? accPopCount_V_fu_100 : 16'd0);

assign accPopCount_V_1_0_1_fu_278_p3 = ((tmp_1208_fu_274_p1[0:0] === 1'b1) ? 16'd0 : accPopCount_V_1_fu_104);

assign accResidual_0_V_fu_588_p3 = ((tmp_V_16_reg_829[0:0] === 1'b1) ? tmp_58_reg_835 : addconv_reg_840);

assign addconv_fu_583_p2 = (tmp_55_reg_822 + means_out6_V_0);

assign agg_result_V_i_cast_fu_485_p1 = $signed(agg_result_V_i_fu_479_p2);

assign agg_result_V_i_fu_479_p2 = ($signed(4'd12) + $signed(tmp_i_fu_472_p3));

assign alphaMem_V_address0 = tmp_46_reg_715_pp0_iter4_reg;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op151_write_state21 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op151_write_state21 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_predicate_op151_write_state21 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_predicate_op147_write_state20 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_predicate_op147_write_state20 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_predicate_op147_write_state20 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage1_iter8 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op147_write_state20 == 1'b1));
end

always @ (*) begin
    ap_block_state21_pp0_stage0_iter9 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op151_write_state21 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op75_read_state5 == 1'b1));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_215 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_260 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_nf_1_reg_229 = 'bx;

assign ap_phi_reg_pp0_iter0_p_s_reg_239 = 'bx;

always @ (*) begin
    ap_predicate_op147_write_state20 = ((tmp_45_reg_690_pp0_iter7_reg == 1'd1) & (exitcond_reg_655_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op151_write_state21 = ((tmp_45_reg_690_pp0_iter8_reg == 1'd1) & (exitcond_reg_655_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op75_read_state5 = ((tmp_s_reg_675 == 1'd1) & (exitcond_reg_655 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign exitcond_fu_314_p2 = ((ap_phi_mux_i7_phi_fu_222_p4 == 16'd32768) ? 1'b1 : 1'b0);

assign i_fu_320_p2 = (ap_phi_mux_i7_phi_fu_222_p4 + 16'd1);

assign in_idx_3_fu_268_p2 = (in_idx_reg_195 + 2'd1);

assign masked_V_fu_400_p2 = (weightMem_V_load_reg_731 ^ tmp1_fu_394_p2);

assign nf_4_fu_358_p2 = (ap_phi_mux_nf_phi_fu_210_p4 + 32'd1);

assign p_nf_1_fu_382_p3 = ((tmp_56_fu_376_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_reg_pp0_iter1_nf_1_reg_229);

assign pct_V_i_fu_463_p2 = (tmp_368_i_cast_fu_457_p1 + tmp_369_i_cast_fu_460_p1);

assign sf_4_fu_326_p2 = (32'd1 + sf_fu_112);

assign start_out = real_start;

assign thresMem_V_address0 = tmp_46_reg_715_pp0_iter6_reg;

assign tmp1_fu_394_p2 = (ap_phi_reg_pp0_iter2_p_s_reg_239 ^ 4'd15);

assign tmp2_fu_445_p2 = (tmp_365_i_cast_fu_421_p1 + tmp_366_i_cast_fu_433_p1);

assign tmp_1208_fu_274_p1 = in_idx_reg_195[0:0];

assign tmp_1209_fu_338_p2 = ap_phi_mux_nf_phi_fu_210_p4 << 32'd6;

assign tmp_1210_fu_405_p1 = masked_V_fu_400_p2[0:0];

assign tmp_1211_fu_409_p3 = masked_V_fu_400_p2[32'd1];

assign tmp_1212_fu_425_p3 = masked_V_fu_400_p2[32'd2];

assign tmp_365_i_cast_fu_421_p1 = tmp_1211_fu_409_p3;

assign tmp_366_i_cast_fu_433_p1 = tmp_1212_fu_425_p3;

assign tmp_368_i_cast_fu_457_p1 = tmp_368_i_reg_741;

assign tmp_368_i_fu_451_p2 = (tmp2_fu_445_p2 + tmp_i_cast_fu_417_p1);

assign tmp_369_i_cast_fu_460_p1 = tmp_1213_reg_736;

assign tmp_38_fu_390_p1 = sf_load_5_reg_679;

assign tmp_39_fu_364_p1 = sf_load_5_reg_679;

assign tmp_41_fu_344_p2 = (tmp_1209_fu_338_p2 + sf_load_reg_664);

assign tmp_42_fu_368_p1 = tmp_41_reg_685;

assign tmp_44_fu_489_p2 = ($signed(accPopCount_V_0_0_2_fu_116) + $signed(agg_result_V_i_cast_fu_485_p1));

assign tmp_45_fu_349_p2 = ((sf_4_reg_669 == 32'd64) ? 1'b1 : 1'b0);

assign tmp_46_fu_372_p1 = nf_reg_206;

assign tmp_50_fu_539_p1 = tmp_49_reg_812;

assign tmp_52_cast3_fu_549_p1 = tmp_52_fu_542_p3;

assign tmp_52_fu_542_p3 = {{thresMem_V_load_reg_817}, {8'd0}};

assign tmp_53_fu_553_p2 = (tmp_52_cast3_fu_549_p1 + tmp_50_fu_539_p1);

assign tmp_56_fu_376_p2 = ((ap_phi_reg_pp0_iter1_nf_1_reg_229 == 32'd512) ? 1'b1 : 1'b0);

assign tmp_58_fu_578_p2 = (tmp_55_reg_822 - means_out6_V_0);

assign tmp_V_16_fu_569_p2 = (($signed(tmp_55_reg_822) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_V_17_fu_593_p2 = (($signed(accResidual_0_V_fu_588_p3) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_fu_262_p2 = ((in_idx_reg_195 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_i_cast_fu_417_p1 = tmp_1210_fu_405_p1;

assign tmp_i_fu_472_p3 = {{pct_V_i_reg_746}, {1'd0}};

assign tmp_s_fu_332_p2 = ((ap_phi_mux_nf_phi_fu_210_p4 == 32'd0) ? 1'b1 : 1'b0);

assign weightMem_V_address0 = tmp_42_fu_368_p1;

always @ (posedge ap_clk) begin
    tmp_46_reg_715[63:32] <= 32'b00000000000000000000000000000000;
    tmp_46_reg_715_pp0_iter2_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_46_reg_715_pp0_iter3_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_46_reg_715_pp0_iter4_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_46_reg_715_pp0_iter5_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_46_reg_715_pp0_iter6_reg[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //StreamingMatrixVecto_2
