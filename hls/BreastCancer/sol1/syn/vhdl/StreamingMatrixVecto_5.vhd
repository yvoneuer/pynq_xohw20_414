-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingMatrixVecto_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    weightMem_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weightMem_V_ce0 : OUT STD_LOGIC;
    weightMem_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    thresMem_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    thresMem_V_ce0 : OUT STD_LOGIC;
    thresMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    alphaMem_V_ce0 : OUT STD_LOGIC;
    alphaMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in5_V_0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in5_V_1 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_out5_V_0 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of StreamingMatrixVecto_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal exitcond_reg_1272_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_reg_1272_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal i4_reg_266 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_idx_3_fu_316_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op84_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter10 : BOOLEAN;
    signal ap_predicate_op261_write_state25 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_1272_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1272_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_368_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_1276 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sf_load_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_3_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_3_reg_1286 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter10 : BOOLEAN;
    signal ap_predicate_op263_write_state26 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_s_reg_1292_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_load_3_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_reg_1302 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1307_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_4_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1332_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_nf_1_fu_442_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_nf_1_reg_1338 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_load_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal weightMem_V_load_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1173_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_373_i_fu_511_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_373_i_reg_1358 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1177_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_567_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp5_reg_1368 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1178_reg_1373 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1179_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1180_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1181_reg_1388 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1185_reg_1393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1185_reg_1393_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_fu_655_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_reg_1398 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1186_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1187_reg_1408 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1201_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1201_reg_1413_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1201_reg_1413_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_fu_861_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp18_reg_1418 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp18_reg_1418_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp22_fu_887_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp22_reg_1423 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp26_fu_893_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp26_reg_1428 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp27_fu_905_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp27_reg_1433 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp8_fu_951_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp8_reg_1438 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp9_fu_957_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp9_reg_1443 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp10_fu_976_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp10_reg_1448 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp21_fu_1001_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp21_reg_1453 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp21_reg_1453_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_397_i_fu_1018_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_397_i_reg_1458 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp17_fu_1030_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp17_reg_1463 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp15_fu_1051_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp15_reg_1468 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_429_i_fu_1068_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_429_i_reg_1473 : STD_LOGIC_VECTOR (4 downto 0);
    signal pct_V_i_fu_1080_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal pct_V_i_reg_1478 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1106_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_reg_1483 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1216_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_41_reg_1514 : STD_LOGIC_VECTOR (23 downto 0);
    signal alphaMem_V_load_reg_1519 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1222_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_241_1_reg_1524 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal thresMem_V_load_reg_1544 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1150_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_45_reg_1549 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_49_reg_1554 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_10_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_10_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1195_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_50_reg_1567 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_fu_1200_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_reg_1572 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_11_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_11_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal inputBuf_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal inputBuf_V_ce0 : STD_LOGIC;
    signal inputBuf_V_we0 : STD_LOGIC;
    signal in_idx_reg_243 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_nf_phi_fu_258_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i4_phi_fu_270_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter0_nf_1_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_nf_1_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_s_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal accPopCount_V_fu_148 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_0_1_fu_334_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_fu_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_1_fu_326_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sf_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal accPopCount_V_0_0_2_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_2_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1167_fu_322_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1169_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1168_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal masked_V_fu_460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1170_fu_465_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1171_fu_469_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1172_fu_485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_cast_fu_477_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_371_i_cast_fu_493_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp3_fu_505_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_370_i_cast_fu_481_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1174_fu_517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1175_fu_529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1176_fu_541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_378_i_cast_cast_fu_537_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_379_i_cast_cast_fu_549_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp6_fu_561_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_375_i_cast_cast_fu_525_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1182_fu_605_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1183_fu_617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1184_fu_629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_394_i_cast_cast_fu_625_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_395_i_cast_cast_fu_637_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp13_fu_649_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_391_i_cast_cast_fu_613_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1188_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1189_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1190_fu_701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1191_fu_713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1192_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1193_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1194_fu_749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1195_fu_761_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1196_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1197_fu_785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1198_fu_797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1199_fu_809_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1200_fu_821_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_403_i_cast_cast_fu_685_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_406_i_cast_cast_fu_697_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp19_fu_841_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_407_i_cast_cast_fu_709_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_410_i_cast_cast_fu_721_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp20_fu_851_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp20_cast_fu_857_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp19_cast_fu_847_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_411_i_cast_cast_fu_733_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_414_i_cast_cast_fu_745_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp23_fu_867_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_415_i_cast_cast_fu_757_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_418_i_cast_cast_fu_769_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp24_fu_877_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp24_cast_fu_883_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp23_cast_fu_873_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_419_i_cast_cast_fu_781_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_422_i_cast_cast_fu_793_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_426_i_cast_cast_fu_817_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_427_i_cast_cast_fu_829_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp28_fu_899_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_423_i_cast_cast_fu_805_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_373_i_cast_fu_911_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_374_i_cast_fu_914_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp5_cast_fu_923_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp4_fu_917_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_381_i_fu_926_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_381_i_cast_fu_932_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_382_i_cast_fu_936_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_383_i_cast_cast_fu_939_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_386_i_cast_cast_fu_942_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_387_i_cast_cast_fu_945_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_390_i_cast_cast_fu_948_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp11_fu_963_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp12_cast_fu_973_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp11_cast_fu_969_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp27_cast_fu_988_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp26_cast_fu_985_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp25_fu_991_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp25_cast_fu_997_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp22_cast_fu_982_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp9_cast_fu_1007_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp10_cast_fu_1015_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp7_fu_1010_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_399_i_cast_cast_fu_1024_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_402_i_cast_cast_fu_1027_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_397_i_cast_fu_1036_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_398_i_cast_fu_1039_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp17_cast_fu_1048_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp16_fu_1042_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp18_cast_fu_1057_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp21_cast_fu_1065_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp14_fu_1060_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_429_i_cast_fu_1074_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_430_i_cast_fu_1077_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_fu_1089_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal agg_result_V_i_fu_1096_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal agg_result_V_i_cast_fu_1102_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_1159_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_cast3_fu_1166_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_46_fu_1156_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_48_fu_1170_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal accResidual_0_V_fu_1205_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1150_ce : STD_LOGIC;
    signal grp_fu_1216_ce : STD_LOGIC;
    signal grp_fu_1222_ce : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_222 : BOOLEAN;
    signal ap_condition_1245 : BOOLEAN;
    signal ap_condition_1249 : BOOLEAN;

    component BlackBoxJam_mul_24s_24s_48_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component BlackBoxJam_mul_mul_16s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component StreamingMatrixVecto_5_inputBuf_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    inputBuf_V_U : component StreamingMatrixVecto_5_inputBuf_V
    generic map (
        DataWidth => 32,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inputBuf_V_address0,
        ce0 => inputBuf_V_ce0,
        we0 => inputBuf_V_we0,
        d0 => tmp_V_reg_1321,
        q0 => inputBuf_V_q0);

    BlackBoxJam_mul_24s_24s_48_4_1_U578 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => alphaMem_V_load_reg_1519,
        din1 => tmp_241_1_reg_1524,
        ce => grp_fu_1150_ce,
        dout => grp_fu_1150_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U579 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_reg_1483,
        din1 => means_in5_V_0,
        ce => grp_fu_1216_ce,
        dout => grp_fu_1216_p2);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U580 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_0_2_fu_168,
        din1 => means_in5_V_1,
        din2 => tmp_41_reg_1514,
        ce => grp_fu_1222_ce,
        dout => grp_fu_1222_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                elsif (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accPopCount_V_0_0_2_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter5_reg = ap_const_lv1_0) and (exitcond_reg_1272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                accPopCount_V_0_0_2_fu_164 <= tmp_38_reg_1483;
            elsif (((tmp_39_reg_1307_pp0_iter4_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                accPopCount_V_0_0_2_fu_164 <= ap_const_lv16_0;
            elsif (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_0_0_2_fu_164 <= accPopCount_V_fu_148;
            end if; 
        end if;
    end process;

    accPopCount_V_1_0_2_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter5_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                accPopCount_V_1_0_2_fu_168 <= ap_const_lv16_0;
            elsif (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_1_0_2_fu_168 <= accPopCount_V_1_fu_152;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_nf_1_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_222)) then
                if (((tmp_39_fu_409_p2 = ap_const_lv1_0) and (exitcond_reg_1272 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_277 <= ap_phi_mux_nf_phi_fu_258_p4;
                elsif (((tmp_39_fu_409_p2 = ap_const_lv1_1) and (exitcond_reg_1272 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_277 <= nf_4_fu_418_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_277 <= ap_phi_reg_pp0_iter0_nf_1_reg_277;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_s_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1292_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_287 <= inputBuf_V_load_reg_1343;
            elsif (((tmp_s_reg_1292 = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_287 <= tmp_V_reg_1321;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter2_p_s_reg_287 <= ap_phi_reg_pp0_iter1_p_s_reg_287;
            end if; 
        end if;
    end process;

    i4_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i4_reg_266 <= ap_const_lv15_0;
            elsif (((exitcond_reg_1272 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i4_reg_266 <= i_reg_1276;
            end if; 
        end if;
    end process;

    in_idx_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_310_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_idx_reg_243 <= in_idx_3_fu_316_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                in_idx_reg_243 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    nf_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                nf_reg_254 <= ap_const_lv32_0;
            elsif (((exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                nf_reg_254 <= p_nf_1_reg_1338;
            end if; 
        end if;
    end process;

    sf_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_fu_409_p2 = ap_const_lv1_0) and (exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                sf_fu_160 <= sf_3_reg_1286;
            elsif ((((tmp_39_fu_409_p2 = ap_const_lv1_1) and (exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                sf_fu_160 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_310_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                accPopCount_V_1_fu_152 <= accPopCount_V_1_0_1_fu_326_p3;
                accPopCount_V_fu_148 <= accPopCount_V_0_0_1_fu_334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter9_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                addconv_reg_1572 <= addconv_fu_1200_p2;
                tmp_50_reg_1567 <= tmp_50_fu_1195_p2;
                tmp_V_10_reg_1561 <= tmp_V_10_fu_1186_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                alphaMem_V_load_reg_1519 <= alphaMem_V_q0;
                tmp_41_reg_1514 <= grp_fu_1216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter1_p_s_reg_287 <= ap_phi_reg_pp0_iter0_p_s_reg_287;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_reg_1272 <= exitcond_fu_362_p2;
                exitcond_reg_1272_pp0_iter10_reg <= exitcond_reg_1272_pp0_iter9_reg;
                exitcond_reg_1272_pp0_iter11_reg <= exitcond_reg_1272_pp0_iter10_reg;
                exitcond_reg_1272_pp0_iter1_reg <= exitcond_reg_1272;
                exitcond_reg_1272_pp0_iter2_reg <= exitcond_reg_1272_pp0_iter1_reg;
                exitcond_reg_1272_pp0_iter3_reg <= exitcond_reg_1272_pp0_iter2_reg;
                exitcond_reg_1272_pp0_iter4_reg <= exitcond_reg_1272_pp0_iter3_reg;
                exitcond_reg_1272_pp0_iter5_reg <= exitcond_reg_1272_pp0_iter4_reg;
                exitcond_reg_1272_pp0_iter6_reg <= exitcond_reg_1272_pp0_iter5_reg;
                exitcond_reg_1272_pp0_iter7_reg <= exitcond_reg_1272_pp0_iter6_reg;
                exitcond_reg_1272_pp0_iter8_reg <= exitcond_reg_1272_pp0_iter7_reg;
                exitcond_reg_1272_pp0_iter9_reg <= exitcond_reg_1272_pp0_iter8_reg;
                pct_V_i_reg_1478 <= pct_V_i_fu_1080_p2;
                tmp10_reg_1448 <= tmp10_fu_976_p2;
                tmp15_reg_1468 <= tmp15_fu_1051_p2;
                tmp21_reg_1453 <= tmp21_fu_1001_p2;
                tmp21_reg_1453_pp0_iter4_reg <= tmp21_reg_1453;
                tmp8_reg_1438 <= tmp8_fu_951_p2;
                tmp9_reg_1443 <= tmp9_fu_957_p2;
                    tmp_42_reg_1332_pp0_iter2_reg(31 downto 0) <= tmp_42_reg_1332(31 downto 0);
                    tmp_42_reg_1332_pp0_iter3_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter2_reg(31 downto 0);
                    tmp_42_reg_1332_pp0_iter4_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter3_reg(31 downto 0);
                    tmp_42_reg_1332_pp0_iter5_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter4_reg(31 downto 0);
                    tmp_42_reg_1332_pp0_iter6_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter5_reg(31 downto 0);
                    tmp_42_reg_1332_pp0_iter7_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter6_reg(31 downto 0);
                    tmp_42_reg_1332_pp0_iter8_reg(31 downto 0) <= tmp_42_reg_1332_pp0_iter7_reg(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1276 <= i_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1292 = ap_const_lv1_0) and (exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                inputBuf_V_load_reg_1343 <= inputBuf_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1272 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_nf_1_reg_1338 <= p_nf_1_fu_442_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_3_reg_1286 <= sf_3_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sf_load_3_reg_1296 <= sf_fu_160;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_load_reg_1281 <= sf_fu_160;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                thresMem_V_load_reg_1544 <= thresMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp12_reg_1398 <= tmp12_fu_655_p2;
                tmp17_reg_1463 <= tmp17_fu_1030_p2;
                tmp18_reg_1418 <= tmp18_fu_861_p2;
                tmp18_reg_1418_pp0_iter3_reg <= tmp18_reg_1418;
                tmp22_reg_1423 <= tmp22_fu_887_p2;
                tmp26_reg_1428 <= tmp26_fu_893_p2;
                tmp27_reg_1433 <= tmp27_fu_905_p2;
                tmp5_reg_1368 <= tmp5_fu_567_p2;
                tmp_1173_reg_1353 <= masked_V_fu_460_p2(3 downto 3);
                tmp_1177_reg_1363 <= masked_V_fu_460_p2(7 downto 7);
                tmp_1178_reg_1373 <= masked_V_fu_460_p2(8 downto 8);
                tmp_1179_reg_1378 <= masked_V_fu_460_p2(9 downto 9);
                tmp_1180_reg_1383 <= masked_V_fu_460_p2(10 downto 10);
                tmp_1181_reg_1388 <= masked_V_fu_460_p2(11 downto 11);
                tmp_1185_reg_1393 <= masked_V_fu_460_p2(15 downto 15);
                tmp_1185_reg_1393_pp0_iter3_reg <= tmp_1185_reg_1393;
                tmp_1186_reg_1403 <= masked_V_fu_460_p2(16 downto 16);
                tmp_1187_reg_1408 <= masked_V_fu_460_p2(17 downto 17);
                tmp_1201_reg_1413 <= masked_V_fu_460_p2(31 downto 31);
                tmp_1201_reg_1413_pp0_iter3_reg <= tmp_1201_reg_1413;
                tmp_1201_reg_1413_pp0_iter4_reg <= tmp_1201_reg_1413_pp0_iter3_reg;
                tmp_373_i_reg_1358 <= tmp_373_i_fu_511_p2;
                tmp_38_reg_1483 <= tmp_38_fu_1106_p2;
                tmp_397_i_reg_1458 <= tmp_397_i_fu_1018_p2;
                tmp_39_reg_1307_pp0_iter10_reg <= tmp_39_reg_1307_pp0_iter9_reg;
                tmp_39_reg_1307_pp0_iter1_reg <= tmp_39_reg_1307;
                tmp_39_reg_1307_pp0_iter2_reg <= tmp_39_reg_1307_pp0_iter1_reg;
                tmp_39_reg_1307_pp0_iter3_reg <= tmp_39_reg_1307_pp0_iter2_reg;
                tmp_39_reg_1307_pp0_iter4_reg <= tmp_39_reg_1307_pp0_iter3_reg;
                tmp_39_reg_1307_pp0_iter5_reg <= tmp_39_reg_1307_pp0_iter4_reg;
                tmp_39_reg_1307_pp0_iter6_reg <= tmp_39_reg_1307_pp0_iter5_reg;
                tmp_39_reg_1307_pp0_iter7_reg <= tmp_39_reg_1307_pp0_iter6_reg;
                tmp_39_reg_1307_pp0_iter8_reg <= tmp_39_reg_1307_pp0_iter7_reg;
                tmp_39_reg_1307_pp0_iter9_reg <= tmp_39_reg_1307_pp0_iter8_reg;
                tmp_429_i_reg_1473 <= tmp_429_i_fu_1068_p2;
                tmp_s_reg_1292_pp0_iter1_reg <= tmp_s_reg_1292;
                weightMem_V_load_reg_1348 <= weightMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_241_1_reg_1524 <= grp_fu_1222_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_36_reg_1302 <= tmp_36_fu_403_p2;
                tmp_39_reg_1307 <= tmp_39_fu_409_p2;
                tmp_s_reg_1292 <= tmp_s_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307 = ap_const_lv1_1) and (exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_42_reg_1332(31 downto 0) <= tmp_42_fu_432_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_45_reg_1549 <= grp_fu_1150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter9_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_49_reg_1554 <= tmp_48_fu_1170_p2(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_39_reg_1307_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_11_reg_1577 <= tmp_V_11_fu_1210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op84_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_reg_1321 <= in_V_V_dout;
            end if;
        end if;
    end process;
    tmp_42_reg_1332(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter2_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter3_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter4_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter5_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter6_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter7_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_42_reg_1332_pp0_iter8_reg(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, tmp_fu_310_p2, ap_CS_fsm_state2, exitcond_fu_362_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_fu_310_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_362_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((exitcond_fu_362_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    accPopCount_V_0_0_1_fu_334_p3 <= 
        accPopCount_V_fu_148 when (tmp_1167_fu_322_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_1_0_1_fu_326_p3 <= 
        ap_const_lv16_0 when (tmp_1167_fu_322_p1(0) = '1') else 
        accPopCount_V_1_fu_152;
    accResidual_0_V_fu_1205_p3 <= 
        tmp_50_reg_1567 when (tmp_V_10_reg_1561(0) = '1') else 
        addconv_reg_1572;
    addconv_fu_1200_p2 <= std_logic_vector(unsigned(tmp_49_reg_1554) + unsigned(means_out5_V_0));
        agg_result_V_i_cast_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(agg_result_V_i_fu_1096_p2),16));

    agg_result_V_i_fu_1096_p2 <= std_logic_vector(signed(ap_const_lv7_60) + signed(tmp_i_fu_1089_p3));
    alphaMem_V_address0 <= tmp_42_reg_1332_pp0_iter6_reg(8 - 1 downto 0);

    alphaMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            alphaMem_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state27 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_predicate_op84_read_state5, ap_predicate_op261_write_state25)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op261_write_state25 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op84_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_predicate_op84_read_state5, ap_predicate_op261_write_state25)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op261_write_state25 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op84_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_predicate_op84_read_state5, ap_predicate_op261_write_state25)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op261_write_state25 = ap_const_boolean_1)) or ((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op84_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter11, ap_predicate_op263_write_state26)
    begin
                ap_block_pp0_stage1_01001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op263_write_state26 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter11, ap_predicate_op263_write_state26)
    begin
                ap_block_pp0_stage1_11001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op263_write_state26 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter11, ap_predicate_op263_write_state26)
    begin
                ap_block_pp0_stage1_subdone <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_predicate_op263_write_state26 = ap_const_boolean_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state25_pp0_stage0_iter11_assign_proc : process(out_V_V_full_n, ap_predicate_op261_write_state25)
    begin
                ap_block_state25_pp0_stage0_iter11 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op261_write_state25 = ap_const_boolean_1));
    end process;


    ap_block_state26_pp0_stage1_iter11_assign_proc : process(out_V_V_full_n, ap_predicate_op263_write_state26)
    begin
                ap_block_state26_pp0_stage1_iter11 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op263_write_state26 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, ap_predicate_op84_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op84_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1245_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op261_write_state25, ap_block_pp0_stage0_01001)
    begin
                ap_condition_1245 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op261_write_state25 = ap_const_boolean_1));
    end process;


    ap_condition_1249_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_predicate_op263_write_state26, ap_block_pp0_stage1_01001)
    begin
                ap_condition_1249 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op263_write_state26 = ap_const_boolean_1));
    end process;


    ap_condition_222_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_222 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_362_p2)
    begin
        if ((exitcond_fu_362_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i4_phi_fu_270_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_1272, i4_reg_266, i_reg_1276)
    begin
        if (((exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i4_phi_fu_270_p4 <= i_reg_1276;
        else 
            ap_phi_mux_i4_phi_fu_270_p4 <= i4_reg_266;
        end if; 
    end process;


    ap_phi_mux_nf_phi_fu_258_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, nf_reg_254, exitcond_reg_1272_pp0_iter1_reg, p_nf_1_reg_1338)
    begin
        if (((exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_nf_phi_fu_258_p4 <= p_nf_1_reg_1338;
        else 
            ap_phi_mux_nf_phi_fu_258_p4 <= nf_reg_254;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_nf_1_reg_277 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_s_reg_287 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op261_write_state25_assign_proc : process(exitcond_reg_1272_pp0_iter10_reg, tmp_39_reg_1307_pp0_iter10_reg)
    begin
                ap_predicate_op261_write_state25 <= ((tmp_39_reg_1307_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter10_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op263_write_state26_assign_proc : process(tmp_39_reg_1307_pp0_iter10_reg, exitcond_reg_1272_pp0_iter11_reg)
    begin
                ap_predicate_op263_write_state26 <= ((tmp_39_reg_1307_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter11_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op84_read_state5_assign_proc : process(exitcond_reg_1272, tmp_s_reg_1292)
    begin
                ap_predicate_op84_read_state5 <= ((tmp_s_reg_1292 = ap_const_lv1_1) and (exitcond_reg_1272 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_fu_362_p2 <= "1" when (ap_phi_mux_i4_phi_fu_270_p4 = ap_const_lv15_4800) else "0";

    grp_fu_1150_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1150_ce <= ap_const_logic_1;
        else 
            grp_fu_1150_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1216_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1216_ce <= ap_const_logic_1;
        else 
            grp_fu_1216_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1222_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1222_ce <= ap_const_logic_1;
        else 
            grp_fu_1222_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_368_p2 <= std_logic_vector(unsigned(ap_phi_mux_i4_phi_fu_270_p4) + unsigned(ap_const_lv15_1));

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_1272, tmp_s_reg_1292)
    begin
        if (((tmp_s_reg_1292 = ap_const_lv1_1) and (exitcond_reg_1272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op84_read_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op84_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in_idx_3_fu_316_p2 <= std_logic_vector(unsigned(in_idx_reg_243) + unsigned(ap_const_lv2_1));

    inputBuf_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_35_fu_424_p1, tmp_34_fu_450_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                inputBuf_V_address0 <= tmp_34_fu_450_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inputBuf_V_address0 <= tmp_35_fu_424_p1(8 - 1 downto 0);
            else 
                inputBuf_V_address0 <= "XXXXXXXX";
            end if;
        else 
            inputBuf_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    inputBuf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inputBuf_V_ce0 <= ap_const_logic_1;
        else 
            inputBuf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_1292, ap_CS_fsm_pp0_stage1, exitcond_reg_1272_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_s_reg_1292 = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            inputBuf_V_we0 <= ap_const_logic_1;
        else 
            inputBuf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    masked_V_fu_460_p2 <= (weightMem_V_load_reg_1348 xor tmp2_fu_454_p2);
    nf_4_fu_418_p2 <= std_logic_vector(unsigned(ap_phi_mux_nf_phi_fu_258_p4) + unsigned(ap_const_lv32_1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter11, exitcond_reg_1272_pp0_iter10_reg, tmp_39_reg_1307_pp0_iter10_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_reg_1272_pp0_iter11_reg)
    begin
        if ((((tmp_39_reg_1307_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((tmp_39_reg_1307_pp0_iter10_reg = ap_const_lv1_1) and (exitcond_reg_1272_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_V_din_assign_proc : process(ap_enable_reg_pp0_iter11, tmp_V_10_reg_1561, tmp_V_11_reg_1577, ap_condition_1245, ap_condition_1249)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_1249)) then 
                out_V_V_din <= tmp_V_11_reg_1577;
            elsif ((ap_const_boolean_1 = ap_condition_1245)) then 
                out_V_V_din <= tmp_V_10_reg_1561;
            else 
                out_V_V_din <= "X";
            end if;
        else 
            out_V_V_din <= "X";
        end if; 
    end process;


    out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_predicate_op261_write_state25, ap_block_pp0_stage0_11001, ap_predicate_op263_write_state26, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op263_write_state26 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op261_write_state25 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_nf_1_fu_442_p3 <= 
        ap_const_lv32_0 when (tmp_51_fu_436_p2(0) = '1') else 
        ap_phi_reg_pp0_iter1_nf_1_reg_277;
    pct_V_i_fu_1080_p2 <= std_logic_vector(unsigned(tmp_429_i_cast_fu_1074_p1) + unsigned(tmp_430_i_cast_fu_1077_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sf_3_fu_374_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(sf_fu_160));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_V_address0 <= tmp_42_reg_1332_pp0_iter8_reg(8 - 1 downto 0);

    thresMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            thresMem_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_cast_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_reg_1448),4));
    tmp10_fu_976_p2 <= std_logic_vector(unsigned(tmp12_cast_fu_973_p1) + unsigned(tmp11_cast_fu_969_p1));
    tmp11_cast_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp11_fu_963_p2),3));
    tmp11_fu_963_p2 <= std_logic_vector(unsigned(tmp_387_i_cast_cast_fu_945_p1) + unsigned(tmp_390_i_cast_cast_fu_948_p1));
    tmp12_cast_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_reg_1398),3));
    tmp12_fu_655_p2 <= std_logic_vector(unsigned(tmp13_fu_649_p2) + unsigned(tmp_391_i_cast_cast_fu_613_p1));
    tmp13_fu_649_p2 <= std_logic_vector(unsigned(tmp_394_i_cast_cast_fu_625_p1) + unsigned(tmp_395_i_cast_cast_fu_637_p1));
    tmp14_fu_1060_p2 <= std_logic_vector(unsigned(tmp18_cast_fu_1057_p1) + unsigned(tmp15_reg_1468));
    tmp15_fu_1051_p2 <= std_logic_vector(unsigned(tmp17_cast_fu_1048_p1) + unsigned(tmp16_fu_1042_p2));
    tmp16_fu_1042_p2 <= std_logic_vector(unsigned(tmp_397_i_cast_fu_1036_p1) + unsigned(tmp_398_i_cast_fu_1039_p1));
    tmp17_cast_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp17_reg_1463),5));
    tmp17_fu_1030_p2 <= std_logic_vector(unsigned(tmp_399_i_cast_cast_fu_1024_p1) + unsigned(tmp_402_i_cast_cast_fu_1027_p1));
    tmp18_cast_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp18_reg_1418_pp0_iter3_reg),5));
    tmp18_fu_861_p2 <= std_logic_vector(unsigned(tmp20_cast_fu_857_p1) + unsigned(tmp19_cast_fu_847_p1));
    tmp19_cast_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_fu_841_p2),3));
    tmp19_fu_841_p2 <= std_logic_vector(unsigned(tmp_403_i_cast_cast_fu_685_p1) + unsigned(tmp_406_i_cast_cast_fu_697_p1));
    tmp1_fu_398_p2 <= std_logic_vector(unsigned(tmp_1169_fu_392_p2) + unsigned(sf_load_reg_1281));
    tmp20_cast_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp20_fu_851_p2),3));
    tmp20_fu_851_p2 <= std_logic_vector(unsigned(tmp_407_i_cast_cast_fu_709_p1) + unsigned(tmp_410_i_cast_cast_fu_721_p1));
    tmp21_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_reg_1453_pp0_iter4_reg),5));
    tmp21_fu_1001_p2 <= std_logic_vector(unsigned(tmp25_cast_fu_997_p1) + unsigned(tmp22_cast_fu_982_p1));
    tmp22_cast_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp22_reg_1423),4));
    tmp22_fu_887_p2 <= std_logic_vector(unsigned(tmp24_cast_fu_883_p1) + unsigned(tmp23_cast_fu_873_p1));
    tmp23_cast_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp23_fu_867_p2),3));
    tmp23_fu_867_p2 <= std_logic_vector(unsigned(tmp_411_i_cast_cast_fu_733_p1) + unsigned(tmp_414_i_cast_cast_fu_745_p1));
    tmp24_cast_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp24_fu_877_p2),3));
    tmp24_fu_877_p2 <= std_logic_vector(unsigned(tmp_415_i_cast_cast_fu_757_p1) + unsigned(tmp_418_i_cast_cast_fu_769_p1));
    tmp25_cast_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp25_fu_991_p2),4));
    tmp25_fu_991_p2 <= std_logic_vector(unsigned(tmp27_cast_fu_988_p1) + unsigned(tmp26_cast_fu_985_p1));
    tmp26_cast_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp26_reg_1428),3));
    tmp26_fu_893_p2 <= std_logic_vector(unsigned(tmp_419_i_cast_cast_fu_781_p1) + unsigned(tmp_422_i_cast_cast_fu_793_p1));
    tmp27_cast_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp27_reg_1433),3));
    tmp27_fu_905_p2 <= std_logic_vector(unsigned(tmp28_fu_899_p2) + unsigned(tmp_423_i_cast_cast_fu_805_p1));
    tmp28_fu_899_p2 <= std_logic_vector(unsigned(tmp_426_i_cast_cast_fu_817_p1) + unsigned(tmp_427_i_cast_cast_fu_829_p1));
    tmp2_fu_454_p2 <= (ap_phi_reg_pp0_iter2_p_s_reg_287 xor ap_const_lv32_FFFFFFFF);
    tmp3_fu_505_p2 <= std_logic_vector(unsigned(tmp_i_cast_fu_477_p1) + unsigned(tmp_371_i_cast_fu_493_p1));
    tmp4_fu_917_p2 <= std_logic_vector(unsigned(tmp_373_i_cast_fu_911_p1) + unsigned(tmp_374_i_cast_fu_914_p1));
    tmp5_cast_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_reg_1368),3));
    tmp5_fu_567_p2 <= std_logic_vector(unsigned(tmp6_fu_561_p2) + unsigned(tmp_375_i_cast_cast_fu_525_p1));
    tmp6_fu_561_p2 <= std_logic_vector(unsigned(tmp_378_i_cast_cast_fu_537_p1) + unsigned(tmp_379_i_cast_cast_fu_549_p1));
    tmp7_fu_1010_p2 <= std_logic_vector(unsigned(tmp9_cast_fu_1007_p1) + unsigned(tmp8_reg_1438));
    tmp8_fu_951_p2 <= std_logic_vector(unsigned(tmp_381_i_cast_fu_932_p1) + unsigned(tmp_382_i_cast_fu_936_p1));
    tmp9_cast_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_reg_1443),4));
    tmp9_fu_957_p2 <= std_logic_vector(unsigned(tmp_383_i_cast_cast_fu_939_p1) + unsigned(tmp_386_i_cast_cast_fu_942_p1));
    tmp_1167_fu_322_p1 <= in_idx_reg_243(1 - 1 downto 0);
    tmp_1168_fu_386_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_258_p4),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_1169_fu_392_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_258_p4),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_1170_fu_465_p1 <= masked_V_fu_460_p2(1 - 1 downto 0);
    tmp_1171_fu_469_p3 <= masked_V_fu_460_p2(1 downto 1);
    tmp_1172_fu_485_p3 <= masked_V_fu_460_p2(2 downto 2);
    tmp_1174_fu_517_p3 <= masked_V_fu_460_p2(4 downto 4);
    tmp_1175_fu_529_p3 <= masked_V_fu_460_p2(5 downto 5);
    tmp_1176_fu_541_p3 <= masked_V_fu_460_p2(6 downto 6);
    tmp_1182_fu_605_p3 <= masked_V_fu_460_p2(12 downto 12);
    tmp_1183_fu_617_p3 <= masked_V_fu_460_p2(13 downto 13);
    tmp_1184_fu_629_p3 <= masked_V_fu_460_p2(14 downto 14);
    tmp_1188_fu_677_p3 <= masked_V_fu_460_p2(18 downto 18);
    tmp_1189_fu_689_p3 <= masked_V_fu_460_p2(19 downto 19);
    tmp_1190_fu_701_p3 <= masked_V_fu_460_p2(20 downto 20);
    tmp_1191_fu_713_p3 <= masked_V_fu_460_p2(21 downto 21);
    tmp_1192_fu_725_p3 <= masked_V_fu_460_p2(22 downto 22);
    tmp_1193_fu_737_p3 <= masked_V_fu_460_p2(23 downto 23);
    tmp_1194_fu_749_p3 <= masked_V_fu_460_p2(24 downto 24);
    tmp_1195_fu_761_p3 <= masked_V_fu_460_p2(25 downto 25);
    tmp_1196_fu_773_p3 <= masked_V_fu_460_p2(26 downto 26);
    tmp_1197_fu_785_p3 <= masked_V_fu_460_p2(27 downto 27);
    tmp_1198_fu_797_p3 <= masked_V_fu_460_p2(28 downto 28);
    tmp_1199_fu_809_p3 <= masked_V_fu_460_p2(29 downto 29);
    tmp_1200_fu_821_p3 <= masked_V_fu_460_p2(30 downto 30);
    tmp_34_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_3_reg_1296),64));
    tmp_35_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_3_reg_1296),64));
    tmp_36_fu_403_p2 <= std_logic_vector(unsigned(tmp1_fu_398_p2) + unsigned(tmp_1168_fu_386_p2));
    tmp_370_i_cast_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1171_fu_469_p3),2));
    tmp_371_i_cast_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1172_fu_485_p3),2));
    tmp_373_i_cast_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_373_i_reg_1358),3));
    tmp_373_i_fu_511_p2 <= std_logic_vector(unsigned(tmp3_fu_505_p2) + unsigned(tmp_370_i_cast_fu_481_p1));
    tmp_374_i_cast_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1173_reg_1353),3));
    tmp_375_i_cast_cast_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1174_fu_517_p3),2));
    tmp_378_i_cast_cast_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1175_fu_529_p3),2));
    tmp_379_i_cast_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1176_fu_541_p3),2));
    tmp_37_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_reg_1302),64));
    tmp_381_i_cast_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_381_i_fu_926_p2),4));
    tmp_381_i_fu_926_p2 <= std_logic_vector(unsigned(tmp5_cast_fu_923_p1) + unsigned(tmp4_fu_917_p2));
    tmp_382_i_cast_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1177_reg_1363),4));
    tmp_383_i_cast_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1178_reg_1373),2));
    tmp_386_i_cast_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1179_reg_1378),2));
    tmp_387_i_cast_cast_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1180_reg_1383),2));
    tmp_38_fu_1106_p2 <= std_logic_vector(unsigned(accPopCount_V_0_0_2_fu_164) + unsigned(agg_result_V_i_cast_fu_1102_p1));
    tmp_390_i_cast_cast_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1181_reg_1388),2));
    tmp_391_i_cast_cast_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1182_fu_605_p3),2));
    tmp_394_i_cast_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1183_fu_617_p3),2));
    tmp_395_i_cast_cast_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1184_fu_629_p3),2));
    tmp_397_i_cast_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_397_i_reg_1458),5));
    tmp_397_i_fu_1018_p2 <= std_logic_vector(unsigned(tmp10_cast_fu_1015_p1) + unsigned(tmp7_fu_1010_p2));
    tmp_398_i_cast_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1185_reg_1393_pp0_iter3_reg),5));
    tmp_399_i_cast_cast_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1186_reg_1403),2));
    tmp_39_fu_409_p2 <= "1" when (sf_3_reg_1286 = ap_const_lv32_48) else "0";
    tmp_402_i_cast_cast_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1187_reg_1408),2));
    tmp_403_i_cast_cast_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1188_fu_677_p3),2));
    tmp_406_i_cast_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1189_fu_689_p3),2));
    tmp_407_i_cast_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1190_fu_701_p3),2));
    tmp_410_i_cast_cast_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1191_fu_713_p3),2));
    tmp_411_i_cast_cast_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1192_fu_725_p3),2));
    tmp_414_i_cast_cast_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1193_fu_737_p3),2));
    tmp_415_i_cast_cast_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1194_fu_749_p3),2));
    tmp_418_i_cast_cast_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1195_fu_761_p3),2));
    tmp_419_i_cast_cast_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1196_fu_773_p3),2));
    tmp_422_i_cast_cast_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1197_fu_785_p3),2));
    tmp_423_i_cast_cast_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1198_fu_797_p3),2));
    tmp_426_i_cast_cast_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1199_fu_809_p3),2));
    tmp_427_i_cast_cast_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1200_fu_821_p3),2));
    tmp_429_i_cast_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_429_i_reg_1473),6));
    tmp_429_i_fu_1068_p2 <= std_logic_vector(unsigned(tmp21_cast_fu_1065_p1) + unsigned(tmp14_fu_1060_p2));
    tmp_42_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nf_reg_254),64));
    tmp_430_i_cast_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1201_reg_1413_pp0_iter4_reg),6));
    tmp_46_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_reg_1549),49));
    tmp_47_fu_1159_p3 <= (thresMem_V_load_reg_1544 & ap_const_lv8_0);
    tmp_48_fu_1170_p2 <= std_logic_vector(unsigned(tmp_86_cast3_fu_1166_p1) + unsigned(tmp_46_fu_1156_p1));
    tmp_50_fu_1195_p2 <= std_logic_vector(unsigned(tmp_49_reg_1554) - unsigned(means_out5_V_0));
    tmp_51_fu_436_p2 <= "1" when (ap_phi_reg_pp0_iter1_nf_1_reg_277 = ap_const_lv32_100) else "0";
    tmp_86_cast3_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_1159_p3),49));
    tmp_V_10_fu_1186_p2 <= "1" when (signed(tmp_49_reg_1554) > signed(ap_const_lv24_0)) else "0";
    tmp_V_11_fu_1210_p2 <= "1" when (signed(accResidual_0_V_fu_1205_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_fu_310_p2 <= "1" when (in_idx_reg_243 = ap_const_lv2_2) else "0";
    tmp_i_cast_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1170_fu_465_p1),2));
    tmp_i_fu_1089_p3 <= (pct_V_i_reg_1478 & ap_const_lv1_0);
    tmp_s_fu_380_p2 <= "1" when (ap_phi_mux_nf_phi_fu_258_p4 = ap_const_lv32_0) else "0";
    weightMem_V_address0 <= tmp_37_fu_428_p1(15 - 1 downto 0);

    weightMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weightMem_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
