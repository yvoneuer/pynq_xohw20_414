-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingMatrixVecto_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    weightMem_V_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    weightMem_V_ce0 : OUT STD_LOGIC;
    weightMem_V_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
    thresMem_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    thresMem_V_ce0 : OUT STD_LOGIC;
    thresMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    alphaMem_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    alphaMem_V_ce0 : OUT STD_LOGIC;
    alphaMem_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in6_V_0 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_in6_V_1 : IN STD_LOGIC_VECTOR (23 downto 0);
    means_out6_V_0 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of StreamingMatrixVecto_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_655 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_reg_655_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_45_reg_690_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal i7_reg_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_idx_3_fu_268_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op75_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8 : BOOLEAN;
    signal ap_predicate_op151_write_state21 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_655_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_655_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_reg_659 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sf_load_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_4_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sf_4_reg_669 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter7 : BOOLEAN;
    signal ap_predicate_op147_write_state20 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal sf_load_5_reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_685 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_690_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nf_4_fu_358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_704 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_reg_715_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_nf_1_fu_382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_nf_1_reg_721 : STD_LOGIC_VECTOR (31 downto 0);
    signal inputBuf_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weightMem_V_load_reg_731 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1213_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_368_i_fu_451_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_368_i_reg_741 : STD_LOGIC_VECTOR (1 downto 0);
    signal pct_V_i_fu_463_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal pct_V_i_reg_746 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_44_fu_489_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_reg_751 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_599_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_57_reg_777 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_605_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_134_1_reg_787 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal alphaMem_V_load_reg_792 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_533_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_49_reg_812 : STD_LOGIC_VECTOR (47 downto 0);
    signal thresMem_V_load_reg_817 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_55_reg_822 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_16_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_16_reg_829 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_578_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_58_reg_835 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_fu_583_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal addconv_reg_840 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_17_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_17_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal inputBuf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal inputBuf_V_ce0 : STD_LOGIC;
    signal inputBuf_V_we0 : STD_LOGIC;
    signal in_idx_reg_195 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_phi_mux_nf_phi_fu_210_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i7_phi_fu_222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_nf_1_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_nf_1_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_239 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_239 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_reg_pp0_iter2_p_s_reg_239 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_39_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal accPopCount_V_fu_100 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_0_0_1_fu_286_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_1_fu_278_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sf_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal accPopCount_V_0_0_2_fu_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal accPopCount_V_1_0_2_fu_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1208_fu_274_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1209_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_394_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal masked_V_fu_400_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1210_fu_405_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1211_fu_409_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1212_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_365_i_cast_fu_421_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_366_i_cast_fu_433_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp2_fu_445_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_cast_fu_417_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_368_i_cast_fu_457_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_369_i_cast_fu_460_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_fu_472_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_V_i_fu_479_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_V_i_cast_fu_485_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_fu_542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_cast3_fu_549_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_50_fu_539_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_53_fu_553_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal accResidual_0_V_fu_588_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_533_ce : STD_LOGIC;
    signal grp_fu_599_ce : STD_LOGIC;
    signal grp_fu_605_ce : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_215 : BOOLEAN;
    signal ap_condition_260 : BOOLEAN;

    component BlackBoxJam_mul_24s_24s_48_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component BlackBoxJam_mul_mul_16s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component StreamingMatrixVecto_2_inputBuf_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    inputBuf_V_U : component StreamingMatrixVecto_2_inputBuf_V
    generic map (
        DataWidth => 4,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => inputBuf_V_address0,
        ce0 => inputBuf_V_ce0,
        we0 => inputBuf_V_we0,
        d0 => tmp_V_reg_704,
        q0 => inputBuf_V_q0);

    BlackBoxJam_mul_24s_24s_48_4_1_U594 : component BlackBoxJam_mul_24s_24s_48_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => alphaMem_V_load_reg_792,
        din1 => tmp_134_1_reg_787,
        ce => grp_fu_533_ce,
        dout => grp_fu_533_p2);

    BlackBoxJam_mul_mul_16s_24s_24_3_1_U595 : component BlackBoxJam_mul_mul_16s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_44_reg_751,
        din1 => means_in6_V_0,
        ce => grp_fu_599_ce,
        dout => grp_fu_599_p2);

    BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U596 : component BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accPopCount_V_1_0_2_fu_120,
        din1 => means_in6_V_1,
        din2 => tmp_57_reg_777,
        ce => grp_fu_605_ce,
        dout => grp_fu_605_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accPopCount_V_0_0_2_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter2_reg = ap_const_lv1_0) and (exitcond_reg_655_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                accPopCount_V_0_0_2_fu_116 <= tmp_44_reg_751;
            elsif (((tmp_45_reg_690_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                accPopCount_V_0_0_2_fu_116 <= ap_const_lv16_0;
            elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_0_0_2_fu_116 <= accPopCount_V_fu_100;
            end if; 
        end if;
    end process;

    accPopCount_V_1_0_2_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                accPopCount_V_1_0_2_fu_120 <= ap_const_lv16_0;
            elsif (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                accPopCount_V_1_0_2_fu_120 <= accPopCount_V_1_fu_104;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_nf_1_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_215)) then
                if (((tmp_45_fu_349_p2 = ap_const_lv1_0) and (exitcond_reg_655 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_mux_nf_phi_fu_210_p4;
                elsif (((tmp_45_fu_349_p2 = ap_const_lv1_1) and (exitcond_reg_655 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= nf_4_fu_358_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_nf_1_reg_229 <= ap_phi_reg_pp0_iter0_nf_1_reg_229;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_s_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_260)) then
                if (((tmp_s_reg_675 = ap_const_lv1_0) and (exitcond_reg_655_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_239 <= inputBuf_V_q0;
                elsif (((tmp_s_reg_675 = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_239 <= tmp_V_reg_704;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_s_reg_239 <= ap_phi_reg_pp0_iter1_p_s_reg_239;
                end if;
            end if; 
        end if;
    end process;

    i7_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i7_reg_218 <= ap_const_lv16_0;
            elsif (((exitcond_reg_655 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i7_reg_218 <= i_reg_659;
            end if; 
        end if;
    end process;

    in_idx_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_idx_reg_195 <= in_idx_3_fu_268_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                in_idx_reg_195 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    nf_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                nf_reg_206 <= ap_const_lv32_0;
            elsif (((exitcond_reg_655_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                nf_reg_206 <= p_nf_1_reg_721;
            end if; 
        end if;
    end process;

    sf_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_fu_349_p2 = ap_const_lv1_0) and (exitcond_reg_655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                sf_fu_112 <= sf_4_reg_669;
            elsif ((((tmp_45_fu_349_p2 = ap_const_lv1_1) and (exitcond_reg_655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                sf_fu_112 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                accPopCount_V_1_fu_104 <= accPopCount_V_1_0_1_fu_278_p3;
                accPopCount_V_fu_100 <= accPopCount_V_0_0_1_fu_286_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                addconv_reg_840 <= addconv_fu_583_p2;
                tmp_58_reg_835 <= tmp_58_fu_578_p2;
                tmp_V_16_reg_829 <= tmp_V_16_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter4_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                alphaMem_V_load_reg_792 <= alphaMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_phi_reg_pp0_iter1_p_s_reg_239 <= ap_phi_reg_pp0_iter0_p_s_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_reg_655 <= exitcond_fu_314_p2;
                exitcond_reg_655_pp0_iter1_reg <= exitcond_reg_655;
                exitcond_reg_655_pp0_iter2_reg <= exitcond_reg_655_pp0_iter1_reg;
                exitcond_reg_655_pp0_iter3_reg <= exitcond_reg_655_pp0_iter2_reg;
                exitcond_reg_655_pp0_iter4_reg <= exitcond_reg_655_pp0_iter3_reg;
                exitcond_reg_655_pp0_iter5_reg <= exitcond_reg_655_pp0_iter4_reg;
                exitcond_reg_655_pp0_iter6_reg <= exitcond_reg_655_pp0_iter5_reg;
                exitcond_reg_655_pp0_iter7_reg <= exitcond_reg_655_pp0_iter6_reg;
                exitcond_reg_655_pp0_iter8_reg <= exitcond_reg_655_pp0_iter7_reg;
                tmp_1213_reg_736 <= masked_V_fu_400_p2(3 downto 3);
                tmp_368_i_reg_741 <= tmp_368_i_fu_451_p2;
                tmp_44_reg_751 <= tmp_44_fu_489_p2;
                    tmp_46_reg_715_pp0_iter2_reg(31 downto 0) <= tmp_46_reg_715(31 downto 0);
                    tmp_46_reg_715_pp0_iter3_reg(31 downto 0) <= tmp_46_reg_715_pp0_iter2_reg(31 downto 0);
                    tmp_46_reg_715_pp0_iter4_reg(31 downto 0) <= tmp_46_reg_715_pp0_iter3_reg(31 downto 0);
                    tmp_46_reg_715_pp0_iter5_reg(31 downto 0) <= tmp_46_reg_715_pp0_iter4_reg(31 downto 0);
                    tmp_46_reg_715_pp0_iter6_reg(31 downto 0) <= tmp_46_reg_715_pp0_iter5_reg(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_659 <= i_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_655 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_nf_1_reg_721 <= p_nf_1_fu_382_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                pct_V_i_reg_746 <= pct_V_i_fu_463_p2;
                tmp_45_reg_690_pp0_iter1_reg <= tmp_45_reg_690;
                tmp_45_reg_690_pp0_iter2_reg <= tmp_45_reg_690_pp0_iter1_reg;
                tmp_45_reg_690_pp0_iter3_reg <= tmp_45_reg_690_pp0_iter2_reg;
                tmp_45_reg_690_pp0_iter4_reg <= tmp_45_reg_690_pp0_iter3_reg;
                tmp_45_reg_690_pp0_iter5_reg <= tmp_45_reg_690_pp0_iter4_reg;
                tmp_45_reg_690_pp0_iter6_reg <= tmp_45_reg_690_pp0_iter5_reg;
                tmp_45_reg_690_pp0_iter7_reg <= tmp_45_reg_690_pp0_iter6_reg;
                tmp_45_reg_690_pp0_iter8_reg <= tmp_45_reg_690_pp0_iter7_reg;
                weightMem_V_load_reg_731 <= weightMem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_4_reg_669 <= sf_4_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                sf_load_5_reg_679 <= sf_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sf_load_reg_664 <= sf_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                thresMem_V_load_reg_817 <= thresMem_V_q0;
                tmp_49_reg_812 <= grp_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter4_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_134_1_reg_787 <= grp_fu_605_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_41_reg_685 <= tmp_41_fu_344_p2;
                tmp_45_reg_690 <= tmp_45_fu_349_p2;
                tmp_s_reg_675 <= tmp_s_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690 = ap_const_lv1_1) and (exitcond_reg_655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_46_reg_715(31 downto 0) <= tmp_46_fu_372_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter6_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_55_reg_822 <= tmp_53_fu_553_p2(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter3_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_57_reg_777 <= grp_fu_599_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_45_reg_690_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_V_17_reg_845 <= tmp_V_17_fu_593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_reg_704 <= in_V_V_dout;
            end if;
        end if;
    end process;
    tmp_46_reg_715(63 downto 32) <= "00000000000000000000000000000000";
    tmp_46_reg_715_pp0_iter2_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_46_reg_715_pp0_iter3_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_46_reg_715_pp0_iter4_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_46_reg_715_pp0_iter5_reg(63 downto 32) <= "00000000000000000000000000000000";
    tmp_46_reg_715_pp0_iter6_reg(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, tmp_fu_262_p2, ap_CS_fsm_state2, exitcond_fu_314_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_314_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((exitcond_fu_314_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    accPopCount_V_0_0_1_fu_286_p3 <= 
        accPopCount_V_fu_100 when (tmp_1208_fu_274_p1(0) = '1') else 
        ap_const_lv16_0;
    accPopCount_V_1_0_1_fu_278_p3 <= 
        ap_const_lv16_0 when (tmp_1208_fu_274_p1(0) = '1') else 
        accPopCount_V_1_fu_104;
    accResidual_0_V_fu_588_p3 <= 
        tmp_58_reg_835 when (tmp_V_16_reg_829(0) = '1') else 
        addconv_reg_840;
    addconv_fu_583_p2 <= std_logic_vector(unsigned(tmp_55_reg_822) + unsigned(means_out6_V_0));
        agg_result_V_i_cast_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(agg_result_V_i_fu_479_p2),16));

    agg_result_V_i_fu_479_p2 <= std_logic_vector(signed(ap_const_lv4_C) + signed(tmp_i_fu_472_p3));
    alphaMem_V_address0 <= tmp_46_reg_715_pp0_iter4_reg(9 - 1 downto 0);

    alphaMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            alphaMem_V_ce0 <= ap_const_logic_1;
        else 
            alphaMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op151_write_state21)
    begin
                ap_block_pp0_stage0_01001 <= (((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op151_write_state21 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op151_write_state21)
    begin
                ap_block_pp0_stage0_11001 <= (((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op151_write_state21 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_predicate_op75_read_state5, ap_predicate_op151_write_state21)
    begin
                ap_block_pp0_stage0_subdone <= (((in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op75_read_state5 = ap_const_boolean_1)) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op151_write_state21 = ap_const_boolean_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter8, ap_predicate_op147_write_state20)
    begin
                ap_block_pp0_stage1_01001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_predicate_op147_write_state20 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter8, ap_predicate_op147_write_state20)
    begin
                ap_block_pp0_stage1_11001 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_predicate_op147_write_state20 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter8, ap_predicate_op147_write_state20)
    begin
                ap_block_pp0_stage1_subdone <= ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_predicate_op147_write_state20 = ap_const_boolean_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage1_iter8_assign_proc : process(out_V_V_full_n, ap_predicate_op147_write_state20)
    begin
                ap_block_state20_pp0_stage1_iter8 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op147_write_state20 = ap_const_boolean_1));
    end process;


    ap_block_state21_pp0_stage0_iter9_assign_proc : process(out_V_V_full_n, ap_predicate_op151_write_state21)
    begin
                ap_block_state21_pp0_stage0_iter9 <= ((out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op151_write_state21 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, ap_predicate_op75_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_215_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_215 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_260_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_260 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_314_p2)
    begin
        if ((exitcond_fu_314_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i7_phi_fu_222_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_655, i7_reg_218, i_reg_659)
    begin
        if (((exitcond_reg_655 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i7_phi_fu_222_p4 <= i_reg_659;
        else 
            ap_phi_mux_i7_phi_fu_222_p4 <= i7_reg_218;
        end if; 
    end process;


    ap_phi_mux_nf_phi_fu_210_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, nf_reg_206, exitcond_reg_655_pp0_iter1_reg, p_nf_1_reg_721)
    begin
        if (((exitcond_reg_655_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_nf_phi_fu_210_p4 <= p_nf_1_reg_721;
        else 
            ap_phi_mux_nf_phi_fu_210_p4 <= nf_reg_206;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_nf_1_reg_229 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_s_reg_239 <= "XXXX";

    ap_predicate_op147_write_state20_assign_proc : process(exitcond_reg_655_pp0_iter8_reg, tmp_45_reg_690_pp0_iter7_reg)
    begin
                ap_predicate_op147_write_state20 <= ((tmp_45_reg_690_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op151_write_state21_assign_proc : process(exitcond_reg_655_pp0_iter8_reg, tmp_45_reg_690_pp0_iter8_reg)
    begin
                ap_predicate_op151_write_state21 <= ((tmp_45_reg_690_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op75_read_state5_assign_proc : process(exitcond_reg_655, tmp_s_reg_675)
    begin
                ap_predicate_op75_read_state5 <= ((tmp_s_reg_675 = ap_const_lv1_1) and (exitcond_reg_655 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_fu_314_p2 <= "1" when (ap_phi_mux_i7_phi_fu_222_p4 = ap_const_lv16_8000) else "0";

    grp_fu_533_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_533_ce <= ap_const_logic_1;
        else 
            grp_fu_533_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_599_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_599_ce <= ap_const_logic_1;
        else 
            grp_fu_599_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_605_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_605_ce <= ap_const_logic_1;
        else 
            grp_fu_605_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_320_p2 <= std_logic_vector(unsigned(ap_phi_mux_i7_phi_fu_222_p4) + unsigned(ap_const_lv16_1));

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_655, tmp_s_reg_675)
    begin
        if (((tmp_s_reg_675 = ap_const_lv1_1) and (exitcond_reg_655 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op75_read_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op75_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    in_idx_3_fu_268_p2 <= std_logic_vector(unsigned(in_idx_reg_195) + unsigned(ap_const_lv2_1));

    inputBuf_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_39_fu_364_p1, tmp_38_fu_390_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                inputBuf_V_address0 <= tmp_38_fu_390_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inputBuf_V_address0 <= tmp_39_fu_364_p1(7 - 1 downto 0);
            else 
                inputBuf_V_address0 <= "XXXXXXX";
            end if;
        else 
            inputBuf_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    inputBuf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            inputBuf_V_ce0 <= ap_const_logic_1;
        else 
            inputBuf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inputBuf_V_we0_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_s_reg_675, ap_CS_fsm_pp0_stage1, exitcond_reg_655_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_s_reg_675 = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            inputBuf_V_we0 <= ap_const_logic_1;
        else 
            inputBuf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    masked_V_fu_400_p2 <= (weightMem_V_load_reg_731 xor tmp1_fu_394_p2);
    nf_4_fu_358_p2 <= std_logic_vector(unsigned(ap_phi_mux_nf_phi_fu_210_p4) + unsigned(ap_const_lv32_1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter8, ap_block_pp0_stage1, exitcond_reg_655_pp0_iter8_reg, tmp_45_reg_690_pp0_iter7_reg, ap_enable_reg_pp0_iter9, tmp_45_reg_690_pp0_iter8_reg)
    begin
        if ((((tmp_45_reg_690_pp0_iter7_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((tmp_45_reg_690_pp0_iter8_reg = ap_const_lv1_1) and (exitcond_reg_655_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_V_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_predicate_op151_write_state21, ap_predicate_op147_write_state20, tmp_V_16_reg_829, tmp_V_17_reg_845, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op151_write_state21 = ap_const_boolean_1))) then 
            out_V_V_din <= tmp_V_17_reg_845;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op147_write_state20 = ap_const_boolean_1))) then 
            out_V_V_din <= tmp_V_16_reg_829;
        else 
            out_V_V_din <= "X";
        end if; 
    end process;


    out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_predicate_op151_write_state21, ap_block_pp0_stage0_11001, ap_predicate_op147_write_state20, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op147_write_state20 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_predicate_op151_write_state21 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_nf_1_fu_382_p3 <= 
        ap_const_lv32_0 when (tmp_56_fu_376_p2(0) = '1') else 
        ap_phi_reg_pp0_iter1_nf_1_reg_229;
    pct_V_i_fu_463_p2 <= std_logic_vector(unsigned(tmp_368_i_cast_fu_457_p1) + unsigned(tmp_369_i_cast_fu_460_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sf_4_fu_326_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(sf_fu_112));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    thresMem_V_address0 <= tmp_46_reg_715_pp0_iter6_reg(9 - 1 downto 0);

    thresMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            thresMem_V_ce0 <= ap_const_logic_1;
        else 
            thresMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_394_p2 <= (ap_phi_reg_pp0_iter2_p_s_reg_239 xor ap_const_lv4_F);
    tmp2_fu_445_p2 <= std_logic_vector(unsigned(tmp_365_i_cast_fu_421_p1) + unsigned(tmp_366_i_cast_fu_433_p1));
    tmp_1208_fu_274_p1 <= in_idx_reg_195(1 - 1 downto 0);
    tmp_1209_fu_338_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_nf_phi_fu_210_p4),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    tmp_1210_fu_405_p1 <= masked_V_fu_400_p2(1 - 1 downto 0);
    tmp_1211_fu_409_p3 <= masked_V_fu_400_p2(1 downto 1);
    tmp_1212_fu_425_p3 <= masked_V_fu_400_p2(2 downto 2);
    tmp_365_i_cast_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1211_fu_409_p3),2));
    tmp_366_i_cast_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1212_fu_425_p3),2));
    tmp_368_i_cast_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_368_i_reg_741),3));
    tmp_368_i_fu_451_p2 <= std_logic_vector(unsigned(tmp2_fu_445_p2) + unsigned(tmp_i_cast_fu_417_p1));
    tmp_369_i_cast_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1213_reg_736),3));
    tmp_38_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_5_reg_679),64));
    tmp_39_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_load_5_reg_679),64));
    tmp_41_fu_344_p2 <= std_logic_vector(unsigned(tmp_1209_fu_338_p2) + unsigned(sf_load_reg_664));
    tmp_42_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_reg_685),64));
    tmp_44_fu_489_p2 <= std_logic_vector(unsigned(accPopCount_V_0_0_2_fu_116) + unsigned(agg_result_V_i_cast_fu_485_p1));
    tmp_45_fu_349_p2 <= "1" when (sf_4_reg_669 = ap_const_lv32_40) else "0";
    tmp_46_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nf_reg_206),64));
    tmp_50_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_reg_812),49));
    tmp_52_cast3_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_542_p3),49));
    tmp_52_fu_542_p3 <= (thresMem_V_load_reg_817 & ap_const_lv8_0);
    tmp_53_fu_553_p2 <= std_logic_vector(unsigned(tmp_52_cast3_fu_549_p1) + unsigned(tmp_50_fu_539_p1));
    tmp_56_fu_376_p2 <= "1" when (ap_phi_reg_pp0_iter1_nf_1_reg_229 = ap_const_lv32_200) else "0";
    tmp_58_fu_578_p2 <= std_logic_vector(unsigned(tmp_55_reg_822) - unsigned(means_out6_V_0));
    tmp_V_16_fu_569_p2 <= "1" when (signed(tmp_55_reg_822) > signed(ap_const_lv24_0)) else "0";
    tmp_V_17_fu_593_p2 <= "1" when (signed(accResidual_0_V_fu_588_p3) > signed(ap_const_lv24_0)) else "0";
    tmp_fu_262_p2 <= "1" when (in_idx_reg_195 = ap_const_lv2_2) else "0";
    tmp_i_cast_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1210_fu_405_p1),2));
    tmp_i_fu_472_p3 <= (pct_V_i_reg_746 & ap_const_lv1_0);
    tmp_s_fu_332_p2 <= "1" when (ap_phi_mux_nf_phi_fu_210_p4 = ap_const_lv32_0) else "0";
    weightMem_V_address0 <= tmp_42_fu_368_p1(15 - 1 downto 0);

    weightMem_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weightMem_V_ce0 <= ap_const_logic_1;
        else 
            weightMem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
