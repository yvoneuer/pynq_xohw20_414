// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingMatrixVecto_3 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        weightMem_0_V_address0,
        weightMem_0_V_ce0,
        weightMem_0_V_q0,
        weightMem_1_V_address0,
        weightMem_1_V_ce0,
        weightMem_1_V_q0,
        weightMem_2_V_address0,
        weightMem_2_V_ce0,
        weightMem_2_V_q0,
        weightMem_3_V_address0,
        weightMem_3_V_ce0,
        weightMem_3_V_q0,
        thresMem_0_V_address0,
        thresMem_0_V_ce0,
        thresMem_0_V_q0,
        thresMem_1_V_address0,
        thresMem_1_V_ce0,
        thresMem_1_V_q0,
        thresMem_2_V_address0,
        thresMem_2_V_ce0,
        thresMem_2_V_q0,
        thresMem_3_V_address0,
        thresMem_3_V_ce0,
        thresMem_3_V_q0,
        alphaMem_0_V_address0,
        alphaMem_0_V_ce0,
        alphaMem_0_V_q0,
        alphaMem_1_V_address0,
        alphaMem_1_V_ce0,
        alphaMem_1_V_q0,
        alphaMem_2_V_address0,
        alphaMem_2_V_ce0,
        alphaMem_2_V_q0,
        alphaMem_3_V_address0,
        alphaMem_3_V_ce0,
        alphaMem_3_V_q0,
        means_in4_V_0,
        means_in4_V_1,
        means_out4_V_0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state29 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [3:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
output  [11:0] weightMem_0_V_address0;
output   weightMem_0_V_ce0;
input  [31:0] weightMem_0_V_q0;
output  [11:0] weightMem_1_V_address0;
output   weightMem_1_V_ce0;
input  [31:0] weightMem_1_V_q0;
output  [11:0] weightMem_2_V_address0;
output   weightMem_2_V_ce0;
input  [31:0] weightMem_2_V_q0;
output  [11:0] weightMem_3_V_address0;
output   weightMem_3_V_ce0;
input  [31:0] weightMem_3_V_q0;
output  [5:0] thresMem_0_V_address0;
output   thresMem_0_V_ce0;
input  [23:0] thresMem_0_V_q0;
output  [5:0] thresMem_1_V_address0;
output   thresMem_1_V_ce0;
input  [23:0] thresMem_1_V_q0;
output  [5:0] thresMem_2_V_address0;
output   thresMem_2_V_ce0;
input  [23:0] thresMem_2_V_q0;
output  [5:0] thresMem_3_V_address0;
output   thresMem_3_V_ce0;
input  [23:0] thresMem_3_V_q0;
output  [5:0] alphaMem_0_V_address0;
output   alphaMem_0_V_ce0;
input  [23:0] alphaMem_0_V_q0;
output  [5:0] alphaMem_1_V_address0;
output   alphaMem_1_V_ce0;
input  [23:0] alphaMem_1_V_q0;
output  [5:0] alphaMem_2_V_address0;
output   alphaMem_2_V_ce0;
input  [23:0] alphaMem_2_V_q0;
output  [5:0] alphaMem_3_V_address0;
output   alphaMem_3_V_ce0;
input  [23:0] alphaMem_3_V_q0;
input  [23:0] means_in4_V_0;
input  [23:0] means_in4_V_1;
input  [23:0] means_out4_V_0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg[3:0] out_V_V_din;
reg out_V_V_write;
reg weightMem_0_V_ce0;
reg weightMem_1_V_ce0;
reg weightMem_2_V_ce0;
reg weightMem_3_V_ce0;
reg thresMem_0_V_ce0;
reg thresMem_1_V_ce0;
reg thresMem_2_V_ce0;
reg thresMem_3_V_ce0;
reg alphaMem_0_V_ce0;
reg alphaMem_1_V_ce0;
reg alphaMem_2_V_ce0;
reg alphaMem_3_V_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_1376;
reg   [0:0] tmp_s_reg_1396;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] exitcond_reg_1376_pp0_iter11_reg;
reg   [0:0] tmp_62_reg_1411;
reg   [0:0] tmp_62_reg_1411_pp0_iter11_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_reg_1376_pp0_iter12_reg;
reg   [31:0] nf_reg_383;
reg   [14:0] i8_reg_395;
wire   [6:0] grp_NaivePopCount_fu_425_ap_return;
reg   [6:0] reg_467;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_state12_pp0_stage1_iter4;
wire    ap_block_state14_pp0_stage1_iter5;
wire    ap_block_state16_pp0_stage1_iter6;
wire    ap_block_state18_pp0_stage1_iter7;
wire    ap_block_state20_pp0_stage1_iter8;
wire    ap_block_state22_pp0_stage1_iter9;
wire    ap_block_state24_pp0_stage1_iter10;
wire    ap_block_state26_pp0_stage1_iter11;
reg    ap_predicate_op349_write_state28;
reg    ap_block_state28_pp0_stage1_iter12;
reg    ap_block_pp0_stage1_11001;
reg    ap_enable_reg_pp0_iter6;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op131_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state17_pp0_stage0_iter7;
wire    ap_block_state19_pp0_stage0_iter8;
wire    ap_block_state21_pp0_stage0_iter9;
wire    ap_block_state23_pp0_stage0_iter10;
wire    ap_block_state25_pp0_stage0_iter11;
reg    ap_predicate_op345_write_state27;
reg    ap_block_state27_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] grp_NaivePopCount_fu_430_ap_return;
reg   [6:0] reg_471;
wire   [0:0] tmp_fu_475_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] in_idx_4_fu_481_p2;
wire   [0:0] exitcond_fu_635_p2;
reg   [0:0] exitcond_reg_1376_pp0_iter1_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter2_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter3_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter4_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter5_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter6_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter7_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter8_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter9_reg;
reg   [0:0] exitcond_reg_1376_pp0_iter10_reg;
wire   [14:0] i_fu_641_p2;
reg   [14:0] i_reg_1380;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] sf_load_reg_1385;
wire   [31:0] sf_5_fu_647_p2;
reg   [31:0] sf_5_reg_1390;
wire   [0:0] tmp_s_fu_653_p2;
reg   [0:0] tmp_s_reg_1396_pp0_iter1_reg;
reg   [31:0] sf_load83_reg_1400;
wire   [31:0] tmp_60_fu_676_p2;
reg   [31:0] tmp_60_reg_1406;
wire   [0:0] tmp_62_fu_682_p2;
reg   [0:0] tmp_62_reg_1411_pp0_iter1_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter2_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter3_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter4_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter5_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter6_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter7_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter8_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter9_reg;
reg   [0:0] tmp_62_reg_1411_pp0_iter10_reg;
wire   [31:0] nf_5_fu_691_p2;
reg   [31:0] tmp_V_reg_1425;
wire   [63:0] tmp_61_fu_701_p1;
reg   [63:0] tmp_61_reg_1431;
wire   [63:0] tmp_63_fu_706_p1;
reg   [63:0] tmp_63_reg_1447;
reg   [63:0] tmp_63_reg_1447_pp0_iter2_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter3_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter4_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter5_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter6_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter7_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter8_reg;
reg   [63:0] tmp_63_reg_1447_pp0_iter9_reg;
wire   [31:0] p_nf_1_fu_716_p3;
reg   [31:0] p_nf_1_reg_1459;
wire   [31:0] inputBuf_V_q0;
reg   [31:0] inputBuf_V_load_reg_1464;
reg   [31:0] weightMem_0_V_load_reg_1469;
reg   [31:0] weightMem_1_V_load_reg_1474;
wire   [31:0] p_1_fu_728_p2;
reg   [31:0] p_1_reg_1479;
wire   [31:0] masked_V_fu_734_p2;
reg   [31:0] masked_V_reg_1485;
wire   [31:0] masked_V_0_1_fu_739_p2;
reg   [31:0] masked_V_0_1_reg_1490;
wire   [31:0] masked_V_0_2_fu_744_p2;
reg   [31:0] masked_V_0_2_reg_1505;
wire   [31:0] masked_V_0_3_fu_749_p2;
reg   [31:0] masked_V_0_3_reg_1510;
wire  signed [15:0] accPopCount_0_0_V_fu_764_p2;
reg  signed [15:0] accPopCount_0_0_V_reg_1515;
wire  signed [15:0] accPopCount_0_1_V_fu_774_p2;
reg  signed [15:0] accPopCount_0_1_V_reg_1520;
wire  signed [15:0] accPopCount_0_2_V_fu_810_p2;
reg  signed [15:0] accPopCount_0_2_V_reg_1525;
wire  signed [15:0] accPopCount_0_3_V_fu_820_p2;
reg  signed [15:0] accPopCount_0_3_V_reg_1530;
reg  signed [23:0] means_in4_V_0_load_reg_1540;
reg  signed [23:0] means_in4_V_1_load_reg_1568;
wire  signed [23:0] grp_fu_1204_p2;
reg  signed [23:0] tmp_68_reg_1581;
wire  signed [23:0] grp_fu_1210_p2;
reg  signed [23:0] tmp_168_0_1_reg_1586;
wire  signed [23:0] grp_fu_1216_p2;
reg  signed [23:0] tmp_168_0_2_reg_1621;
wire  signed [23:0] grp_fu_1221_p2;
reg  signed [23:0] tmp_168_0_3_reg_1626;
wire  signed [23:0] grp_fu_1226_p3;
reg  signed [23:0] tmp_169_1_reg_1631;
reg    ap_enable_reg_pp0_iter8;
wire  signed [23:0] grp_fu_1233_p3;
reg  signed [23:0] tmp_169_1_1_reg_1636;
reg  signed [23:0] alphaMem_0_V_load_reg_1641;
reg  signed [23:0] alphaMem_1_V_load_reg_1646;
reg  signed [23:0] alphaMem_2_V_load_reg_1651;
reg  signed [23:0] alphaMem_3_V_load_reg_1656;
wire  signed [23:0] grp_fu_1240_p3;
reg  signed [23:0] tmp_169_1_2_reg_1661;
wire  signed [23:0] grp_fu_1246_p3;
reg  signed [23:0] tmp_169_1_3_reg_1666;
wire   [47:0] grp_fu_920_p2;
reg   [47:0] r_V_5_reg_1731;
reg   [23:0] thresMem_0_V_load_reg_1736;
wire   [47:0] grp_fu_932_p2;
reg   [47:0] r_V_5_1_reg_1741;
reg   [23:0] thresMem_1_V_load_reg_1746;
reg   [23:0] thresMem_2_V_load_reg_1751;
reg   [23:0] thresMem_3_V_load_reg_1756;
reg   [23:0] tmp_69_reg_1761;
reg   [23:0] tmp_165_1_reg_1768;
wire   [47:0] grp_fu_944_p2;
reg   [47:0] r_V_5_2_reg_1775;
wire   [47:0] grp_fu_956_p2;
reg   [47:0] r_V_5_3_reg_1780;
reg   [23:0] tmp_165_2_reg_1785;
reg   [23:0] tmp_165_3_reg_1792;
wire   [0:0] tmp_70_fu_1082_p2;
reg   [0:0] tmp_70_reg_1799;
reg   [23:0] means_out4_V_0_load_reg_1805;
wire   [23:0] tmp_71_fu_1091_p2;
reg   [23:0] tmp_71_reg_1813;
wire   [23:0] addconv_fu_1096_p2;
reg   [23:0] addconv_reg_1818;
wire   [0:0] tmp_176_0_1_fu_1101_p2;
reg   [0:0] tmp_176_0_1_reg_1823;
wire   [23:0] tmp_179_0_1_fu_1106_p2;
reg   [23:0] tmp_179_0_1_reg_1829;
wire   [23:0] addconv_0_1_fu_1111_p2;
reg   [23:0] addconv_0_1_reg_1834;
wire   [0:0] tmp_176_0_2_fu_1126_p2;
reg   [0:0] tmp_176_0_2_reg_1839;
wire   [23:0] tmp_179_0_2_fu_1131_p2;
reg   [23:0] tmp_179_0_2_reg_1845;
wire   [23:0] addconv_0_2_fu_1135_p2;
reg   [23:0] addconv_0_2_reg_1850;
wire   [0:0] tmp_176_0_3_fu_1139_p2;
reg   [0:0] tmp_176_0_3_reg_1855;
wire   [23:0] tmp_179_0_3_fu_1144_p2;
reg   [23:0] tmp_179_0_3_reg_1861;
wire   [23:0] addconv_0_3_fu_1148_p2;
reg   [23:0] addconv_0_3_reg_1866;
wire   [0:0] tmp_176_1_fu_1152_p2;
reg   [0:0] tmp_176_1_reg_1871;
wire   [0:0] tmp_176_1_1_fu_1158_p2;
reg   [0:0] tmp_176_1_1_reg_1876;
wire   [0:0] tmp_176_1_2_fu_1183_p2;
reg   [0:0] tmp_176_1_2_reg_1881;
wire   [0:0] tmp_176_1_3_fu_1189_p2;
reg   [0:0] tmp_176_1_3_reg_1886;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg   [6:0] inputBuf_V_address0;
reg    inputBuf_V_ce0;
reg    inputBuf_V_we0;
reg   [31:0] grp_NaivePopCount_fu_425_in_V_read;
reg    grp_NaivePopCount_fu_425_ap_ce;
wire    ap_block_state4_pp0_stage1_iter0_ignore_call15;
wire    ap_block_state6_pp0_stage1_iter1_ignore_call15;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call15;
wire    ap_block_state10_pp0_stage1_iter3_ignore_call15;
wire    ap_block_state12_pp0_stage1_iter4_ignore_call15;
wire    ap_block_state14_pp0_stage1_iter5_ignore_call15;
wire    ap_block_state16_pp0_stage1_iter6_ignore_call15;
wire    ap_block_state18_pp0_stage1_iter7_ignore_call15;
wire    ap_block_state20_pp0_stage1_iter8_ignore_call15;
wire    ap_block_state22_pp0_stage1_iter9_ignore_call15;
wire    ap_block_state24_pp0_stage1_iter10_ignore_call15;
wire    ap_block_state26_pp0_stage1_iter11_ignore_call15;
reg    ap_block_state28_pp0_stage1_iter12_ignore_call15;
reg    ap_block_pp0_stage1_11001_ignoreCallOp159;
wire    ap_block_state3_pp0_stage0_iter0_ignore_call15;
reg    ap_block_state5_pp0_stage0_iter1_ignore_call15;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call15;
wire    ap_block_state9_pp0_stage0_iter3_ignore_call15;
wire    ap_block_state11_pp0_stage0_iter4_ignore_call15;
wire    ap_block_state13_pp0_stage0_iter5_ignore_call15;
wire    ap_block_state15_pp0_stage0_iter6_ignore_call15;
wire    ap_block_state17_pp0_stage0_iter7_ignore_call15;
wire    ap_block_state19_pp0_stage0_iter8_ignore_call15;
wire    ap_block_state21_pp0_stage0_iter9_ignore_call15;
wire    ap_block_state23_pp0_stage0_iter10_ignore_call15;
wire    ap_block_state25_pp0_stage0_iter11_ignore_call15;
reg    ap_block_state27_pp0_stage0_iter12_ignore_call15;
reg    ap_block_pp0_stage0_11001_ignoreCallOp165;
reg   [31:0] grp_NaivePopCount_fu_430_in_V_read;
reg    grp_NaivePopCount_fu_430_ap_ce;
wire    ap_block_state4_pp0_stage1_iter0_ignore_call21;
wire    ap_block_state6_pp0_stage1_iter1_ignore_call21;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call21;
wire    ap_block_state10_pp0_stage1_iter3_ignore_call21;
wire    ap_block_state12_pp0_stage1_iter4_ignore_call21;
wire    ap_block_state14_pp0_stage1_iter5_ignore_call21;
wire    ap_block_state16_pp0_stage1_iter6_ignore_call21;
wire    ap_block_state18_pp0_stage1_iter7_ignore_call21;
wire    ap_block_state20_pp0_stage1_iter8_ignore_call21;
wire    ap_block_state22_pp0_stage1_iter9_ignore_call21;
wire    ap_block_state24_pp0_stage1_iter10_ignore_call21;
wire    ap_block_state26_pp0_stage1_iter11_ignore_call21;
reg    ap_block_state28_pp0_stage1_iter12_ignore_call21;
reg    ap_block_pp0_stage1_11001_ignoreCallOp160;
wire    ap_block_state3_pp0_stage0_iter0_ignore_call21;
reg    ap_block_state5_pp0_stage0_iter1_ignore_call21;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call21;
wire    ap_block_state9_pp0_stage0_iter3_ignore_call21;
wire    ap_block_state11_pp0_stage0_iter4_ignore_call21;
wire    ap_block_state13_pp0_stage0_iter5_ignore_call21;
wire    ap_block_state15_pp0_stage0_iter6_ignore_call21;
wire    ap_block_state17_pp0_stage0_iter7_ignore_call21;
wire    ap_block_state19_pp0_stage0_iter8_ignore_call21;
wire    ap_block_state21_pp0_stage0_iter9_ignore_call21;
wire    ap_block_state23_pp0_stage0_iter10_ignore_call21;
wire    ap_block_state25_pp0_stage0_iter11_ignore_call21;
reg    ap_block_state27_pp0_stage0_iter12_ignore_call21;
reg    ap_block_pp0_stage0_11001_ignoreCallOp166;
reg   [1:0] in_idx_reg_372;
reg    ap_block_state1;
reg   [31:0] ap_phi_mux_nf_phi_fu_387_p4;
reg   [14:0] ap_phi_mux_i8_phi_fu_399_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_nf_1_reg_406;
reg   [31:0] ap_phi_reg_pp0_iter1_nf_1_reg_406;
reg   [31:0] ap_phi_mux_p_s_phi_fu_419_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_p_s_reg_416;
reg   [31:0] ap_phi_reg_pp0_iter1_p_s_reg_416;
reg   [31:0] ap_phi_reg_pp0_iter2_p_s_reg_416;
wire   [63:0] tmp_58_fu_697_p1;
wire   [63:0] tmp_57_fu_724_p1;
wire   [3:0] tmp_V_14_fu_1169_p5;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] tmp_V_15_fu_1195_p5;
reg    ap_block_pp0_stage1_01001;
reg   [15:0] accPopCount_V_fu_112;
wire   [15:0] accPopCount_V_0_0_1_fu_499_p3;
reg   [15:0] accPopCount_V_0_1_fu_116;
wire   [15:0] accPopCount_V_0_1_1_fu_515_p3;
reg   [15:0] accPopCount_V_0_2_fu_120;
wire   [15:0] accPopCount_V_0_2_1_fu_531_p3;
reg   [15:0] accPopCount_V_0_3_fu_124;
wire   [15:0] accPopCount_V_0_3_1_fu_547_p3;
reg   [15:0] accPopCount_V_1_fu_128;
wire   [15:0] accPopCount_V_1_0_1_fu_491_p3;
reg   [15:0] accPopCount_V_1_1_fu_132;
wire   [15:0] accPopCount_V_1_1_1_fu_507_p3;
reg   [15:0] accPopCount_V_1_2_fu_136;
wire   [15:0] accPopCount_V_1_2_1_fu_523_p3;
reg   [15:0] accPopCount_V_1_3_fu_140;
wire   [15:0] accPopCount_V_1_3_1_fu_539_p3;
reg   [31:0] sf_fu_148;
reg   [15:0] accPopCount_0_0_V_4_fu_152;
reg   [15:0] accPopCount_0_1_V_4_fu_156;
reg   [15:0] accPopCount_0_2_V_4_fu_160;
reg   [15:0] accPopCount_0_3_V_4_fu_164;
reg  signed [15:0] accPopCount_V_1_0_2_fu_168;
reg  signed [15:0] accPopCount_V_1_1_2_fu_172;
reg  signed [15:0] accPopCount_V_1_2_2_fu_176;
reg  signed [15:0] accPopCount_V_1_3_2_fu_180;
wire   [0:0] tmp_1205_fu_487_p1;
wire   [31:0] tmp_1207_fu_665_p2;
wire   [31:0] tmp1_fu_671_p2;
wire   [31:0] tmp_1206_fu_659_p2;
wire   [0:0] tmp_64_fu_710_p2;
wire  signed [15:0] accPopCount_0_0_V_s_fu_760_p1;
wire  signed [15:0] accPopCount_0_1_V_s_fu_770_p1;
wire  signed [15:0] accPopCount_0_2_V_s_fu_806_p1;
wire  signed [15:0] accPopCount_0_3_V_s_fu_816_p1;
wire   [31:0] rhs_V_2_fu_965_p3;
wire   [48:0] rhs_V_2_cast3_fu_972_p1;
wire   [48:0] tmp_67_fu_962_p1;
wire   [48:0] ret_V_fu_976_p2;
wire   [31:0] rhs_V_2_1_fu_995_p3;
wire   [48:0] rhs_V_2_1_cast5_fu_1002_p1;
wire   [48:0] tmp_163_1_fu_992_p1;
wire   [48:0] ret_V_1_fu_1006_p2;
wire   [31:0] rhs_V_2_2_fu_1025_p3;
wire   [48:0] rhs_V_2_2_cast7_fu_1032_p1;
wire   [48:0] tmp_163_2_fu_1022_p1;
wire   [48:0] ret_V_2_fu_1036_p2;
wire   [31:0] rhs_V_2_3_fu_1055_p3;
wire   [48:0] rhs_V_2_3_cast9_fu_1062_p1;
wire   [48:0] tmp_163_3_fu_1052_p1;
wire   [48:0] ret_V_3_fu_1066_p2;
wire   [23:0] accResidual_0_V_fu_1116_p3;
wire   [23:0] accResidual_1_V_fu_1121_p3;
wire   [23:0] accResidual_2_V_fu_1164_p3;
wire   [23:0] accResidual_3_V_fu_1178_p3;
reg    grp_fu_920_ce;
reg    grp_fu_932_ce;
reg    grp_fu_944_ce;
reg    grp_fu_956_ce;
reg    grp_fu_1204_ce;
reg    grp_fu_1210_ce;
reg    grp_fu_1216_ce;
reg    grp_fu_1221_ce;
reg    grp_fu_1226_ce;
reg    grp_fu_1233_ce;
reg    grp_fu_1240_ce;
reg    grp_fu_1246_ce;
wire    ap_CS_fsm_state29;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_293;
reg    ap_condition_349;
reg    ap_condition_1454;
reg    ap_condition_1458;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

StreamingMatrixVecto_7_inputBuf_V #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
inputBuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_V_address0),
    .ce0(inputBuf_V_ce0),
    .we0(inputBuf_V_we0),
    .d0(tmp_V_reg_1425),
    .q0(inputBuf_V_q0)
);

NaivePopCount grp_NaivePopCount_fu_425(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_V_read(grp_NaivePopCount_fu_425_in_V_read),
    .ap_return(grp_NaivePopCount_fu_425_ap_return),
    .ap_ce(grp_NaivePopCount_fu_425_ap_ce)
);

NaivePopCount grp_NaivePopCount_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_V_read(grp_NaivePopCount_fu_430_in_V_read),
    .ap_return(grp_NaivePopCount_fu_430_ap_return),
    .ap_ce(grp_NaivePopCount_fu_430_ap_ce)
);

BlackBoxJam_mul_24s_24s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 48 ))
BlackBoxJam_mul_24s_24s_48_4_1_U539(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_169_1_reg_1631),
    .din1(alphaMem_0_V_load_reg_1641),
    .ce(grp_fu_920_ce),
    .dout(grp_fu_920_p2)
);

BlackBoxJam_mul_24s_24s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 48 ))
BlackBoxJam_mul_24s_24s_48_4_1_U540(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_169_1_1_reg_1636),
    .din1(alphaMem_1_V_load_reg_1646),
    .ce(grp_fu_932_ce),
    .dout(grp_fu_932_p2)
);

BlackBoxJam_mul_24s_24s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 48 ))
BlackBoxJam_mul_24s_24s_48_4_1_U541(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_169_1_2_reg_1661),
    .din1(alphaMem_2_V_load_reg_1651),
    .ce(grp_fu_944_ce),
    .dout(grp_fu_944_p2)
);

BlackBoxJam_mul_24s_24s_48_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 48 ))
BlackBoxJam_mul_24s_24s_48_4_1_U542(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_169_1_3_reg_1666),
    .din1(alphaMem_3_V_load_reg_1656),
    .ce(grp_fu_956_ce),
    .dout(grp_fu_956_p2)
);

BlackBoxJam_mul_mul_16s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mul_mul_16s_24s_24_3_1_U543(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_0_0_V_reg_1515),
    .din1(means_in4_V_0),
    .ce(grp_fu_1204_ce),
    .dout(grp_fu_1204_p2)
);

BlackBoxJam_mul_mul_16s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mul_mul_16s_24s_24_3_1_U544(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_0_1_V_reg_1520),
    .din1(means_in4_V_0),
    .ce(grp_fu_1210_ce),
    .dout(grp_fu_1210_p2)
);

BlackBoxJam_mul_mul_16s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mul_mul_16s_24s_24_3_1_U545(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_0_2_V_reg_1525),
    .din1(means_in4_V_0_load_reg_1540),
    .ce(grp_fu_1216_ce),
    .dout(grp_fu_1216_p2)
);

BlackBoxJam_mul_mul_16s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mul_mul_16s_24s_24_3_1_U546(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_0_3_V_reg_1530),
    .din1(means_in4_V_0_load_reg_1540),
    .ce(grp_fu_1221_ce),
    .dout(grp_fu_1221_p2)
);

BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U547(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_V_1_0_2_fu_168),
    .din1(means_in4_V_1),
    .din2(tmp_68_reg_1581),
    .ce(grp_fu_1226_ce),
    .dout(grp_fu_1226_p3)
);

BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U548(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_V_1_1_2_fu_172),
    .din1(means_in4_V_1),
    .din2(tmp_168_0_1_reg_1586),
    .ce(grp_fu_1233_ce),
    .dout(grp_fu_1233_p3)
);

BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U549(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_V_1_2_2_fu_176),
    .din1(means_in4_V_1_load_reg_1568),
    .din2(tmp_168_0_2_reg_1621),
    .ce(grp_fu_1240_ce),
    .dout(grp_fu_1240_p3)
);

BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mac_muladd_16s_24s_24s_24_3_1_U550(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accPopCount_V_1_3_2_fu_180),
    .din1(means_in4_V_1_load_reg_1568),
    .din2(tmp_168_0_3_reg_1626),
    .ce(grp_fu_1246_ce),
    .dout(grp_fu_1246_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd1) & (exitcond_reg_1376_pp0_iter5_reg == 1'd0))) begin
        accPopCount_0_0_V_4_fu_152 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd0) & (exitcond_reg_1376_pp0_iter5_reg == 1'd0))) begin
        accPopCount_0_0_V_4_fu_152 <= accPopCount_0_0_V_fu_764_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_0_0_V_4_fu_152 <= accPopCount_V_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd1) & (exitcond_reg_1376_pp0_iter5_reg == 1'd0))) begin
        accPopCount_0_1_V_4_fu_156 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd0) & (exitcond_reg_1376_pp0_iter5_reg == 1'd0))) begin
        accPopCount_0_1_V_4_fu_156 <= accPopCount_0_1_V_fu_774_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_0_1_V_4_fu_156 <= accPopCount_V_0_1_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_0_2_V_4_fu_160 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd0) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_0_2_V_4_fu_160 <= accPopCount_0_2_V_fu_810_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_0_2_V_4_fu_160 <= accPopCount_V_0_2_fu_120;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_0_3_V_4_fu_164 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd0) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_0_3_V_4_fu_164 <= accPopCount_0_3_V_fu_820_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_0_3_V_4_fu_164 <= accPopCount_V_0_3_fu_124;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_V_1_0_2_fu_168 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_V_1_0_2_fu_168 <= accPopCount_V_1_fu_128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        accPopCount_V_1_1_2_fu_172 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_V_1_1_2_fu_172 <= accPopCount_V_1_1_fu_132;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter7_reg == 1'd0))) begin
        accPopCount_V_1_2_2_fu_176 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_V_1_2_2_fu_176 <= accPopCount_V_1_2_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter7_reg == 1'd0))) begin
        accPopCount_V_1_3_2_fu_180 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        accPopCount_V_1_3_2_fu_180 <= accPopCount_V_1_3_fu_140;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_293)) begin
        if (((tmp_62_fu_682_p2 == 1'd0) & (exitcond_reg_1376 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_406 <= ap_phi_mux_nf_phi_fu_387_p4;
        end else if (((tmp_62_fu_682_p2 == 1'd1) & (exitcond_reg_1376 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_406 <= nf_5_fu_691_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_nf_1_reg_406 <= ap_phi_reg_pp0_iter0_nf_1_reg_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_349)) begin
        if (((tmp_s_reg_1396 == 1'd1) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_s_reg_416 <= tmp_V_reg_1425;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_s_reg_416 <= ap_phi_reg_pp0_iter1_p_s_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        i8_reg_395 <= 15'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_1376 == 1'd0))) begin
        i8_reg_395 <= i_reg_1380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd0))) begin
        in_idx_reg_372 <= in_idx_4_fu_481_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_idx_reg_372 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
        nf_reg_383 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0))) begin
        nf_reg_383 <= p_nf_1_reg_1459;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_fu_682_p2 == 1'd0) & (exitcond_reg_1376 == 1'd0))) begin
        sf_fu_148 <= sf_5_reg_1390;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_fu_682_p2 == 1'd1) & (exitcond_reg_1376 == 1'd0)))) begin
        sf_fu_148 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accPopCount_0_0_V_reg_1515 <= accPopCount_0_0_V_fu_764_p2;
        accPopCount_0_1_V_reg_1520 <= accPopCount_0_1_V_fu_774_p2;
        exitcond_reg_1376 <= exitcond_fu_635_p2;
        exitcond_reg_1376_pp0_iter10_reg <= exitcond_reg_1376_pp0_iter9_reg;
        exitcond_reg_1376_pp0_iter11_reg <= exitcond_reg_1376_pp0_iter10_reg;
        exitcond_reg_1376_pp0_iter12_reg <= exitcond_reg_1376_pp0_iter11_reg;
        exitcond_reg_1376_pp0_iter1_reg <= exitcond_reg_1376;
        exitcond_reg_1376_pp0_iter2_reg <= exitcond_reg_1376_pp0_iter1_reg;
        exitcond_reg_1376_pp0_iter3_reg <= exitcond_reg_1376_pp0_iter2_reg;
        exitcond_reg_1376_pp0_iter4_reg <= exitcond_reg_1376_pp0_iter3_reg;
        exitcond_reg_1376_pp0_iter5_reg <= exitcond_reg_1376_pp0_iter4_reg;
        exitcond_reg_1376_pp0_iter6_reg <= exitcond_reg_1376_pp0_iter5_reg;
        exitcond_reg_1376_pp0_iter7_reg <= exitcond_reg_1376_pp0_iter6_reg;
        exitcond_reg_1376_pp0_iter8_reg <= exitcond_reg_1376_pp0_iter7_reg;
        exitcond_reg_1376_pp0_iter9_reg <= exitcond_reg_1376_pp0_iter8_reg;
        masked_V_0_1_reg_1490 <= masked_V_0_1_fu_739_p2;
        masked_V_reg_1485 <= masked_V_fu_734_p2;
        p_1_reg_1479 <= p_1_fu_728_p2;
        tmp_61_reg_1431[31 : 0] <= tmp_61_fu_701_p1[31 : 0];
        tmp_63_reg_1447_pp0_iter2_reg[31 : 0] <= tmp_63_reg_1447[31 : 0];
        tmp_63_reg_1447_pp0_iter3_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter2_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter4_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter3_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter5_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter4_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter6_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter5_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter7_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter6_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter8_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter7_reg[31 : 0];
        tmp_63_reg_1447_pp0_iter9_reg[31 : 0] <= tmp_63_reg_1447_pp0_iter8_reg[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        accPopCount_0_2_V_reg_1525 <= accPopCount_0_2_V_fu_810_p2;
        accPopCount_0_3_V_reg_1530 <= accPopCount_0_3_V_fu_820_p2;
        masked_V_0_2_reg_1505 <= masked_V_0_2_fu_744_p2;
        masked_V_0_3_reg_1510 <= masked_V_0_3_fu_749_p2;
        tmp_62_reg_1411_pp0_iter10_reg <= tmp_62_reg_1411_pp0_iter9_reg;
        tmp_62_reg_1411_pp0_iter11_reg <= tmp_62_reg_1411_pp0_iter10_reg;
        tmp_62_reg_1411_pp0_iter1_reg <= tmp_62_reg_1411;
        tmp_62_reg_1411_pp0_iter2_reg <= tmp_62_reg_1411_pp0_iter1_reg;
        tmp_62_reg_1411_pp0_iter3_reg <= tmp_62_reg_1411_pp0_iter2_reg;
        tmp_62_reg_1411_pp0_iter4_reg <= tmp_62_reg_1411_pp0_iter3_reg;
        tmp_62_reg_1411_pp0_iter5_reg <= tmp_62_reg_1411_pp0_iter4_reg;
        tmp_62_reg_1411_pp0_iter6_reg <= tmp_62_reg_1411_pp0_iter5_reg;
        tmp_62_reg_1411_pp0_iter7_reg <= tmp_62_reg_1411_pp0_iter6_reg;
        tmp_62_reg_1411_pp0_iter8_reg <= tmp_62_reg_1411_pp0_iter7_reg;
        tmp_62_reg_1411_pp0_iter9_reg <= tmp_62_reg_1411_pp0_iter8_reg;
        tmp_s_reg_1396_pp0_iter1_reg <= tmp_s_reg_1396;
        weightMem_0_V_load_reg_1469 <= weightMem_0_V_q0;
        weightMem_1_V_load_reg_1474 <= weightMem_1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd0))) begin
        accPopCount_V_0_1_fu_116 <= accPopCount_V_0_1_1_fu_515_p3;
        accPopCount_V_0_2_fu_120 <= accPopCount_V_0_2_1_fu_531_p3;
        accPopCount_V_0_3_fu_124 <= accPopCount_V_0_3_1_fu_547_p3;
        accPopCount_V_1_1_fu_132 <= accPopCount_V_1_1_1_fu_507_p3;
        accPopCount_V_1_2_fu_136 <= accPopCount_V_1_2_1_fu_523_p3;
        accPopCount_V_1_3_fu_140 <= accPopCount_V_1_3_1_fu_539_p3;
        accPopCount_V_1_fu_128 <= accPopCount_V_1_0_1_fu_491_p3;
        accPopCount_V_fu_112 <= accPopCount_V_0_0_1_fu_499_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter10_reg == 1'd1) & (exitcond_reg_1376_pp0_iter10_reg == 1'd0))) begin
        addconv_0_1_reg_1834 <= addconv_0_1_fu_1111_p2;
        addconv_reg_1818 <= addconv_fu_1096_p2;
        means_out4_V_0_load_reg_1805 <= means_out4_V_0;
        tmp_165_2_reg_1785 <= {{ret_V_2_fu_1036_p2[31:8]}};
        tmp_165_3_reg_1792 <= {{ret_V_3_fu_1066_p2[31:8]}};
        tmp_176_0_1_reg_1823 <= tmp_176_0_1_fu_1101_p2;
        tmp_179_0_1_reg_1829 <= tmp_179_0_1_fu_1106_p2;
        tmp_70_reg_1799 <= tmp_70_fu_1082_p2;
        tmp_71_reg_1813 <= tmp_71_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter10_reg == 1'd1) & (exitcond_reg_1376_pp0_iter11_reg == 1'd0))) begin
        addconv_0_2_reg_1850 <= addconv_0_2_fu_1135_p2;
        addconv_0_3_reg_1866 <= addconv_0_3_fu_1148_p2;
        tmp_176_0_2_reg_1839 <= tmp_176_0_2_fu_1126_p2;
        tmp_176_0_3_reg_1855 <= tmp_176_0_3_fu_1139_p2;
        tmp_176_1_1_reg_1876 <= tmp_176_1_1_fu_1158_p2;
        tmp_176_1_reg_1871 <= tmp_176_1_fu_1152_p2;
        tmp_179_0_2_reg_1845 <= tmp_179_0_2_fu_1131_p2;
        tmp_179_0_3_reg_1861 <= tmp_179_0_3_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter7_reg == 1'd1) & (exitcond_reg_1376_pp0_iter7_reg == 1'd0))) begin
        alphaMem_0_V_load_reg_1641 <= alphaMem_0_V_q0;
        alphaMem_1_V_load_reg_1646 <= alphaMem_1_V_q0;
        alphaMem_2_V_load_reg_1651 <= alphaMem_2_V_q0;
        alphaMem_3_V_load_reg_1656 <= alphaMem_3_V_q0;
        tmp_168_0_2_reg_1621 <= grp_fu_1216_p2;
        tmp_168_0_3_reg_1626 <= grp_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_p_s_reg_416 <= ap_phi_reg_pp0_iter0_p_s_reg_416;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1380 <= i_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0) & (tmp_s_reg_1396 == 1'd0))) begin
        inputBuf_V_load_reg_1464 <= inputBuf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter5_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        means_in4_V_0_load_reg_1540 <= means_in4_V_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter6_reg == 1'd0))) begin
        means_in4_V_1_load_reg_1568 <= means_in4_V_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_1376 == 1'd0))) begin
        p_nf_1_reg_1459 <= p_nf_1_fu_716_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter9_reg == 1'd1) & (exitcond_reg_1376_pp0_iter9_reg == 1'd0))) begin
        r_V_5_1_reg_1741 <= grp_fu_932_p2;
        r_V_5_reg_1731 <= grp_fu_920_p2;
        thresMem_0_V_load_reg_1736 <= thresMem_0_V_q0;
        thresMem_1_V_load_reg_1746 <= thresMem_1_V_q0;
        thresMem_2_V_load_reg_1751 <= thresMem_2_V_q0;
        thresMem_3_V_load_reg_1756 <= thresMem_3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter9_reg == 1'd1) & (exitcond_reg_1376_pp0_iter10_reg == 1'd0))) begin
        r_V_5_2_reg_1775 <= grp_fu_944_p2;
        r_V_5_3_reg_1780 <= grp_fu_956_p2;
        tmp_165_1_reg_1768 <= {{ret_V_1_fu_1006_p2[31:8]}};
        tmp_69_reg_1761 <= {{ret_V_fu_976_p2[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_467 <= grp_NaivePopCount_fu_425_ap_return;
        reg_471 <= grp_NaivePopCount_fu_430_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_fu_635_p2 == 1'd0))) begin
        sf_5_reg_1390 <= sf_5_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_reg_1376 == 1'd0))) begin
        sf_load83_reg_1400 <= sf_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_fu_635_p2 == 1'd0))) begin
        sf_load_reg_1385 <= sf_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter6_reg == 1'd1) & (exitcond_reg_1376_pp0_iter7_reg == 1'd0))) begin
        tmp_168_0_1_reg_1586 <= grp_fu_1210_p2;
        tmp_68_reg_1581 <= grp_fu_1204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter7_reg == 1'd1) & (exitcond_reg_1376_pp0_iter7_reg == 1'd0))) begin
        tmp_169_1_1_reg_1636 <= grp_fu_1233_p3;
        tmp_169_1_reg_1631 <= grp_fu_1226_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_62_reg_1411_pp0_iter7_reg == 1'd1) & (exitcond_reg_1376_pp0_iter8_reg == 1'd0))) begin
        tmp_169_1_2_reg_1661 <= grp_fu_1240_p3;
        tmp_169_1_3_reg_1666 <= grp_fu_1246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter11_reg == 1'd1) & (exitcond_reg_1376_pp0_iter11_reg == 1'd0))) begin
        tmp_176_1_2_reg_1881 <= tmp_176_1_2_fu_1183_p2;
        tmp_176_1_3_reg_1886 <= tmp_176_1_3_fu_1189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_reg_1376 == 1'd0))) begin
        tmp_60_reg_1406 <= tmp_60_fu_676_p2;
        tmp_62_reg_1411 <= tmp_62_fu_682_p2;
        tmp_s_reg_1396 <= tmp_s_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411 == 1'd1) & (exitcond_reg_1376 == 1'd0))) begin
        tmp_63_reg_1447[31 : 0] <= tmp_63_fu_706_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op131_read_state5 == 1'b1))) begin
        tmp_V_reg_1425 <= in_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alphaMem_0_V_ce0 = 1'b1;
    end else begin
        alphaMem_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alphaMem_1_V_ce0 = 1'b1;
    end else begin
        alphaMem_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alphaMem_2_V_ce0 = 1'b1;
    end else begin
        alphaMem_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alphaMem_3_V_ce0 = 1'b1;
    end else begin
        alphaMem_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_635_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i8_phi_fu_399_p4 = i_reg_1380;
    end else begin
        ap_phi_mux_i8_phi_fu_399_p4 = i8_reg_395;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_nf_phi_fu_387_p4 = p_nf_1_reg_1459;
    end else begin
        ap_phi_mux_nf_phi_fu_387_p4 = nf_reg_383;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_s_reg_1396_pp0_iter1_reg == 1'd0) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_s_phi_fu_419_p4 = inputBuf_V_load_reg_1464;
    end else begin
        ap_phi_mux_p_s_phi_fu_419_p4 = ap_phi_reg_pp0_iter2_p_s_reg_416;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp159) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp165) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_NaivePopCount_fu_425_ap_ce = 1'b1;
    end else begin
        grp_NaivePopCount_fu_425_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_NaivePopCount_fu_425_in_V_read = masked_V_0_2_reg_1505;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_NaivePopCount_fu_425_in_V_read = masked_V_reg_1485;
    end else begin
        grp_NaivePopCount_fu_425_in_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp160) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp166) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_NaivePopCount_fu_430_ap_ce = 1'b1;
    end else begin
        grp_NaivePopCount_fu_430_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_NaivePopCount_fu_430_in_V_read = masked_V_0_3_reg_1510;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_NaivePopCount_fu_430_in_V_read = masked_V_0_1_reg_1490;
    end else begin
        grp_NaivePopCount_fu_430_in_V_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1204_ce = 1'b1;
    end else begin
        grp_fu_1204_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1210_ce = 1'b1;
    end else begin
        grp_fu_1210_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1216_ce = 1'b1;
    end else begin
        grp_fu_1216_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1221_ce = 1'b1;
    end else begin
        grp_fu_1221_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1226_ce = 1'b1;
    end else begin
        grp_fu_1226_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1233_ce = 1'b1;
    end else begin
        grp_fu_1233_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1240_ce = 1'b1;
    end else begin
        grp_fu_1240_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1246_ce = 1'b1;
    end else begin
        grp_fu_1246_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_920_ce = 1'b1;
    end else begin
        grp_fu_920_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_932_ce = 1'b1;
    end else begin
        grp_fu_932_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_944_ce = 1'b1;
    end else begin
        grp_fu_944_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_956_ce = 1'b1;
    end else begin
        grp_fu_956_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_s_reg_1396 == 1'd1) & (exitcond_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op131_read_state5 == 1'b1))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            inputBuf_V_address0 = tmp_57_fu_724_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            inputBuf_V_address0 = tmp_58_fu_697_p1;
        end else begin
            inputBuf_V_address0 = 'bx;
        end
    end else begin
        inputBuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_V_ce0 = 1'b1;
    end else begin
        inputBuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_s_reg_1396 == 1'd1) & (exitcond_reg_1376_pp0_iter1_reg == 1'd0))) begin
        inputBuf_V_we0 = 1'b1;
    end else begin
        inputBuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (tmp_62_reg_1411_pp0_iter11_reg == 1'd1) & (exitcond_reg_1376_pp0_iter12_reg == 1'd0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_62_reg_1411_pp0_iter11_reg == 1'd1) & (exitcond_reg_1376_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if ((1'b1 == ap_condition_1458)) begin
            out_V_V_din = tmp_V_15_fu_1195_p5;
        end else if ((1'b1 == ap_condition_1454)) begin
            out_V_V_din = tmp_V_14_fu_1169_p5;
        end else begin
            out_V_V_din = 'bx;
        end
    end else begin
        out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op345_write_state27 == 1'b1)))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        thresMem_0_V_ce0 = 1'b1;
    end else begin
        thresMem_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        thresMem_1_V_ce0 = 1'b1;
    end else begin
        thresMem_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        thresMem_2_V_ce0 = 1'b1;
    end else begin
        thresMem_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        thresMem_3_V_ce0 = 1'b1;
    end else begin
        thresMem_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weightMem_0_V_ce0 = 1'b1;
    end else begin
        weightMem_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weightMem_1_V_ce0 = 1'b1;
    end else begin
        weightMem_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weightMem_2_V_ce0 = 1'b1;
    end else begin
        weightMem_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weightMem_3_V_ce0 = 1'b1;
    end else begin
        weightMem_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_635_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_635_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accPopCount_0_0_V_fu_764_p2 = ($signed(accPopCount_0_0_V_4_fu_152) + $signed(accPopCount_0_0_V_s_fu_760_p1));

assign accPopCount_0_0_V_s_fu_760_p1 = $signed(reg_467);

assign accPopCount_0_1_V_fu_774_p2 = ($signed(accPopCount_0_1_V_4_fu_156) + $signed(accPopCount_0_1_V_s_fu_770_p1));

assign accPopCount_0_1_V_s_fu_770_p1 = $signed(reg_471);

assign accPopCount_0_2_V_fu_810_p2 = ($signed(accPopCount_0_2_V_4_fu_160) + $signed(accPopCount_0_2_V_s_fu_806_p1));

assign accPopCount_0_2_V_s_fu_806_p1 = $signed(reg_467);

assign accPopCount_0_3_V_fu_820_p2 = ($signed(accPopCount_0_3_V_4_fu_164) + $signed(accPopCount_0_3_V_s_fu_816_p1));

assign accPopCount_0_3_V_s_fu_816_p1 = $signed(reg_471);

assign accPopCount_V_0_0_1_fu_499_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? accPopCount_V_fu_112 : 16'd0);

assign accPopCount_V_0_1_1_fu_515_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? accPopCount_V_0_1_fu_116 : 16'd0);

assign accPopCount_V_0_2_1_fu_531_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? accPopCount_V_0_2_fu_120 : 16'd0);

assign accPopCount_V_0_3_1_fu_547_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? accPopCount_V_0_3_fu_124 : 16'd0);

assign accPopCount_V_1_0_1_fu_491_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? 16'd0 : accPopCount_V_1_fu_128);

assign accPopCount_V_1_1_1_fu_507_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? 16'd0 : accPopCount_V_1_1_fu_132);

assign accPopCount_V_1_2_1_fu_523_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? 16'd0 : accPopCount_V_1_2_fu_136);

assign accPopCount_V_1_3_1_fu_539_p3 = ((tmp_1205_fu_487_p1[0:0] === 1'b1) ? 16'd0 : accPopCount_V_1_3_fu_140);

assign accResidual_0_V_fu_1116_p3 = ((tmp_70_reg_1799[0:0] === 1'b1) ? tmp_71_reg_1813 : addconv_reg_1818);

assign accResidual_1_V_fu_1121_p3 = ((tmp_176_0_1_reg_1823[0:0] === 1'b1) ? tmp_179_0_1_reg_1829 : addconv_0_1_reg_1834);

assign accResidual_2_V_fu_1164_p3 = ((tmp_176_0_2_reg_1839[0:0] === 1'b1) ? tmp_179_0_2_reg_1845 : addconv_0_2_reg_1850);

assign accResidual_3_V_fu_1178_p3 = ((tmp_176_0_3_reg_1855[0:0] === 1'b1) ? tmp_179_0_3_reg_1861 : addconv_0_3_reg_1866);

assign addconv_0_1_fu_1111_p2 = (tmp_165_1_reg_1768 + means_out4_V_0);

assign addconv_0_2_fu_1135_p2 = (tmp_165_2_reg_1785 + means_out4_V_0_load_reg_1805);

assign addconv_0_3_fu_1148_p2 = (tmp_165_3_reg_1792 + means_out4_V_0_load_reg_1805);

assign addconv_fu_1096_p2 = (tmp_69_reg_1761 + means_out4_V_0);

assign alphaMem_0_V_address0 = tmp_63_reg_1447_pp0_iter7_reg;

assign alphaMem_1_V_address0 = tmp_63_reg_1447_pp0_iter7_reg;

assign alphaMem_2_V_address0 = tmp_63_reg_1447_pp0_iter7_reg;

assign alphaMem_3_V_address0 = tmp_63_reg_1447_pp0_iter7_reg;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op345_write_state27 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op131_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op345_write_state27 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op131_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp165 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op345_write_state27 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op131_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp166 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op345_write_state27 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op131_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op345_write_state27 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op131_read_state5 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp159 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp160 = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter3_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter3_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter8_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter8_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter9_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter9_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter9_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter9_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter10_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter10_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter10_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter10_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter11_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter11_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter11_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter11_ignore_call21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_pp0_stage0_iter12 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op345_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter12_ignore_call15 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op345_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter12_ignore_call21 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op345_write_state27 == 1'b1));
end

always @ (*) begin
    ap_block_state28_pp0_stage1_iter12 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_state28_pp0_stage1_iter12_ignore_call15 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_block_state28_pp0_stage1_iter12_ignore_call21 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op349_write_state28 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0_ignore_call21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op131_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1_ignore_call15 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op131_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1_ignore_call21 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op131_read_state5 == 1'b1));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3_ignore_call21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1454 = ((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op345_write_state27 == 1'b1));
end

always @ (*) begin
    ap_condition_1458 = ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op349_write_state28 == 1'b1));
end

always @ (*) begin
    ap_condition_293 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_349 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_nf_1_reg_406 = 'bx;

assign ap_phi_reg_pp0_iter0_p_s_reg_416 = 'bx;

always @ (*) begin
    ap_predicate_op131_read_state5 = ((tmp_s_reg_1396 == 1'd1) & (exitcond_reg_1376 == 1'd0));
end

always @ (*) begin
    ap_predicate_op345_write_state27 = ((tmp_62_reg_1411_pp0_iter11_reg == 1'd1) & (exitcond_reg_1376_pp0_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op349_write_state28 = ((tmp_62_reg_1411_pp0_iter11_reg == 1'd1) & (exitcond_reg_1376_pp0_iter12_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign exitcond_fu_635_p2 = ((ap_phi_mux_i8_phi_fu_399_p4 == 15'd20736) ? 1'b1 : 1'b0);

assign i_fu_641_p2 = (ap_phi_mux_i8_phi_fu_399_p4 + 15'd1);

assign in_idx_4_fu_481_p2 = (in_idx_reg_372 + 2'd1);

assign masked_V_0_1_fu_739_p2 = (weightMem_1_V_load_reg_1474 ^ p_1_fu_728_p2);

assign masked_V_0_2_fu_744_p2 = (weightMem_2_V_q0 ^ p_1_reg_1479);

assign masked_V_0_3_fu_749_p2 = (weightMem_3_V_q0 ^ p_1_reg_1479);

assign masked_V_fu_734_p2 = (weightMem_0_V_load_reg_1469 ^ p_1_fu_728_p2);

assign nf_5_fu_691_p2 = (ap_phi_mux_nf_phi_fu_387_p4 + 32'd1);

assign p_1_fu_728_p2 = (ap_phi_mux_p_s_phi_fu_419_p4 ^ 32'd4294967295);

assign p_nf_1_fu_716_p3 = ((tmp_64_fu_710_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_reg_pp0_iter1_nf_1_reg_406);

assign ret_V_1_fu_1006_p2 = (rhs_V_2_1_cast5_fu_1002_p1 + tmp_163_1_fu_992_p1);

assign ret_V_2_fu_1036_p2 = (rhs_V_2_2_cast7_fu_1032_p1 + tmp_163_2_fu_1022_p1);

assign ret_V_3_fu_1066_p2 = (rhs_V_2_3_cast9_fu_1062_p1 + tmp_163_3_fu_1052_p1);

assign ret_V_fu_976_p2 = (rhs_V_2_cast3_fu_972_p1 + tmp_67_fu_962_p1);

assign rhs_V_2_1_cast5_fu_1002_p1 = rhs_V_2_1_fu_995_p3;

assign rhs_V_2_1_fu_995_p3 = {{thresMem_1_V_load_reg_1746}, {8'd0}};

assign rhs_V_2_2_cast7_fu_1032_p1 = rhs_V_2_2_fu_1025_p3;

assign rhs_V_2_2_fu_1025_p3 = {{thresMem_2_V_load_reg_1751}, {8'd0}};

assign rhs_V_2_3_cast9_fu_1062_p1 = rhs_V_2_3_fu_1055_p3;

assign rhs_V_2_3_fu_1055_p3 = {{thresMem_3_V_load_reg_1756}, {8'd0}};

assign rhs_V_2_cast3_fu_972_p1 = rhs_V_2_fu_965_p3;

assign rhs_V_2_fu_965_p3 = {{thresMem_0_V_load_reg_1736}, {8'd0}};

assign sf_5_fu_647_p2 = (32'd1 + sf_fu_148);

assign start_out = real_start;

assign thresMem_0_V_address0 = tmp_63_reg_1447_pp0_iter9_reg;

assign thresMem_1_V_address0 = tmp_63_reg_1447_pp0_iter9_reg;

assign thresMem_2_V_address0 = tmp_63_reg_1447_pp0_iter9_reg;

assign thresMem_3_V_address0 = tmp_63_reg_1447_pp0_iter9_reg;

assign tmp1_fu_671_p2 = (tmp_1207_fu_665_p2 + sf_load_reg_1385);

assign tmp_1205_fu_487_p1 = in_idx_reg_372[0:0];

assign tmp_1206_fu_659_p2 = ap_phi_mux_nf_phi_fu_387_p4 << 32'd5;

assign tmp_1207_fu_665_p2 = ap_phi_mux_nf_phi_fu_387_p4 << 32'd2;

assign tmp_163_1_fu_992_p1 = r_V_5_1_reg_1741;

assign tmp_163_2_fu_1022_p1 = r_V_5_2_reg_1775;

assign tmp_163_3_fu_1052_p1 = r_V_5_3_reg_1780;

assign tmp_176_0_1_fu_1101_p2 = (($signed(tmp_165_1_reg_1768) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_0_2_fu_1126_p2 = (($signed(tmp_165_2_reg_1785) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_0_3_fu_1139_p2 = (($signed(tmp_165_3_reg_1792) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_1_1_fu_1158_p2 = (($signed(accResidual_1_V_fu_1121_p3) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_1_2_fu_1183_p2 = (($signed(accResidual_2_V_fu_1164_p3) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_1_3_fu_1189_p2 = (($signed(accResidual_3_V_fu_1178_p3) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_176_1_fu_1152_p2 = (($signed(accResidual_0_V_fu_1116_p3) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_179_0_1_fu_1106_p2 = (tmp_165_1_reg_1768 - means_out4_V_0);

assign tmp_179_0_2_fu_1131_p2 = (tmp_165_2_reg_1785 - means_out4_V_0_load_reg_1805);

assign tmp_179_0_3_fu_1144_p2 = (tmp_165_3_reg_1792 - means_out4_V_0_load_reg_1805);

assign tmp_57_fu_724_p1 = sf_load83_reg_1400;

assign tmp_58_fu_697_p1 = sf_load83_reg_1400;

assign tmp_60_fu_676_p2 = (tmp1_fu_671_p2 + tmp_1206_fu_659_p2);

assign tmp_61_fu_701_p1 = tmp_60_reg_1406;

assign tmp_62_fu_682_p2 = ((sf_5_reg_1390 == 32'd36) ? 1'b1 : 1'b0);

assign tmp_63_fu_706_p1 = nf_reg_383;

assign tmp_64_fu_710_p2 = ((ap_phi_reg_pp0_iter1_nf_1_reg_406 == 32'd64) ? 1'b1 : 1'b0);

assign tmp_67_fu_962_p1 = r_V_5_reg_1731;

assign tmp_70_fu_1082_p2 = (($signed(tmp_69_reg_1761) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_71_fu_1091_p2 = (tmp_69_reg_1761 - means_out4_V_0);

assign tmp_V_14_fu_1169_p5 = {{{{tmp_176_0_3_reg_1855}, {tmp_176_0_2_reg_1839}}, {tmp_176_0_1_reg_1823}}, {tmp_70_reg_1799}};

assign tmp_V_15_fu_1195_p5 = {{{{tmp_176_1_3_reg_1886}, {tmp_176_1_2_reg_1881}}, {tmp_176_1_1_reg_1876}}, {tmp_176_1_reg_1871}};

assign tmp_fu_475_p2 = ((in_idx_reg_372 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_s_fu_653_p2 = ((ap_phi_mux_nf_phi_fu_387_p4 == 32'd0) ? 1'b1 : 1'b0);

assign weightMem_0_V_address0 = tmp_61_fu_701_p1;

assign weightMem_1_V_address0 = tmp_61_fu_701_p1;

assign weightMem_2_V_address0 = tmp_61_reg_1431;

assign weightMem_3_V_address0 = tmp_61_reg_1431;

always @ (posedge ap_clk) begin
    tmp_61_reg_1431[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter2_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter3_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter4_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter5_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter6_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter7_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter8_reg[63:32] <= 32'b00000000000000000000000000000000;
    tmp_63_reg_1447_pp0_iter9_reg[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //StreamingMatrixVecto_3
